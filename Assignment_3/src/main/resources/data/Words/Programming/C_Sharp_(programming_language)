c sharp programming language from wikipedia free encyclopedia jump navigation search correct title this article c programming language substitution omission because technical restrictions c paradigm multi-paradigm structured imperative object-oriented event-driven task-driven functional generic reflective concurrent family c designed by microsoft developer microsoft first appeared years ago stable release / year ago preview release / years ago typing discipline static dynamic strong safe nominative partially inferred platform common language infrastructure license clr proprietary mono compiler dual gplv3 mit/x11 libraries are lgplv2 dotgnu dual gpl lgplv2 filename extensions cs website major implementations visual c net framework mono dotgnu dialects cω spec polyphonic c enhanced c influenced by c++ eiffel java modula-3 object pascal ml vb icon haskell rustj cω f influenced chapel d j dart f hack java kotlin monkey nemerle oxygene rust swift vala c sharp programming at wikibooks c pronounced see sharp multi-paradigm programming language encompassing strong typing imperative declarative functional generic object-oriented class-based component-oriented programming disciplines was developed by microsoft within its net initiative later approved standard by ecma ecma-334 iso iso/iec c one programming languages designed for common language infrastructure c general-purpose object-oriented programming language its development team led by anders hejlsberg most recent version c which was released contents design goals history o name o versions o features added versions + c + c + c + c + c + c syntax distinguishing features o portability o typing o meta programming o methods functions o property o namespace o memory access o exception o polymorphism o functional programming common type system o categories data types o boxing unboxing libraries examples standardization licensing implementations see also notes references further reading external links design goals ecma standard lists these design goals for c c language intended be simple modern general-purpose object-oriented programming language language implementations thereof should provide support for software engineering principles such strong type checking array bounds checking detection attempts use uninitialized variables automatic garbage collection software robustness durability programmer productivity are important language intended for use developing software components suitable for deployment distributed environments portability very important for source code programmers especially those already familiar with c c++ support for internationalization very important c intended be suitable for writing applications for both hosted embedded systems ranging from very large that use sophisticated operating systems down very small having dedicated functions although c applications are intended be economical with regard memory processing power requirements language was not intended compete directly on performance size with c assembly language history during development net framework class libraries were originally written using managed code compiler system called simple managed c smc january anders hejlsberg formed team build new language at time called cool which stood for c-like object oriented language microsoft had considered keeping name cool final name language but chose not do so for trademark reasons by time net project was publicly announced at july professional developers conference language had been renamed c class libraries aspnet runtime had been ported c c's principal designer lead architect at microsoft anders hejlsberg who was previously involved with design turbo pascal embarcadero delphi formerly codegear delphi inprise delphi borland delphi visual j++ interviews technical papers he has stated that flaws most major programming languages eg c++ java delphi smalltalk drove fundamentals common language runtime clr which turn drove design c language itself james gosling who created java programming language bill joy co-founder sun microsystems originator java called c imitation java gosling further said that sort java with reliability productivity security deleted klaus kreft angelika langer authors c++ streams book stated blog post that java c are almost identical programming languages boring repetition that lacks innovation hardly anybody will claim that java c are revolutionary programming languages that changed way we write programs c borrowed lot from java - vice versa now that c supports boxing unboxing we'll have very similar feature java july anders hejlsberg said that c not java clone much closer c++ its design since release c november c java languages have evolved on increasingly divergent trajectories becoming somewhat less similar one first major departures came with addition generics both languages with vastly different implementations c makes use reification provide first-class generic objects that can be used like any other class with code generation performed at class-load time furthermore c has added several major features accommodate functional-style programming culminating linq extensions released with c its supporting framework lambda expressions extension methods anonymous types these features enable c programmers use functional programming techniques such closures when advantageous their application linq extensions functional imports help developers reduce amount boilerplate code that included common tasks like querying database parsing xml file searching through data structure shifting emphasis onto actual program logic help improve readability maintainability c used have mascot called andy named after anders hejlsberg was retired on january c was originally submitted iso subcommittee jtc 1/sc for review under iso/iec was withdrawn was then approved under iso/iec name c-sharp musical note name c sharp was inspired by musical notation where sharp indicates that written note should be made semitone higher pitch this similar language name c++ where ++ indicates that variable should be incremented by sharp symbol also resembles ligature four + symbols two-by-two grid further implying that language increment c++ due technical limitations display standard fonts browsers etc fact that sharp symbol u+266f ♯ music sharp sign html &9839 not present on most keyboard layouts number sign u+0023 number sign html &35 was chosen approximate sharp symbol written name programming language this convention reflected ecma-334 c language specification however when practical do so for example advertising box art microsoft uses intended musical symbol sharp suffix has been used by number other net languages that are variants existing languages including j net language also designed by microsoft that derived from java from ada functional programming language f original implementation eiffel for net was called eiffel name retired since full eiffel language now supported suffix has also been used for libraries such gtk net wrapper for gtk+ other gnome libraries cocoa wrapper for cocoa versions version language specification date net framework visual studio ecma iso/iec microsoft c december april january january net framework visual studio net c october april net framework visual studio net c june september september november net framework visual studio c none august november net framework except linq/query extensions net framework except linq/query extensions net framework visual studio visual studio c april april net framework visual studio c progress none june august net framework visual studio visual studio c none none july net framework visual studio features added versions c generics partial types anonymous methods iterators nullable types getter/setter separate accessibility method group conversions delegates co- contra-variance for delegates static classes delegate inference c implicitly typed local variables object collection initializers auto-implemented properties anonymous types extension methods query expressions lambda expressions expression trees partial methods c dynamic binding named optional arguments generic co- contravariance embedded interop types nopia c asynchronous methods caller info attributes c compiler-as-a-service roslyn import static type members into namespace exception filters await catch/finally blocks auto property initializers default values for getter-only properties expression-bodied members null propagator null-conditional operator succinct null checking string interpolation nameof operator dictionary initializer c planned features currently development binary literals digit separators local functions type switch ref returns tuples out var pattern matching arbitrary async returns records syntax main article c sharp syntax see also syntax programming languages core syntax c language similar that other c-style languages such c c++ java particular semicolons are used denote end statement curly brackets are used group statements statements are commonly grouped into methods functions methods into classes classes into namespaces variables are assigned using equals sign but compared using two consecutive equals signs square brackets are used with arrays both declare them get value at given index one them distinguishing features see also comparison c sharp java some notable features c that distinguish from c c++ java where noted are portability by design c programming language that most directly reflects underlying common language infrastructure cli most its intrinsic types correspond value-types implemented by cli framework however language specification does not state code generation requirements compiler that does not state that c compiler must target common language runtime generate common intermediate language cil generate any other specific format theoretically c compiler could generate machine code like traditional compilers c++ fortran typing c supports strongly typed implicit variable declarations with keyword var implicitly typed arrays with keyword new followed by collection initializer c supports strict boolean data type bool statements that take conditions such while if require expression type that implements true operator such boolean type while c++ also has boolean type can be freely converted from integers expressions such ifa require only that convertible bool allowing be int pointer c disallows this integer meaning true false approach on grounds that forcing programmers use expressions that return exactly bool can prevent certain types programming mistakes such if = b use assignment = instead equality == which while not error c c++ will be caught by compiler anyway c more type safe than c++ only implicit conversions by default are those that are considered safe such widening integers this enforced at compile-time during jit some cases at runtime no implicit conversions occur between booleans integers nor between enumeration members integers except for literal which can be implicitly converted any enumerated type any user-defined conversion must be explicitly marked explicit implicit unlike c++ copy constructors conversion operators which are both implicit by default c has explicit support for covariance contravariance generic types unlike c++ which has some degree support for contravariance simply through semantics return types on virtual methods enumeration members are placed their own scope c language does not allow for global variables functions all methods members must be declared within classes static members public classes can substitute for global variables functions local variables cannot shadow variables enclosing block unlike c c++ meta programming meta programming via c attributes part language many these attributes duplicate functionality gcc's visualc++'s platform-dependent preprocessor directives methods functions like c++ unlike java c programmers must use keyword virtual allow methods be overridden by subclasses extension methods c allow programmers use static methods if they were methods from class's method table allowing programmers add methods object that they feel should exist on that object its derivatives type dynamic allows for run-time method binding allowing for javascript-like method calls run-time object composition c has support for strongly-typed function pointers via keyword delegate like qt framework's pseudo-c++ signal slot c has semantics specifically surrounding publish-subscribe style events though c uses delegates do so c offers java-like synchronized method calls via attribute has support for mutually-exclusive locks via keyword lock property c provides properties syntactic sugar for common pattern which pair methods accessor getter mutator setter encapsulate operations on single attribute class no redundant method signatures for getter/setter implementations need be written property may be accessed using attribute syntax rather than more verbose method calls namespace c namespace provides same level code isolation java package c++ namespace with very similar rules features package memory access c memory address pointers can only be used within blocks specifically marked unsafe programs with unsafe code need appropriate permissions run most object access done through safe object references which always either point live object have well-defined null value impossible obtain reference dead object one that has been garbage collected random block memory unsafe pointer can point instance value-type array string block memory allocated on stack code that not marked unsafe can still store manipulate pointers through systemintptr type but cannot dereference them managed memory cannot be explicitly freed instead automatically garbage collected garbage collection addresses problem memory leaks by freeing programmer responsibility for releasing memory that no longer needed exception checked exceptions are not present c contrast java this has been conscious decision based on issues scalability versionability polymorphism unlike c++ c does not support multiple inheritance although class can implement any number interfaces this was design decision by language's lead architect avoid complication simplify architectural requirements throughout cli when implementing multiple interfaces that contain method with same signature c allows implementing each method depending on which interface that method being called through like java allows implementing method once have that be one invocation on call through any class's interfaces however unlike java c supports operator overloading only most commonly overloaded operators c++ may be overloaded c functional programming though primarily imperative language c offered limited support for functional programming through first-class functions closures form anonymous delegates c expanded support for functional programming with introduction lightweight syntax for lambda expressions extension methods affordance for modules list comprehension syntax form query comprehension language common type system c has unified type system this unified type system called common type system cts unified type system implies that all types including primitives such integers are subclasses systemobject class for example every type inherits tostring method categories data types cts separates data types into two categories reference types value types instances value types do not have referential identity nor referential comparison semantics - equality inequality comparisons for value types compare actual data values within instances unless corresponding operators are overloaded value types are derived from systemvaluetype always have default value can always be created copied some other limitations on value types are that they cannot derive from each other but can implement interfaces cannot have explicit default parameterless constructor examples value types are all primitive types such int signed 32-bit integer float 32-bit ieee floating-point number char 16-bit unicode code unit system datetime identifies specific point time with nanosecond precision other examples are enum enumerations struct user defined structures contrast reference types have notion referential identity - each instance reference type inherently distinct from every other instance even if data within both instances same this reflected default equality inequality comparisons for reference types which test for referential rather than structural equality unless corresponding operators are overloaded such case for system string general not always possible create instance reference type nor copy existing instance perform value comparison on two existing instances though specific reference types can provide such services by exposing public constructor implementing corresponding interface such icloneable icomparable examples reference types are object ultimate base class for all other c classes systemstring string unicode characters systemarray base class for all c arrays both type categories are extensible with user-defined types boxing unboxing boxing operation converting value-type object into value corresponding reference type boxing c implicit unboxing operation converting value reference type previously boxed into value value type unboxing c requires explicit type cast boxed object type t can only be unboxed t nullable t example int foo = // value type object bar = foo // foo boxed bar int foo2 = intbar // unboxed back value type libraries c specification details minimum set types class libraries that compiler expects have available practice c most often used with some implementation common language infrastructure cli which standardized ecma-335 common language infrastructure cli examples following very simple c program version classic hello world example using system class program { static void mainstring args { consolewritelinehello world } } what will display on program hello world each line has purpose using system above line code tells compiler use system candidate prefix for types used source code this case when compiler sees use console type later source code tries find type named console first current assembly followed by all referenced assemblies this case compiler fails find such type since name type actually systemconsole compiler then attempts find type named systemconsole by using system prefix from using statement this time succeeds using statement allows programmer state all candidate prefixes use during compilation instead always using full type names class program above class definition everything between following pair braces describes program static void mainstring args this declares class member method where program begins execution net runtime calls main method note main may also be called from elsewhere like any other method eg from another method program static keyword makes method accessible without instance program each console application's main entry point must be declared static otherwise program would require instance but any instance would require program avoid that irresolvable circular dependency c compilers processing console applications like that above report error if there no static main method void keyword declares that main has no return value consolewritelinehello world this line writes output console static class system namespace provides interface standard input output error streams for console applications program calls console method writeline which displays on console line with argument string hello world gui example using systemwindowsforms class program { static void mainstring args { messageboxshowhello world systemconsolewritelineis almost same argument } } this example similar previous example except that generates dialog box that contains message hello world instead writing console standardization licensing august microsoft corporation hewlett-packard intel corporation co-sponsored submission specifications for c well common language infrastructure cli standards organization ecma international december ecma released ecma-334 c language specification c became iso standard iso/iec - information technology — programming languages — c ecma had previously adopted equivalent specifications 2nd edition c december june ecma approved edition c specification updated ecma-334 additions included partial classes anonymous methods nullable types generics somewhat similar c++ templates july ecma submitted iso/iec jtc via latter's fast-track process standards related trs this process usually takes 6–9 months c language definition cli are standardized under iso ecma standards that provide reasonable non-discriminatory licensing protection from patent claims microsoft has agreed not sue open source developers for violating patents non-profit projects for part framework that covered by osp microsoft has also agreed not enforce patents relating novell products against novell's paying customers with exception list products that do not explicitly mention c net novell's implementation net mono project however novell maintains that mono does not infringe any microsoft patents microsoft has also made specific agreement not enforce patent rights related moonlight browser plugin which depends on mono provided obtained through novell implementations reference c compiler microsoft visual c which open-source microsoft leading development new open-source c compiler set tools previously codenamed roslyn compiler which entirely written managed code c has been opened up functionality surfaced apis thus enabling developers create refactoring diagnostics tools other c compilers exist often including implementation common language infrastructure net class libraries up net mono project provides open-source c compiler complete open-source implementation common language infrastructure including required framework libraries they appear ecma specification nearly complete implementation microsoft proprietary net class libraries up net mono no plans exist implement wpf wf planned for later release there are only partial implementations linq sql wcf dotgnu project now discontinued also provided open-source c compiler nearly complete implementation common language infrastructure including required framework libraries they appear ecma specification subset some remaining microsoft proprietary net class libraries up net those not documented included ecma specification but included microsoft's standard net framework distribution microsoft's rotor project currently called shared source common language infrastructure licensed for educational research use only provides shared source implementation clr runtime c compiler subset required common language infrastructure framework libraries ecma specification up c supported on windows xp only see also c topics c syntax comparison c java comparison c visual basic net net standard libraries list net libraries frameworks implementations microsoft visual c oxygene sing computer programming portal ides microsoft visual studio microsoft visual studio express freeware monodevelop morfik sharpdevelop turbo c sharp notes for async by convention number sign used for second character normal text artistic representations sometimes true sharp sign used c♯ microsoft c specification document only contains new features for older features use specification above b c no ecma iso/iec specifications exist for c references torgersen mads october new features c microsoft retrieved october b naugler david may c for c++ java programmer conference workshop journal computing sciences colleges although c has been strongly influenced by java has also been strongly influenced by c++ best viewed descendant both c++ java hamilton naomi october a-z programming languages c computerworld retrieved february we all stand on shoulders giants here every language builds on what went before so we owe lot c c++ java delphi all these other things that came before us anders hejlsberg chapel spec acknowlegements pdf cray inc retrieved web languages vms fast code always fashion v8 dart - google i/o google retrieved december java added several new language features enhanced for loop autoboxing varargs annotations after they were introduced similar competing c language cornelius barry december java catches up with c university oxford computing services retrieved june my opinion c that has caused these radical changes java language barry cornelius lattner chris chris lattner's homepage chris lattner retrieved swift language product tireless effort from team language experts documentation gurus compiler optimization ninjas incredibly important internal dogfooding group who provided feedback help refine battle-test ideas course also greatly benefited from experiences hard-won by many other languages field drawing ideas from objective-c rust haskell ruby python clu far too many others list b c c language specification pdf 4th ed ecma international june retrieved january lander rich july top c language features net blog microsoft zander jason november couple historical facts retrieved february guthrie scott november what language was aspnet originally written retrieved february hamilton naomi october a-z programming languages c computerworld retrieved october wylie wong why microsoft's c isn't cnet cbs interactive retrieved may bill joy february microsoft's blind spot cnetcom retrieved january klaus kreft angelika langer after java c - what next retrieved june klaus kreft angelika langer july after java c - what next artimacom retrieved january osborn john august deep inside c interview with microsoft chief architect anders hejlsberg o'reilly media retrieved november generics c programming guide microsoft retrieved march don box anders hejlsberg february linq net language-integrated query microsoft retrieved march mercer ian april why functional programming linq often better than procedural code aboditcom retrieved march andy retires dan fernandez's blog blogsmsdncom january retrieved october technical committees - jtc 1/sc - programming languages their environments system software interfaces iso retrieved october iso/iec - information technology - c language specification isoorg august retrieved october iso/iec - information technology - programming languages - c isoorg january retrieved october kovacs james september c/net history lesson retrieved june hejlsberg anders october a-z programming languages c computerworld microsoft c faq microsoft archived from original on february retrieved march visual cnet standard jpeg microsoft september retrieved june f faq microsoft research archived from original on february retrieved june simon raphael stapf emmanuel meyer bertrand june full eiffel on net framework microsoft retrieved june b using c from net danielmothcom may retrieved october mono roslyn tirania blog miguel de icaza retrieved april work progress for c b c d e f g h i j what's new c language compiler microsoft developer network microsoft retrieved june b c d e f g h hejlsberg anders torgersen mads overview c microsoft developer network microsoft retrieved june ghosh wriju c partial garbage collection methods msdn blogs microsoft retrieved june line feed character |title= at position help b c d burrows chris c - new c features net framework microsoft developer network microsoft retrieved june hejlsberg anders future directions for c visual basic c lead architect microsoft retrieved september b introduction new features c msdn blogs microsoft retrieved june b c d e f g h i j language feature implementation status github microsoft retrieved february language feature status github retrieved visual studio net six-in-one wrox press isbn venners bill eckel bruce august trouble with checked exceptions retrieved march b c d archer tom part chapter type system inside c redmond washington microsoft press isbn 0-7356-1288-9 lippert eric march representation identity fabulous adventures coding blogsmsdncom retrieved october patent pledge for open source developers patent cooperation agreement - microsoft & novell interoperability collaboration microsoft november retrieved july microsoft on behalf itself its subsidiaries collectively microsoft hereby covenants not sue novell's customers novell's subsidiaries' customers for infringement under covered patents microsoft on account such customer's use specific copies covered product distributed by novell its subsidiaries collectively novell for which novell has received revenue directly indirectly for such specific copies provided foregoing covenant limited use by such customer i such specific copies that are authorized by novell consideration for such revenue ii within scope authorized by novell consideration for such revenue definitions microsoft november retrieved july steinman justin november novell answers questions from community retrieved july we maintain that mono does not infringe any microsoft patents covenant downstream recipients moonlight - microsoft & novell interoperability collaboration microsoft september retrieved march downstream recipient means entity individual that uses for its intended purpose moonlight implementation obtained directly from novell through intermediate recipient microsoft reserves right update including discontinue foregoing covenant moonlight implementation means only those specific portions moonlight moonlight that run only plug-in browser on personal computer are not licensed under gplv3 similar license compatibility - mono mono-projectcom december retrieved october further reading drayton peter albahari ben neward ted c language pocket reference o'reilly isbn 0-596-00429-x petzold charles programming microsoft windows with c microsoft press isbn 0-7356-1370-2 external links wikibooks has book on topic c sharp programming c language specification from msdn c programming guide msdn microsoft visual studio iso c language specification c features online c compiler c compiler platform roslyn source code list key features introduced csharp - infographic v t e common language infrastructure architecture application domain code access security common intermediate language cil o cil instructions common type system cts platform invocation services p/invoke virtual execution system ves components assembly delegate global assembly cache gac manifest metadata standard libraries kernel profile base class library bcl runtime infrastructure library compact profile network library reflection library xml library extended array library extended numerics library parallel library vararg library implementations microsoft net framework net compact framework net micro framework shared source common language infrastructure other net core mono portablenet languages microsoft c o visual c visual basic net c++/cli o managed f j jscript net windows powershell other axum boo cobra ironscheme o ironlisp ironpython ironruby nemerle oxygene phalanger p scala comparison c java c visual basic net java net platforms visual basic visual basic net organizations net foundation dotgnu microsoft xamarin v t e standards ecma international application interfaces ansi escape code common language infrastructure office open xml openxps file systems tape advanced intelligent tape dds dlt super dlt holographic versatile disc linear tape-open ultrium-1 vxa file systems disk cd-rom cd file system cdfs fat o fat12 o fat16 o fat16b fd udf ultra density optical universal media disc graphics universal programming languages c++/cli c eiffel javascript e4x ecmascript radio link interfaces nfc uwb other ecma-35 list ecma standards - present v t e iso standards by standard number list iso standards / iso romanizations / iec standards 1–9999 o o o o o o o o o o o o o o o o o o o 1073-1 o o o 8820-5 o o o o o o o o o -8-i o o o o o o o o 9000/9001 10000–19999 10118-3 o o o o o tr 12234-2 o o 13406-2 o o o o o o o o o o o wip 16612-2 ts 19775-1 19794-5 20000+ series 29199-2 o o o category v t e programming languages comparison timeline history assembly basic c c++ c cobol fortran go haskell java javascript js lisp lua objective-c pascal perl php python ruby shell smalltalk swift visual basic net vbnet more category comparison lists o alphabetical o categorical o generational o non-english-based authority control gnd 4616843-6 nkc ph137696 retrieved from https//enwikipediaorg/w/indexphptitle=csharpprogramminglanguage&oldid=751958941 categories c sharp programming language family net programming languages class-based programming languages ecma standards functional languages iec standards iso standards programming languages created programming languages with iso standard statically typed programming languages hidden categories articles with inconsistent citation formats cs1 errors invisible characters use mdy dates from october use british oxford english from december all wikipedia articles written british oxford english pages using deprecated image syntax all articles with unsourced statements articles with unsourced statements from february wikipedia articles with gnd identifiers navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikibooks wikiversity languages العربية azərbaycanca বাংলা bân-lâm-gú беларуская беларуская тарашкевіца‎ български bosanski català čeština dansk deutsch eesti ελληνικά español esperanto euskara فارسی français galego ગુજરાતી 客家語/hak-kâ-ngî 한국어 հայերեն हिन्दी hrvatski bahasa indonesia íslenska italiano עברית ქართული қазақша latviešu lietuvių magyar македонски മലയാളം bahasa melayu mìng-dĕ̤ng-ngṳ̄ မြန်မာဘာသာ nederlands नेपाल भाषा 日本語 norsk bokmål norsk nynorsk oʻzbekcha/ўзбекча پنجابی ភាសាខ្មែរ plattdüütsch polski português română русский саха тыла scots shqip simple english slovenčina slovenščina کوردیی ناوەندی српски / srpski srpskohrvatski / српскохрватски suomi svenska தமிழ் ไทย тоҷикӣ türkçe українська tiếng việt winaray yorùbá 粵語 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 