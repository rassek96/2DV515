autocode from wikipedia free encyclopedia jump navigation search autocode name family simplified coding systems later called programming languages devised 1950s 1960s for series digital computers at universities manchester cambridge london autocode was generic term autocodes for different machines were not necessarily closely related are for example different versions single language fortran today term used refer family early languages descended from manchester mark autocoder systems which were generally similar 1960s term autocoders was used more generically refer any high-level programming language using compiler examples languages referred autocodes are cobol fortran contents glennie's autocode mark autocode later autocodes references sources external links glennie's autocode first autocode its compiler were developed by alick glennie for mark computer at university manchester considered by some be first compiled programming language his main goal was make programming mark machine known for its particularly abstruse machine code comprehensible although resulting language was much clearer than machine code was still very machine dependent below example glennie's autocode function which calculates formula f t = | t | + t {\displaystyle ft={\sqrt {|t|}}+5t^{3}} example omits necessary scaling instruction needed place integers into variables assumes that results multiplication fit into lower accumulator c@va t@ic x@½c y@rc z@nc integers →c put into c →t load argument from lower accumulator variable t +t testa z put |t| into lower accumulator -t entry z subroutine →z run square root subroutine on lower accumulator value put result into z +tt →y →x calculate t^3 put into x +tx →y →x +z+cx close write put z + c x into lower accumulator return user's manual glennie's autocode compiler mentioned that loss efficiency no more than 10% autocode's impact on other manchester users' programming habits was negligible wasn't even mentioned brooker's paper called autocode programs developed for manchester university computers mark autocode second autocode for mark was planned developed by r brooker was called mark autocode language was nearly machine-independent had floating-point arithmetic unlike first one on other hand allowed only one operation per line offered few mnemonic names had no way define user subroutines example code which loads array size floating-point numbers from input would look like this n1 = vn1 = i reads input into v] n1 = n1 + j111 ≥ n1 jumps if n ≤ brooker's autocode removed two main difficulties mark 1's programmer scaling management two-level storage unlike its predecessor was heavily used later autocodes brooker also developed autocode for ferranti mercury 1950s conjunction with university manchester mercury autocode had limited repertoire variables a-z a'-z' some ways resembled early versions later dartmouth basic language pre-dated algol having no concept stacks hence no recursion dynamically-allocated arrays order overcome relatively small store size available on mercury large programs were written distinct chapters each which constituted overlay some skill was required minimise time-consuming transfers control between chapters this concept overlays from drum under user control became common until virtual memory became available later machines slightly different dialects mercury autocode were implemented for ferranti atlas distinct from later atlas autocode ict range version for edsac was devised by david hartley university cambridge mathematical laboratory known edsac autocode was straight development from mercury autocode adapted for local circumstances was noted for its object code optimisation source-language diagnostics which were advanced for time version was developed for successor titan prototype atlas computer temporary stop-gap while more substantially advanced language known cpl was being developed cpl was never completed but did give rise bcpl developed by m richards which turn led b ultimately c contemporary but separate thread development atlas autocode was developed for university manchester atlas machine references london keith programming introduction computers 1st ed russell square london wc1 faber faber limited p isbn 'high' level programming languages are often called autocodes processor program compiler london keith programming introduction computers 1st ed russell square london wc1 faber faber limited p isbn two high level programming languages which can be used here examples illustrate structure purpose autocodes are cobol common business oriented language fortran formular translation knuth p 42-43 knuth p knuth p 63-64 knuth p sources campbell-kelly martin programming mark early programming activity at university manchester annals history computing ieee 130–167 doi 101109/mahc198010018 garcia camarero ernesto autocode un sistema simplificado de codificacion para la computadora mercury spanish universidad de buenos aires p london keith introduction computers p knuth donald e pardo luis trabb early development programming languages stanford university computer science department external links autocodes user's perspective retrieved from https//enwikipediaorg/w/indexphptitle=autocode&oldid=740635902 categories procedural programming languages university cambridge computer laboratory programming languages created 1950s hidden categories cs1 spanish-language sources es navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages català deutsch français 日本語 polski edit links this page was last modified on september at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 