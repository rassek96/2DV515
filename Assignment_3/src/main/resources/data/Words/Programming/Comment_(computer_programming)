comment computer programming from wikipedia free encyclopedia jump navigation search for comments wikipedia markup see helpwiki markupcharacter formatting wpcomment illustration java source code with prologue comments indicated red inline comments green program code blue computer programming comment programmer-readable explanation annotation source code computer program they are added with purpose making source code easier for humans understand are generally ignored by compilers interpreters syntax comments various programming languages varies considerably comments are sometimes processed various ways generate documentation external source code itself by documentation generators used for integration with source code management systems other kinds external programming tools flexibility provided by comments allows for wide degree variability but formal conventions for their use are commonly part programming style guides contents overview uses o planning reviewing o code description o algorithmic description o resource inclusion o metadata o debugging o automatic documentation generation o format extension normative views o need for comments o level detail o offensive comments o comments web templates styles o end-of-line o tags examples o comparison + ada + applescript + basic + c + coldfusion + fortran iv + fortran + haskell + java + javascript + matlab + ocaml + pascal + perl + php + powershell + python + ruby + sql + swift + xml see also notes references further reading external links overview comments are generally formatted either block comments also called prologue comments stream comments line comments also called inline comments block comments delimit region source code which may span multiple lines this region specified with start delimiter end delimiter some programming languages such matlab allow block comments be recursively nested inside one another but others such java do not line comments either start with comment delimiter continue until end line some cases start at specific column character line offset source code continue until end line some programming languages employ both block line comments with different comment delimiters for example c++ has block comments delimited by / / that can span multiple lines line comments delimited by // other languages support only one type comment for example ada comments are line comments they start with -- continue end line uses how best make use comments subject dispute different commentators have offered varied sometimes opposing viewpoints there are many different ways writing comments many commentators who offer sometimes conflicting advice planning reviewing comments can be used form pseudocode outline intention prior writing actual code this case should explain logic behind code rather than code itself / loop backwards through all elements returned by server they should be processed chronologically/ for i = numelementsreturned - i >= i--{ / process each element's data / updatepatterni returnedelements } if this type comment left simplifies review process by allowing direct comparison code with intended results common logical fallacy that code that easy understand does what it's supposed do code description comments can be used summarize code explain programmer's intent according this school thought restating code plain english considered superfluous need re-explain code may be sign that too complex should be rewritten that naming bad don't document bad code – rewrite good comments don't repeat code explain they clarify its intent comments should explain at higher level abstraction than code what you're trying do comments may also be used explain why block code does not seem fit conventions best practices this especially true projects involving very little development time bug fixing for example ' second variable dim because server errors produced when reuse form data no ' documentation available on server behavior issue so just coding around vtx = servermappathlocal settings algorithmic description sometimes source code contains novel noteworthy solution specific problem such cases comments may contain explanation methodology such explanations may include diagrams formal mathematical proofs this may constitute explanation code rather than clarification its intent but others tasked with maintaining code base may find such explanation crucial this might especially be true case highly specialized problem domains rarely used optimizations constructs function-calls for example programmer may add comment explain why insertion sort was chosen instead quicksort former theory slower than latter this could be written follows list = // need stable sort besides performance really does not matter insertionsort list resource inclusion logos diagrams flowcharts consisting ascii art constructions can be inserted into source code formatted comment further copyright notices can be embedded within source code comments binary data may also be encoded comments through process known binary-to-text encoding although such practice uncommon typically relegated external resource files following code fragment simple ascii diagram depicting process flow for system administration script contained windows script file running under windows script host although section marking code appears comment diagram itself actually appears xml cdata section which technically considered distinct from comments but can serve similar purposes clientapp asyncrun batchprocess | | v mruini mruhistory ]]> although this identical diagram could easily have been included comment example illustrates one instance where programmer may opt not use comments way including resources source code metadata main article metadata comments computer program often store metadata about program file particular many software maintainers put submission guidelines comments help people who read source code that program send any improvements they make back maintainer other metadata includes name creator original version program file date when first version was created name current maintainer program names other people who have edited program file so far url documentation about how use program name software license for this program file etc when algorithm some section program based on description book other reference comments are used give page number title book request for comments other reference debugging common developer practice comment out code snippet meaning add comment syntax causing that block code become comment so that will not be executed final program this may be done exclude certain pieces code from final program more commonly can be used find source error by systematically commenting out running parts program source error can be determined allowing be corrected example commenting out code for exclusion purposes below for example one might write if optequals e optenabled = true / if optequals d optdebug = true // / // if optequals v optverbose = true // / above code fragment suggests that programmer opted disable debugging option for some reason this specific comment style more suitable for debugging single slash character front opening delimiter switch on en/disabling block comments many ides allow quick adding removing such comments with single menu options key combinations programmer has only mark part text they want uncomment choose appropriate option useful with large parts code automatic documentation generation main article documentation generator programming tools sometimes store documentation metadata comments these may include insert positions for automatic header file inclusion commands set file's syntax highlighting mode file's revision number these functional control comments are also commonly referred annotations keeping documentation within source code comments considered one way simplify documentation process well increase chances that documentation will be kept up date with changes code examples documentation generators include programs javadoc for use with java ddoc for d doxygen for c c++ java idl phpdoc for php forms docstring are supported by python lisp elixir clojure c f visual basic implement similar feature called xml comments which are read by intellisense from compiled net assembly format extension occasionally syntax elements that were originally intended be comments are re-purposed convey additional information program such conditional comments such hot comments may be only practical solution that maintains backward-compatibility but are widely regarded kludge normative views there are various normative views long-standing opinions regarding proper use comments source code some these are informal based on personal preference while others are published promulgated formal guidelines need for comments technical commentators have documented varying viewpoints on whether when comments are appropriate source code some commentators assert that source code should be written with few comments on basis that source code should be self-explanatory self-documenting others suggest code should be extensively commented not uncommon for over 50% non-whitespace characters source code be contained within comments between these views assertion that comments are neither beneficial nor harmful by themselves what matters that they are correct kept sync with source code omitted if they are superfluous excessive difficult maintain otherwise unhelpful comments are sometimes used document contracts design by contract approach programming level detail depending on intended audience code other considerations level detail description may vary considerably for example following java comment would be suitable introductory text designed teach beginning programming string s = wikipedia / assigns value wikipedia variable s / this level detail however would not be appropriate context production code other situations involving experienced developers such rudimentary descriptions are inconsistent with guideline good comments clarify intent further for professional coding environments level detail ordinarily well-defined meet specific performance requirement defined by business operations offensive comments sometimes comments source code are used way relieve stress speak unfavorably about development tools competitors employers working conditions even quality code itself occurrence this phenomenon can be easily seen from online resources that track profanity source code comments web templates web development presents special security challenge related comments because not uncommon for html comments be viewable plain text by any user application sections code that are commented out html templates may therefore present security vulnerability styles there are many stylistic alternatives available when considering how comments should appear source code for larger projects involving team developers comment styles are either agreed upon before project starts evolve matter convention need project grows usually programmers prefer styles that are consistent non-obstructive easy modify difficult break following code fragments c demonstrate just tiny example how comments can vary stylistically while still conveying same basic information / this comment body variation one / /\ this comment body variation two \/ factors such personal preference flexibility programming tools other considerations tend influence stylistic variants used source code for example variation two might be disfavored among programmers who do not have source code editors that can automate alignment visual appearance text comments software consultant technology commentator allen holub one expert who advocates aligning left edges comments / this style recommended by holub for c c++ demonstrated ''enough rope'' rule / / this another way do also c easier do editors that do not automatically indent second through last lines comment one space from first also used holub's book rule / end-of-line this form all text from ascii characters // end line ignored // begin variation three // ------------------------- // this comment body // ------------------------- different styles can be chosen for different areas code from individual lines paragraphs routines files programs if syntax supports both line comments block comments one method use line comments only for minor comments declarations blocks edits use block comments describe higher-level abstractions functions classes files modules sometimes projects try enforce rules like one comment every ten lines these kinds rules can be counterproductive when too rigorous but may provide useful standard measurement consistency if project participants deem necessary tags programmers may use informal tags comments assist indexing common issues they may then be able be searched for with common programming tools such unix grep utility even syntax-highlighted within text editors these are sometimes referred codetags tokens such tags differ widely but might include fixme - should be corrected hack - workaround todo - something be done undone - reversal roll back previous code xxx - warn other programmers problematic misguiding code ux - user experience notice about non-trivial code examples comparison main article comparison programming languages syntax § comments typographic conventions specify comments vary widely further individual programming languages sometimes provide unique variants for detailed review please consult programming language comparison article ada ada programming language uses '--' indicate comment up end line for example -- air traffic controller task takes requests for takeoff landing task type controller myrunway runwayaccess -- task entries for synchronous message passing entry requesttakeoff id airplaneid takeoff out runwayaccess entry requestapproachid airplaneid approach out runwayaccess end controller applescript this section applescript code shows two styles comments used that language this program displays greeting on greetmygreeting display dialog mygreeting & world end greet -- show greeting greethello basic this basic code fragment completely functioning program which rem remark keyword used add comments that describe what program does rem this basic program shows use print goto statements rem fills screen with phrase hello print hello goto any text on line after ' apostrophe character also treated comment microsoft basics including quickbasic qbasic visual basic visual basic net vbscript - descendants such freebasic gambas example visual basic net public class form1 private sub button1clickbyval sender systemobject byval e systemeventargs handles button1click ' following code executed when user ' clicks button program's window messageboxshowhello world 'show pop-up window with greeting end sub end class c this c code fragment demonstrates use prologue comment block comment describe purpose conditional statement comment explains key terms concepts includes short signature by programmer who authored code / check if we are over our maximum process limit but be sure exclude root this needed make possible for login friends set per-user process limit something lower than amount processes root running -- rik / if atomicread&p->user->processes >= p->rlimrlimcur && capablecapsysadmin && capablecapsysresource goto badforkfree since c99 has also been possible use // syntax from c++ indicating single-line comment coldfusion coldfusion uses comments similar html comments but instead two dashes uses three these comments are caught by coldfusion engine not printed browser hello world fortran iv this fortran iv code fragment demonstrates how comments are used that language with comments themselves describing basic formatting rules c c lines that begin with 'c' first 'comment' column are comments c write format12h hello world end fortran this fortran code fragment demonstrates how comments are used that language with comments themselves describing basic formatting rules all characters after exclamation mark are considered comments program commenttest print 'a' 'hello world' fortran introduced option for inline comments end program haskell single line comments haskell start with '--' two hyphens multiple line comments start with '{-' end with '-}' {- this comment on more lines -} -- this comment on one line putstrln wikipedia haskell also provides literate programming method commenting known bird style this all lines starting with > are interpreted code everything else considered comment one additional requirement that you always leave blank line before after code block bird-style you have leave blank before code > fact integer -> integer > fact = > fact n = n fact n-1 you have leave blank line after code well java this java code fragment shows block comment used describe settooltiptext method formatting consistent with sun microsystems javadoc standards comment designed be read by javadoc processor / registers text display tool tip text displays when cursor lingers over component @param text string display if text null tool tip turned off for this component / public void settooltiptextstring text { javascript javascript uses // proceed comments / / for multi-line comments // single line javascript comment var inum = var itwo = // comment at end line / multi-line javascript comment / matlab matlab's programming language '%' character indicates single-line comment multi line comments are also available via %{ %} brackets can be nested eg % these are derivatives for each term d = %{ %{ example nested comment indentation for cosmetics ignored %} we form sequence following taylor formula note that we're operating on vector %} seq = d x - c^n /factorialn % we add-up get taylor approximation approx = sumseq ocaml ocaml uses nestable comments which useful when commenting code block codeline comment level 1comment level pascal niklaus wirth's pascal family languages including modula-2 oberon comments are opened with '' completed with '' for example test diagonals columndifference = testcolumn - column if row + columndifference = testrow perl line comments perl many other scripting languages begin with hash symbol comment at beginning called shebang tells system what interpreter use /usr/bin/perl my $s = wikipedia sets variable s wikipedia print $s \n add newline character after printing for shells that do not do so automatically instead regular block commenting construct perl uses plain old documentation markup language for literate programming for instance =item podlist-enew create new list object properties may be specified through hash reference like this my $list = podlist->new{ -start => $ -indent => } see individual methods/properties for details =cut sub new { my $this = shift my $class = ref$this || $this my %params = @ my $self = {%params} bless $self $class $self->initialize return $self } php comments php can be either c++ style both inline block use hashes phpdoc style adapted from javadoc common standard for documenting php code powershell comments windows powershell single line comment write-host hello world write-host goodbye world python comments python use hash character this python program starts with so-called “shebang” tell operating system which interpreter use /usr/bin/env python printhello world this program prints hello world screen then quits python also supports docstrings special sort comment usually enclosed triple-quotes ''' def foox y '''frobnicate bar baz together with one another''' return frobfrobx froby ruby comments ruby single line commenting line starts with hash puts this not comment this commented puts this not comment multi-line commenting comments goes between keywords begin end puts this not comment =begin whatever goes here will be ignored =end puts this not comment sql comments sql are single-line-only form when using two dashes -- this single line comment -- followed by second line select count from authors where authorsname = 'smith' -- note we only want 'smith' -- this comment appears after sql code syntax for transact-sql also supports alternative formats for specifying comments one format supported by this syntax identical block comment style used syntax for c++ java swift single-line comments begin with two forward-slashes // // this comment multiline comments start with forward-slash followed by asterisk / end with asterisk followed by forward-slash / / this also comment but written over multiple lines / multiline comments swift can be nested inside other multiline comments you write nested comments by starting multiline comment block then starting second multiline comment within first block second block then closed followed by first block / this start first multiline comment / this second nested multiline comment / this end first multiline comment / xml comments xml html are introduced with for example see also docstring specific type comment that parsed retained throughout runtime program html comment tag literate programming alternative documentation paradigm syntax comments various programming languages notes references source code can be divided into program code which consists machine-translatable instructions comments which include human-readable notes other kinds annotations support program codepenny grubb armstrong takang software maintenance concepts practice world scientific pp 120–121 isbn 981-238-426-x for purposes this article programming language comments are treated indistinct from comments that appear markup languages configuration files other similar contexts moreover markup language often closely integrated with programming language code especially context code generation see eg ganguli madhushree making use jsp new york wiley isbn 0-471-21974-6 hewitt eben java for coldfusion developers upper saddle river pearson education isbn 0-13-046180-6 dixit jb computer fundamentals programming c laxmi publications isbn 81-7008-882-8 higham desmond matlab guide siam isbn 0-89871-578-4 vermeulen al elements java style cambridge university press isbn 0-521-77768-2 b c using right comment java retrieved w r dietrich applied pattern recognition algorithms implementation c++ springer isbn 3-528-35558-1 offers viewpoints on proper use comments source code p b keyes jessica software engineering handbook crc press isbn 0-8493-1479-8 discusses comments science documentation p b c elements programming style kernighan & plauger b code complete mcconnell spinellis diomidis code reading open source perspective addison-wesley isbn 0-201-79940-5 codeplotter - add edit diagrams your code with this 'visio-like' tool retrieved b niederst jennifer web design nutshell desktop quick reference o'reilly isbn 0-596-00987-9 sometimes difference between comment other syntax elements programming markup language entails subtle nuances niederst indicates one such situation by stating unfortunately xml software thinks comments unimportant information may simply remove comments from document before processing avoid this problem use xml cdata section instead see eg wynne-powell rod mac os x for photographers optimized image workflow for mac user oxford focal press isbn 0-240-52027-0 page lamb linda learning vi editor sebastopol o'reilly & associates isbn 1-56592-426-6 describes use modeline syntax vim configuration files see eg berlin daniel practical subversion second edition berkeley apress isbn 1-59059-753-2 page ambler scott object primer agile model-driven development with uml cambridge university press isbn 1-397-80521-8 function definition with docstring clojure murach c p c2 hotcomments goodliffe pete code craft san francisco no starch press isbn 1-59327-119-0 smith t intermediate programming principles techniques using pascal belmont west pub co isbn 0-314-66314-2 see eg koletzke peter oracle developer advanced forms & reports berkeley osborne/mcgraw-hill isbn 0-07-212048-7 page worst practice - bad comments retrieved morelli ralph java java java object-oriented problem solving prentice hall college isbn 0-13-147434-0 b how write doc comments for javadoc tool retrieved javadoc guidelines specify that comments are crucial platform further appropriate level detail fairly well-defined we spend time effort focused on specifying boundary conditions argument ranges corner cases rather than defining common programming terms writing conceptual overviews including examples for developers yourdon edward techniques program structure design university michigan 013901702x non-existent comments can make difficult comprehend code but comments may be detrimental if they are obsolete redundant incorrect otherwise make more difficult comprehend intended purpose for source code dewhurst stephen c c++ gotchas avoiding common problems coding design addison-wesley professional isbn 0-321-12518-5 see eg linux swear count andress mandy surviving security how integrate people process technology crc press isbn 0-8493-2042-9 coding style retrieved allen holub retrieved allen holub enough rope shoot yourself foot isbn 0-07-029689-8 mcgraw-hill pep -- codetags python software foundation using task list msdnmicrosoftcom perlpod - plain old documentation format retrieved podparseutils - helpers for pod parsing conversion retrieved talmage ronald r microsoft sql server prima publishing isbn 0-7615-1389-2 further reading movshovitz-attias dana cohen william w natural language models for predicting programming comments association for computational linguistics acl external links how write comments by denis krukovsky source code documentation live user manual by ptlogica how write comments for javadoc tool doxygen documentation system for c c++ java objective-c python idl some extent php c d comment-driven development personal presentation good coding practice how make comments most important 'code' you write by david njoku retrieved from https//enwikipediaorg/w/indexphptitle=commentcomputerprogramming&oldid=751403281 categories source code metadata reference hidden categories pages using isbn magic links articles with example code articles with example c code articles with example java code articles with example perl code navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages العربية čeština deutsch eesti ελληνικά español français 한국어 italiano қазақша nederlands 日本語 олык марий polski русский svenska தமிழ் українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 