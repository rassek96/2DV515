abstraction principle computer programming from wikipedia free encyclopedia   redirected from abstraction principle programming jump navigation search software engineering programming language theory abstraction principle principle abstraction basic dictum that aims reduce duplication information program usually with emphasis on code duplication whenever practical by making use abstractions provided by programming language software libraries principle sometimes stated recommendation programmer but sometimes stated requirement programming language assuming self-understood why abstractions are desirable use origins principle are uncertain has been reinvented number times sometimes under different name with slight variations when read recommendation programmer abstraction principle can be generalized don't repeat yourself principle which recommends avoiding duplication information general also avoiding duplication human effort involved software development process contents principle history variations implications generalizations hardware programming interfaces references principle recommendation programmer its formulation by benjamin c pierce types programming languages abstraction principle reads emphasis original “ each significant piece functionality program should be implemented just one place source code where similar functions are carried out by distinct pieces code generally beneficial combine them into one by abstracting out varying parts ” requirement programming language its formulation by david schmidt structure typed programming languages abstraction principle reads “ phrases any semantically meaningful syntactic class may be named ” history variations under this very name abstraction principle appears into long list books here we give necessarily incomplete list together with formulation if succinct alfred john cole ronald morrison introduction programming with s-algol when applied language design define all semantically meaningful syntactic categories language allow abstraction over them bruce j maclennan principles programming languages design evaluation implementation avoid requiring something be stated more than once factor out recurring pattern jon pearce programming meta-programming scheme structure function should be independent principle plays central role design patterns object-oriented programming although most writings on that topic do not give name principle influential book by gang four states focus here encapsulating concept that varies theme many design patterns this statement has been rephrased by other authors find what varies encapsulate this century principle has been reinvented extreme programming under slogan once only once definition this principle was rather succinct its first appearance no duplicate code has later been elaborated applicable other issues software development automate every process that's worth automating if you find yourself performing task many times script implications abstraction principle often stated context some mechanism intended facilitate abstraction basic mechanism control abstraction function subroutine data abstractions include various forms type polymorphism more elaborate mechanisms that may combine data control abstractions include abstract data types including classes polytypism etc quest for richer abstractions that allow less duplication complex scenarios one driving forces programming language research design inexperienced programmers may be tempted introduce too much abstraction their program—abstraction that won't be used more than once complementary principle that emphasize this issue you ain't gonna need more generally kiss principle since code usually subject revisions following abstraction principle may entail refactoring code effort rewriting piece code generically needs be amortized against estimated future benefits abstraction rule thumb governing this was devised by martin fowler popularized rule three states that if piece code copied more than twice ie would end up having three more copies then needs be abstracted out generalizations don't repeat yourself dry principle generalization developed context multi-tier architectures where related code by necessity duplicated some extent across tiers usually different languages practical terms recommendation here rely on automated tools like code generators data transformations avoid repetition hardware programming interfaces addition optimizing code hierarchical/recursive meaning abstraction level programming also refers interfaces between hardware communication layers also called abstraction levels abstraction layers this case level abstraction often synonymous with interface for example examining shellcode interface between higher lower level languages level abstraction changes from operating system commands for example c register circuit level calls commands for example assembly binary case that example boundary interface between abstraction levels stack references pierce benjamin types programming languages mit press p isbn 0-262-16209-1 david schmidt structure typed programming languages mit press isbn 0-262-19349-3 p alfred john cole ronald morrison introduction programming with s-algol cup archive isbn 0-521-25001-3 p bruce j maclennan principles programming languages design evaluation implementation holt rinehart winston p jon pearce programming meta-programming scheme birkhäuser isbn 0-387-98320-1 p alan shalloway james trott design patterns explained new perspective on object-oriented design addison-wesley isbn 0-201-71594-5 p kent beck extreme programming explained embrace change 2nd edition addison-wesley isbn 0-201-61641-6 p chromatic extreme programming pocket guide o'reilly isbn 0-596-00485-0 koziol shellcoders handbook wiley p isbn 0-7645-4468-3 retrieved from https//enwikipediaorg/w/indexphptitle=abstractionprinciplecomputerprogramming&oldid=748948417 categories programming language topics programming principles hidden categories pages using isbn magic links all articles with unsourced statements articles with unsourced statements from march navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages add links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 