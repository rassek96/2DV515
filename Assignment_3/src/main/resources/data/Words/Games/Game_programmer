game programmer from wikipedia free encyclopedia jump navigation search part series on video game industry activities/jobs video game design game design game art design game development / game developer game modification game producer game programming / game programmer game publisher game studies game testing game journalism level design development game ai game design interaction design game programming level design video game art video game design video game graphics video game music types adult game casual game indie game non-game o interactive art o interactive movie nonviolent video game serious game o advergame o art game o edugame o exergame traditional game topics digital rights management drm outsourcing software license end-user license agreement eula related video game history video games lists list indie game developers list video game developers list video game industry people list video game publishers list video game websites v t e game programmer software engineer programmer computer scientist who primarily develops codebases for video games related software such game development tools game programming has many specialized disciplines all which fall under umbrella term game programmer game programmer should not be confused with game designer who works on game design contents history disciplines o game engine programmer + physics engine programmer + graphics engine programmer o artificial intelligence programmer o sound programmer o gameplay programmer o scripter o ui programmer o input programmer o network programmer o game tools programmer o porting programmer o technology programmer o generalist o lead game programmer platforms education salary job security languages tools see also notes references external links history apple ii series was popular video game platform during early home computer era despite being outperformed by later systems remained popular until early 1990s early days video games from early 1970s mid-1980s game programmer also took on job designer artist this was generally because abilities early computers were so limited that having specialized personnel for each function was unnecessary game concepts were generally light games were only meant be played for few minutes at time but more importantly art content variations gameplay were constrained by computers' limited power later specialized arcade hardware home systems became more powerful game developers could develop deeper storylines could include such features high-resolution full color graphics physics advanced artificial intelligence digital sound technology has advanced such great degree that contemporary games usually boast graphics full motion video using assets developed by professional graphic artists nowadays derogatory term programmer art has come imply kind bright colors blocky design that were typical early video games desire for adding more depth assets games necessitated division labor initially art production was relegated full-time artists next game programming became separate discipline from game design now only some games such puzzle game bejeweled are simple enough require just one full-time programmer despite this division however most game developers artists programmers even producers have some say final design contemporary games disciplines contemporary video game may include advanced physics artificial intelligence graphics digitised sound original musical score complex strategy may use several input devices such mice keyboards gamepads joysticks may be playable against other people via internet over lan each aspect game can consume all one programmer's time many cases several programmers some programmers may specialize one area game programming but many are familiar with several aspects number programmers needed for each feature depends somewhat on programmers' skills but mostly are dictated by type game being developed game engine programmer game engine programmers create base engine game including simulated physics graphics disciplines increasingly video games use existing game engines either commercial open source free they are often customized for particular game these programmers handle these modifications physics engine programmer game's physics programmer dedicated developing physics game will employ typically game will only simulate few aspects real-world physics for example space game may need simulated gravity but would not have any need for simulating water viscosity since processing cycles are always at premium physics programmers may employ shortcuts that are computationally inexpensive but look act good enough for game question other cases unrealistic physics are employed allow easier gameplay for dramatic effect sometimes specific subset situations specified physical outcome such situations are stored record some sort are never computed at runtime at all some physics programmers may even delve into difficult tasks inverse kinematics other motions attributed game characters but increasingly these motions are assigned via motion capture libraries so not overload cpu with complex calculations for role-playing game such world warcraft only one physics programmer may be needed for complex combat game such battlefield teams several physics programmers may be required graphics engine programmer historically this title usually belonged programmer who developed specialized blitter algorithms clever optimizations for graphics today however almost exclusively applied programmers who specialize developing modifying complex graphic renderers some graphics skills have just recently become useful again though for developing games for new generation cell phones handheld game consoles graphics programmer must have firm grasp advanced mathematical concepts such vector matrix math quaternions linear algebra skilled programmers specializing this area game development can demand high wages are usually scarce commodity their skills can be used for video games on any platform artificial intelligence programmer ai programmer develops logic time simulate intelligence enemies opponents has recently evolved into specialized discipline these tasks used be implemented by programmers who specialized other areas ai programmer may program pathfinding strategy enemy tactic systems this one most challenging aspects game programming its sophistication developing rapidly contemporary games dedicate approximately percent their programming staff ai some games such strategy games like civilization iii role-playing video games such elder scrolls iv oblivion use ai heavily while others such puzzle games use sparingly not at all many game developers have created entire languages that can be used program their own ai for games via scripts these languages are typically less technical than language used implement game will often be used by game level designers implement world game many studios also make their games' scripting available players often used extensively by third party mod developers ai technology used games programming should not be confused with academic ai programming research although both areas do borrow from each other they are usually considered distinct disciplines though there are exceptions for example game by lionhead studios black & white features unique ai approach user controlled creature who uses learning model behaviors during game-play recent years more effort has been directed towards intervening promising fields ai research game ai programming sound programmer not always separate discipline sound programming has been mainstay game programming since days pong most games make use audio many have full musical score computer audio games eschew graphics altogether use sound their primary feedback mechanism many games use advanced techniques such positional sound making audio programming non-trivial matter with these games one two programmers may dedicate all their time building refining game's sound engine sound programmers may be trained have formal background digital signal processing scripting tools are often created maintained by sound programmers for use by sound designers these tools allow designers associate sounds with characters actions objects events while also assigning music atmospheric sounds for game environments levels areas setting environmental variables such reverberation gameplay programmer though all programmers add content experience that game provides gameplay programmer focuses more on game's strategy implementation game's mechanics logic feel game this usually not separate discipline what this programmer does usually differs from game game they will inevitably be involved with more specialized areas game's development such graphics sound this programmer may implement strategy tables tweak input code adjust other factors that alter game many these aspects may be altered by programmers who specialize these areas however for example strategy tables may be implemented by ai programmers scripter early video games gameplay programmers would write code create all content game—if player was supposed shoot particular enemy red key was supposed appear along with some text on screen then this functionality was all written part core program c assembly language by gameplay programmer more often today core game engine usually separated from gameplay programming this has several development advantages game engine deals with graphics rendering sound physics so on while scripting language deals with things like cinematic events enemy behavior game objectives large game projects can have team scripters implement these sorts game content scripters usually are also game designers often easier find qualified game designer who can be taught script language opposed finding qualified game designer who has mastered c++ ui programmer this programmer specializes programming user interfaces uis for games though some games have custom user interfaces this programmer more likely develop library that can be used across multiple projects most uis look though contemporary uis usually use same technology rest game so some knowledge math systems helpful for this role advanced ui systems may allow scripting special effects such transparency animation particle effects for controls input programmer joystick was primary input device for 1980s era games now game programmers must account for wide range input devices but joystick today supported relatively few games though still dominant for flight simulators input programming while usually not job title even full-time position on particular game project still important task this programmer writes code specifying how input devices such keyboard mouse joystick affect game these routines are typically developed early production are continually tweaked during development normally one programmer does not need dedicate his entire time developing these systems real-time motion-controlled game utilizing devices such wii remote kinect may need very complex low latency input system while hid requirements mouse-driven turn-based strategy game such heroes might magic are significantly simpler implement network programmer this programmer writes code that allows players compete cooperate connected via lan internet rarer cases directly connected via modem programmers implementing these game features can spend all their time this one role which often considered one most technically challenging network latency packet compression dropped interrupted connections are just few concerns one must consider although multi-player features can consume entire production timeline require other engine systems be designed with networking mind network systems are often put off until last few months development adding additional difficulties this role some titles have had their online features often considered lower priority than core gameplay cut months away from release due concerns such lack management design forethought scalability virtua fighter for ps3 notable example this trend this section's tone style may not reflect encyclopedic tone used on wikipedia see wikipedia's guide writing better articles for suggestions november learn how when remove this template message game tools programmer tools programmer can make game development heaven unbearably difficult tools are used on almost every game for tasks such scripting importing converting art modifying behaviors building levels some tools such ide graphics modelling software photoshop are cots products but many tools are specific game are custom programmed tools programmer's job write tools that handle these game-specific tasks some tools will be included with game but most will not most tools evolve with game can easily consume all several programmers' time well written fairly bug-free tools make everyone's development tasks easier poorly written poorly documented ones can seriously hamper development jeopardize project due time constraints however many tools are not carefully implemented porting programmer porting game from one platform another has always been important activity for game developers some programmers specialize this activity converting code from one operating system work on another sometimes programmer responsible for making application work not for just one operating system but on variety devices such mobile phones often however porting can involve re-writing entire game from scratch proprietary languages tools hardware make converting source code fruitless endeavour this programmer must be familiar with both original target operating systems languages for example converting game originally written c++ java convert assets such artwork sounds rewrite code for low memory phones this programmer may also have side-step buggy language implementations some with little documentation refactor code oversee multiple branches code rewrite code scale for wide variety screen sizes implement special operator guidelines they may also have fix bugs that were not discovered original release game technology programmer technology programmer more likely be found larger development studios with specific departments dedicated solely r&d unlike other members programming team technology programmer usually isn't tied specific project type development for extended length time they will typically report directly cto department head rather than game producer job title implies this position extremely demanding from technical perspective requires intimate knowledge target platform hardware tasks cover broad range subjects including practical implementation algorithms described research papers very low-level assembly optimization ability solve challenging issues pertaining memory requirements caching issues during latter stages project there considerable amount cross-over between this position some others particularly graphics programmer generalist smaller teams one more programmers will often be described 'generalists' who will take on various other roles needed generalists are often engaged task tracking down bugs determining which subsystem expertise required fix them lead game programmer lead programmer ultimately charge all programming for game their job make sure various submodules game are being implemented properly keep track development from programming standpoint person this role usually transitions from other aspects game programming this role after several years experience despite title this person usually has less time for writing code than other programmers on project they are required attend meetings interface with client other leads on game however lead programmer still expected program at least some time also expected be knowledgeable most technical areas game there often considerable common ground role technical director lead programmer such that jobs are often covered by one person platforms game programmers can specialize on one platform another such wii u windows so addition specializing one game programming discipline programmer may also specialize development on certain platform therefore one game programmer's title might be playstation graphics programmer some disciplines such ai are transferable various platforms needn't be tailored one system another also general game development principles such graphics programming concepts sound engineering user interface design are naturally transferable between platforms education notably there are many game programmers with no formal education subject having started out hobbyists doing great deal programming on their own for fun eventually succeeding because their aptitude homegrown experience however most job solicitations for game programmers specify bachelor's degree mathematics physics computer science equivalent experience increasingly universities are starting offer courses degrees game programming any such degrees have considerable overlap with computer science software engineering degrees salary salaries for game programmers vary from company company country country general however pay for game programming generally about same for comparable jobs business sector this despite fact that game programming some most difficult any type usually requires longer hours than mainstream programming results survey united states indicate that average salary for game programmer usd$95300 annually least experienced programmers with less than years experience make average annual salary over $72000 most experienced programmers with more than years experience make average annual salary over $124000 generally lead programmers are most well compensated though some graphics programmers may challenge surpass their salaries according same survey above lead programmers on average earn $127900 annually job security though sales video games rival other forms entertainment such movies video game industry extremely volatile game programmers are not insulated from this instability their employers experience financial difficulty third-party developers most common type video game developers depend upon steady influx funds from video game publisher if milestone deadline not met for host other reasons like game cancelled funds may become short developer may be forced retrench employees declare bankruptcy go out business game programmers who work for large publishers are somewhat insulated from these circumstances but even large game publishers can go out business when hasbro interactive was sold infogrames several projects were cancelled when 3do company went bankrupt ceased all operations some game programmers' resumes consist short stints lasting no more than year they're forced leap from one doomed studio another this why some prefer consult are therefore somewhat shielded from effects fates individual studios languages tools this section does not cite any sources please help improve this section by adding citations reliable sources unsourced material may be challenged removed may learn how when remove this template message most commercial computer video games are written primarily c++ c some assembly language many games especially those with complex interactive gameplay mechanics tax hardware its limit such highly optimized code required for these games run at acceptable frame rate because this compiled code typically used for performance-critical components such visual rendering physics calculations almost all pc games also use either directx opengl apis some wrapper library interface with hardware devices various script languages like ruby lua python are also used for generation content such gameplay especially ai scripts are generally parsed at load time when game level loaded into main memory then executed at runtime via logic branches other such mechanisms they are generally not executed by interpreter which would result much slower execution scripts tend be used selectively often for ai high-level game logic some games are designed with high dependency on scripts some scripts are compiled binary format before game execution optimization phase development some script functions will often be rewritten compiled language java used for many web browser based games because cross-platform does not usually require installation by user poses fewer security risks compared downloaded executable program java also popular language for mobile phone based games adobe flash which uses actionscript language javascript are popular development tools for browser-based games games have grown size complexity middleware becoming increasingly popular within industry middleware provides greater higher level functionality larger feature sets than standard lower level apis such directx opengl such skeletal animation addition providing more complex technologies some middleware also makes reasonable attempts be platform independent making common conversions from for example microsoft windows ps4 much easier essentially middleware aimed at cutting out much redundancy development cycle possible for example writing new animation systems for each game studio produces allowing programmers focus on new content other tools are also essential game developers packages for example blender gimp photoshop maya studio max enable programmers view modify assets generated by artists other production personnel source control systems keep source code safe secure optimize merging ides with debuggers such visual studio make writing code tracking down bugs less painful experience see also game development tool tools from game programming see also list notable game programmers programmer game school code monkeys animated show about game programmers programmer game design notes bates pp 165-171 moore novak pp 78-84 moore novak pp 74-75 moore novak p moore novak p moore novak pp 80-81 number dedicated ai programmers on game development team aigamedev february evans chapter varieties learning pp567-578 ieee symposium on computational intelligence games retrieved march artificial intelligence games research network retrieved march university alberta games group retrieved march epstein susan l games & puzzles aitopics retrieved march moore novak p moore novak p moore novak p tvg am2 virtua fighter ps3 could be updated for online news moore novak p top gaming studios schools & salaries big fish games july fleming jeffrey april 9th annual salary survey game developer united business media references bates bob game design 2nd ed thomson course technology isbn 1-59200-493-8 moore michael e novak jeannie game industry career guide delmar cengage learning isbn 1-4283-7647-x evans richard rabin steve ed ai game programming wisdom charles river media isbn 1-58450-077-8 external links game industry veteran tom sloper's advice on game programming programmer at eurocom retrieved from https//enwikipediaorg/w/indexphptitle=gameprogrammer&oldid=748815205 categories video game development entertainment occupations video game programmers computer occupations hidden categories all articles with unsourced statements articles with unsourced statements from march wikipedia articles needing style editing from november all articles needing style editing articles with unsourced statements from july articles needing additional references from may all articles needing additional references navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons languages العربية فارسی 한국어 polski scots türkçe 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 