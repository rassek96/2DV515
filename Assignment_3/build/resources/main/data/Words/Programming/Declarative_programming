declarative programming from wikipedia free encyclopedia jump navigation search this article has multiple issues please help improve discuss these issues on talk page learn how when remove these template messages this article includes list references but its sources remain unclear because has insufficient inline citations please help improve this article by introducing more precise citations april learn how when remove this template message this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed february learn how when remove this template message learn how when remove this template message programming paradigms action agent-oriented array-oriented automata-based concurrent computing o relativistic programming data-driven declarative contrast imperative o constraint + constraint logic concurrent constraint logic o dataflow + flow-based + cell-oriented spreadsheets + reactive o functional + functional logic + purely functional o logic + abductive logic + answer set + concurrent logic + functional logic + inductive logic dynamic end-user programming event-driven o service-oriented o time-driven expression-oriented feature-oriented function-level contrast value-level generic imperative contrast declarative o literate o procedural inductive programming language-oriented o natural language programming o discipline-specific o domain-specific o grammar-oriented + dialecting o intentional metaprogramming o automatic o reflective + attribute-oriented o homoiconic o template + policy-based non-structured contrast structured o array nondeterministic parallel computing o process-oriented point-free style o concatenative semantic structured contrast non-structured o block-structured o modular contrast monolithic o object-oriented + actor-based + class-based + concurrent + prototype-based + by separation concerns aspect-oriented role-oriented subject-oriented o recursive value-level contrast function-level probabilistic concept v t e computer science declarative programming programming paradigm—a style building structure elements computer programs—that expresses logic computation without describing its control flow many languages that apply this style attempt minimize eliminate side effects by describing what program must accomplish terms problem domain rather than describe how accomplish sequence programming language primitives how being left up language's implementation this contrast with imperative programming which implements algorithms explicit steps declarative programming often considers programs theories formal logic computations deductions that logic space declarative programming may greatly simplify writing parallel programs common declarative languages include those database query languages eg sql xquery regular expressions logic programming functional programming configuration management systems contents definition subparadigms o constraint programming o domain-specific languages o functional programming o hybrid languages o logic programming o modeling see also references external links definition declarative programming often defined any style programming that not imperative number other common definitions exist that attempt give term definition other than simply contrasting with imperative programming for example program that describes what computation should be performed not how compute any programming language that lacks side effects more specifically referentially transparent language with clear correspondence mathematical logic these definitions overlap substantially declarative programming contrasts with imperative procedural programming declarative programming non-imperative style programming which programs describe their desired results without explicitly listing commands steps that must be performed functional logical programming languages are characterized by declarative programming style logical programming languages programs consist logical statements program executes by searching for proofs statements pure functional language such haskell all functions are without side effects state changes are only represented functions that transform state which explicitly represented first class object program although pure functional languages are non-imperative they often provide facility for describing effect function series steps other functional languages such lisp ocaml erlang support mixture procedural functional programming some logical programming languages such prolog database query languages such sql while declarative principle also support procedural style programming subparadigms declarative programming umbrella term that includes number better-known programming paradigms constraint programming constraint programming states relations between variables form constraints that specify properties target solution set constraints solved by giving value each variable so that solution consistent with maximum number constraints constraint programming often complements other paradigms functional logical even imperative programming domain-specific languages well-known examples declarative domain-specific languages dsls include yacc parser generator input language make build specification language puppet's configuration management language regular expressions subset sql select queries for example dsls have advantage being useful while not necessarily needing be turing-complete which makes easier for language be purely declarative many markup languages such html mxml xaml xslt other user-interface markup languages are often declarative html for example only describes what should appear on webpage - specifies neither control flow rendering page nor its possible interactions with user some software systems combine traditional user-interface markup languages such html with declarative markup that defines what but not how back-end server systems should do support declared interface such systems typically using domain-specific xml namespace may include abstractions sql database syntax parameterised calls web services using representational state transfer rest soap functional programming functional programming particular purely functional programming attempts minimize eliminate side effects therefore considered declarative most functional languages such scheme clojure erlang haskell ocaml standard ml unlambda do permit side effects practice using non-pure functions interact with outside world when needed while functional languages typically do appear specify how compiler for purely functional programming language free extensively rewrite operational behavior function so long same result returned for same inputs this can be used for example make function compute its result parallel perform substantial optimizations such deforestation that compiler may not be able safely apply language with side effects hybrid languages see also multi-paradigm programming language makefiles for example specify dependencies declarative fashion but include imperative list actions take well similarly yacc specifies context free grammar declaratively but includes code snippets from host language which usually imperative such c logic programming logic programming languages such prolog state query relations specifics how these queries are answered up implementation its theorem prover but typically take form some sort unification like functional programming many logic programming languages permit side effects result are not strictly declarative modeling main article mathematical model models mathematical representations physical systems may be implemented computer code that declarative code contains number equations not imperative assignments that describe declare behavioral relationships when model expressed this formalism computer able perform algebraic manipulations best formulate solution algorithm mathematical causality typically imposed at boundaries physical system while behavioral description system itself declarative acausal declarative modeling languages environments include analytica modelica simile see also list declarative programming languages comparison programming paradigms inductive programming references lloyd jw practical advantages declarative programming declarative language free on-line dictionary computing editor denis howe damp workshop on declarative aspects multicore programming cseunsweduau retrieved chakravarty manuel m t february on massively parallel execution declarative programs doctoral dissertation technische universität berlin retrieved february this context criterion for calling programming language declarative existence clear mathematically established correspondence between language mathematical logic such that declarative semantics for language can be based on model proof theory both logic archived october at wayback machine declarative modelling simulistics retrieved external links frans coenen characteristics declarative programming languages robert harper o what if anything declarative language o there such thing declarative language it’s world’s best dsl olof torgersson note on declarative programming paradigms future definitional programming v t e types programming languages actor-based array aspect-oriented class-based concatenative concurrent data-structured dataflow declarative domain-specific dynamic esoteric event-driven extensible functional imperative logic macro metaprogramming+multi-paradigm object-based object-oriented pipeline procedural prototype-based reflective rule-based scripting synchronous templating assembly compiled interpreted machine low-level high-level very high-level first generation second generation third generation fourth generation fifth generation non-english-based visual authority control lccn sh93000071 gnd 4293503-9 bnf cb123495726 data bne xx538968 retrieved from https//enwikipediaorg/w/indexphptitle=declarativeprogramming&oldid=751797041 categories declarative programming programming paradigms hidden categories webarchive template wayback links articles lacking in-text citations from april all articles lacking in-text citations articles needing additional references from february all articles needing additional references articles containing potentially dated statements from all articles containing potentially dated statements all articles with unsourced statements articles with unsourced statements from august wikipedia articles with lccn identifiers wikipedia articles with gnd identifiers wikipedia articles with bnf identifiers navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages العربية azərbaycanca čeština deutsch ελληνικά español euskara فارسی français gaeilge 한국어 italiano עברית кыргызча bahasa melayu nederlands 日本語 polski português русский српски / srpski suomi svenska українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 