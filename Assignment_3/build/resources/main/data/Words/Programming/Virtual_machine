virtual machine from wikipedia free encyclopedia jump navigation search program execution general concepts runtime system runtime library executable compiler interpreter virtual machine intermediate representation ir source code object code bytecode machine code compilation strategies just-in-time jit o tracing just-in-time ahead-of-time aot transcompilation recompilation notable runtimes android runtime art common language runtime clr crt0 java virtual machine jvm nodejs zend engine notable compilers & toolchains llvm gnu compiler collection gcc v t e computing virtual machine vm emulation computer system virtual machines are based on computer architectures provide functionality physical computer their implementations may involve specialized hardware software combination there are different kinds virtual machines each with different functions system virtual machines also termed full virtualization vms provide substitute for real machine they provide functionality needed execute entire operating systems hypervisor uses native execution share manage hardware allowing for multiple environments which are isolated from one another yet exist on same physical machine modern hypervisors use hardware-assisted virtualization virtualization-specific hardware primarily from host cpus process virtual machines are designed execute computer programs platform-independent environment some virtual machines such qemu are designed also emulate different architectures allow execution software applications operating systems written for another cpu architecture operating-system-level virtualization allows resources computer be partitioned via kernel's support for multiple isolated user space instances which are usually called containers may look feel like real machines end users contents definitions o system virtual machines history full virtualization o hardware-assisted virtualization operating-system-level virtualization see also references further reading external links definitions vm virtual machine was originally defined by popek goldberg efficient isolated duplicate real machine current use includes virtual machines which have no direct correspondence any real hardware system virtual machines see also hardware virtualization comparison platform virtualization software desire run multiple operating systems was initial motive for virtual machines so allow time-sharing among several single-tasking operating systems some respects system virtual machine can be considered generalization concept virtual memory that historically preceded ibm's cp/cms first systems allow full virtualization implemented time sharing by providing each user with single-user operating system conversational monitor system cms unlike virtual memory system virtual machine entitled user write privileged instructions their code this approach had certain advantages such adding input/output devices not allowed by standard system technology evolves virtual memory for purposes virtualization new systems memory overcommitment may be applied manage memory sharing among multiple virtual machines on one computer operating system may be possible share memory pages that have identical contents among multiple virtual machines that run on same physical machine what may result mapping them same physical page by technique termed kernel samepage merging this especially useful for read-only pages such those holding code segments which case for multiple virtual machines running same similar software software libraries web servers middleware components etc guest operating systems do not need be compliant with host hardware thus making possible run different operating systems on same computer eg windows linux prior versions operating system support future software use virtual machines support separate guest operating systems popular regard embedded systems typical use would be run real-time operating system simultaneously with preferred complex operating system such linux windows another use would be for novel unproven software still developmental stage so runs inside sandbox virtual machines have other advantages for operating system development may include improved debugging access faster reboots multiple vms running their own guest operating system are frequently engaged for server consolidation history see also history cp/cms this section needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed july learn how when remove this template message both system virtual machines process virtual machines date 1960s continue be areas active development system virtual machines grew out time-sharing notably implemented compatible time-sharing system ctss time-sharing allowed multiple users use computer concurrently each program appeared have full access machine but only one program was executed at time with system switching between programs time slices saving restoring state each time this evolved into virtual machines notably via ibm's research systems m44/44x which used partial virtualization cp-40 simmon which used full virtualization were early examples hypervisors first widely available virtual machine architecture was cp-67/cms see history cp/cms for details important distinction was between using multiple virtual machines on one host system for time-sharing m44/44x cp-40 using one virtual machine on host system for prototyping simmon emulators with hardware emulation earlier systems for compatibility date back ibm while software emulation then-called simulation predates process virtual machines arose originally abstract platforms for intermediate language used intermediate representation program by compiler early examples date around early example was o-code machine virtual machine which executes o-code object code emitted by front end bcpl compiler this abstraction allowed compiler be easily ported new architecture by implementing new back end that took existing o-code compiled machine code for underlying physical machine euler language used similar design with intermediate language named p portable this was popularized around by pascal notably pascal-p system pascal-s compiler which was termed p-code resulting machine p-code machine this has been influential virtual machines this sense have been often generally called p-code machines addition being intermediate language pascal p-code was also executed directly by interpreter implementing virtual machine notably ucsd pascal this influenced later interpreters notably java virtual machine jvm another early example was snobol4 which was written snobol implementation language sil assembly language for virtual machine which was then targeted physical machines by transpiling their native assembler via macro assembler macros have since fallen out favor however so this approach has been less influential significant advances occurred implementation smalltalk-80 particularly deutsch/schiffmann implementation which pushed just-in-time jit compilation forward implementation approach that uses process virtual machine later notable smalltalk vms were visualworks squeak virtual machine strongtalk related language that produced lot virtual machine innovation was self programming language which pioneered adaptive optimization generational garbage collection these techniques proved commercially successful hotspot java virtual machine other innovations include having register-based virtual machine better match underlying hardware rather than stack-based virtual machine which closer match for programming language this was pioneered by dis virtual machine for limbo language full virtualization main article full virtualization logical diagram full virtualization full virtualization virtual machine simulates enough hardware allow unmodified guest os one designed for same instruction set be run isolation this approach was pioneered with ibm cp-40 cp-67 predecessors vm family examples outside mainframe field include parallels workstation parallels desktop for mac virtualbox virtual iron oracle vm virtual pc virtual server hyper-v vmware workstation vmware server discontinued formerly called gsx server vmware esxi qemu adeos mac-on-linux win4bsd win4lin pro egenera vblade technology hardware-assisted virtualization main article hardware-assisted virtualization hardware-assisted virtualization hardware provides architectural support that facilitates building virtual machine monitor allows guest oses be run isolation hardware-assisted virtualization was first introduced on ibm system/370 for use with vm/370 first virtual machine operating system intel amd provided additional hardware support virtualization sun microsystems now oracle corporation added similar features their ultrasparc t-series processors examples virtualization platforms adapted such hardware include kvm vmware workstation vmware fusion hyper-v windows virtual pc xen parallels desktop for mac oracle vm server for sparc virtualbox parallels workstation first-generation 32- 64-bit x86 hardware support was found rarely offer performance advantages over software virtualization operating-system-level virtualization main article operating-system-level virtualization operating-system-level virtualization physical server virtualized at operating system level enabling multiple isolated secure virtualized servers run on single physical server guest operating system environments share same running instance operating system host system thus same operating system kernel also used implement guest environments applications running given guest environment view stand-alone system pioneer implementation was freebsd jails other examples include docker solaris containers openvz linux-vserver lxc aix workload partitions parallels virtuozzo containers icore virtual accounts see also computing portal amazon machine image linux containers native development kit storage hypervisor universal turing machine virtual appliance virtual backup appliance virtual disk image virtual machine escape references smith james nair ravi architecture virtual machines computer ieee computer society 32–38 doi 101109/mc2005173 smith nair pp 395–396 oliphant patrick virtual machines virtualcomputing retrieved september some people use that capability set up separate virtual machine running windows on mac giving them access full range applications available for both platforms super fast server reboots – another reason virtualization rocks vmwarezcom retrieved on server consolidation containment with virtual infrastructure pdf vmware retrieved pugh emerson w building ibm shaping industry its technology mit p isbn 0-262-16147-8 pugh emerson w et al ibm's early systems mit isbn 0-262-16123-0 pages 160–161 wirth n weber h euler generalization algol its formal definition part ii communications association for computing machinery vol9 no2 pp89–99 new york acm griswold ralph e macro implementation snobol4 san francisco ca w h freeman company isbn 0-7167-0447-1 chapter goldberg adele robson david smalltalk-80 language its implementation addison-wesley series computer science addison-wesley isbn 0-201-11371-6 deutsch l peter schiffman allan m efficient implementation smalltalk-80 system popl salt lake city utah acm doi101145/800017800542 isbn 0-89791-125-3 aycock john brief history just-in-time acm comput surv 97–113 doi101145/857076857077 ingalls dan kaehler ted maloney john wallace scott kay alan back future story squeak practical smalltalk written itself oopsla '97 proceedings 12th acm sigplan conference on object-oriented programming systems languages applications new york ny usa acm press pp 318–326 doi101145/263698263754 isbn 0-89791-908-4 bracha gilad griswold david strongtalk typechecking smalltalk production environment proceedings eighth annual conference on object-oriented programming systems languages applications oopsla '93 new york ny usa acm pp 215–230 doi101145/165854165893 isbn 978-0-89791-587-8 ungar david smith randall b december self power simplicity acm sigplan notices 227–242 doi 101145/3880738828 issn 0362-1340 hölzle urs ungar david optimizing dynamically-dispatched calls with run-time type feedback pldi orlando florida united states acm pp 326–336 doi 101145/178243178478 isbn 0-89791-662-x paleczny michael vick christopher click cliff java hotspot server compiler proceedings java virtual machine research technology symposium on java virtual machine research technology symposium – volume monterey california usenix association uhlig r et al intel virtualization technology computer vol38 no5 pp 48–56 may comparison software hardware techniques for x86 virtualization keith adams ole agesen vmware asplos’06 21–25 october san jose california usa surprisingly we find that first-generation hardware support rarely offers performance advantages over existing software techniques we ascribe this situation high vmm/guest transition costs rigid programming model that leaves little room for software flexibility managing either frequency cost these transitions further reading james e smith ravi nair virtual machines versatile platforms for systems processes morgan kaufmann may isbn 1-55860-910-5 pages covers both process system virtual machines craig iain d virtual machines springer isbn 1-85233-969-1 pages covers only process virtual machines external links reincarnation virtual machines article on acm queue by mendel rosenblum co-founder vmware sandia national laboratories runs million linux kernels virtual machines design inferno virtual machine by phil winterbottom rob pike software portability by virtual machine emulation by stefan vorkoetter create new virtual machine windows azure by rahul vijay manekari virtual machine for building virtual machines v t e virtualization software comparison platform virtualization software hardware virtualization hypervisors native adeos cp/cms hyper-v kvm o red hat enterprise virtualization ldoms / oracle vm server for sparc lynxsecure simmon vmware esxi o vmware vsphere o vcloud vmware infrastructure xen o oracle vm server for x86 o xenclient xtratum z/vm hosted specialized basilisk ii bhyve bochs cooperative linux dosbox dosemu l4linux mac-on-linux mac-on-mac pcem sheepshaver simh windows on windows o virtual dos machine win4lin independent microsoft virtual server parallels workstation parallels desktop for mac parallels server for mac pearpc qemu virtualbox virtual iron vmware fusion vmware player vmware server vmware workstation windows virtual pc tools ganeti ovirt virtual machine manager os-level virtualization cgroups-based o coreos o lmctfy o linux-vserver o lxc o docker o openvz freebsd jail icore virtual accounts kubernetes linux namespaces solaris containers workload partitions desktop virtualization citrix xenapp citrix xendesktop remote desktop services vmware horizon view application virtualization ceedo citrix xenapp dalvik installfree microsoft app-v remote desktop services spoon symantec workspace virtualization vmware thinapp zerovm network virtualization distributed overlay virtual ethernet dove nvgre open vswitch virtual security switch virtual extensible lan vxlan see also list emulators v t e major fields computer science note this template roughly follows acm computing classification hardware printed circuit board peripheral integrated circuit very-large-scale integration energy consumption electronic design automation computer systems organization computer architecture embedded system real-time computing dependability networks network architecture network protocol network components network scheduler network performance evaluation network service software organization interpreter middleware virtual machine operating system software quality software notations tools programming paradigm programming language compiler domain-specific language modeling language software framework integrated development environment software configuration management software library software repository software development software development process requirements analysis software design software construction software deployment software maintenance programming team open-source model theory computation model computation formal language automata theory computational complexity theory logic semantics algorithms algorithm design analysis algorithms randomized algorithm computational geometry mathematics computing discrete mathematics probability statistics mathematical software information theory mathematical analysis numerical analysis information systems database management system information storage systems enterprise information system social information systems geographic information system decision support system process control system multimedia information system data mining digital library computing platform digital marketing world wide web information retrieval security cryptography formal methods security services intrusion detection system hardware security network security information security application security human–computer interaction interaction design social computing ubiquitous computing visualization accessibility concurrency concurrent computing parallel computing distributed computing multithreading multiprocessing artificial intelligence natural language processing knowledge representation reasoning computer vision automated planning scheduling search methodology control method philosophy artificial intelligence distributed artificial intelligence machine learning supervised learning unsupervised learning reinforcement learning multi-task learning machine learning algorithms cross-validation graphics animation rendering image manipulation graphics processing unit mixed reality virtual reality image compression solid modeling applied computing e-commerce enterprise software computational mathematics computational physics computational chemistry computational biology computational social science computational engineering computational healthcare digital art electronic publishing cyberwarfare electronic voting video game word processing operations research educational technology document management computer science portal retrieved from https//enwikipediaorg/w/indexphptitle=virtualmachine&oldid=751282694 categories virtual machines operating system technology programming language implementation hidden categories pages using isbn magic links articles needing additional references from july all articles needing additional references navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages afrikaans العربية azərbaycanca বাংলা беларуская български bosanski català čeština dansk deutsch eesti español euskara فارسی français 한국어 hrvatski bahasa indonesia italiano עברית ລາວ magyar മലയാളം bahasa melayu မြန်မာဘာသာ nederlands 日本語 norsk bokmål polski português русский simple english slovenščina српски / srpski srpskohrvatski / српскохрватски suomi svenska தமிழ் türkçe українська اردو tiếng việt ייִדיש 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 