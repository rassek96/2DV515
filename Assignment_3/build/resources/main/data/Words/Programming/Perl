perl from wikipedia free encyclopedia jump navigation search this article about programming language for other uses see perl disambiguation not be confused with pearl perl paradigm multi-paradigm functional imperative object-oriented class-based reflective procedural event-driven generic designed by larry wall developer larry wall first appeared december years ago stable release / may months ago preview release / november days ago typing discipline dynamic implementation language c os cross-platform license artistic license gnu general public license filename extensions pl pm t pod website wwwperlorg influenced by awk smalltalk lisp c c++ sed unix shell pascal influenced coffeescript ecmascript/javascript falcon groovy julia lpc perl php python ruby windows powershell perl programming at wikibooks perl family high-level general-purpose interpreted dynamic programming languages languages this family include perl perl though perl not officially acronym there are various backronyms use best-known being practical extraction reporting language perl was originally developed by larry wall general-purpose unix scripting language make report processing easier since then has undergone many changes revisions perl which began redesign perl eventually evolved into separate language both languages continue be developed independently by different development teams liberally borrow ideas from one another perl languages borrow features from other programming languages including c shell script sh awk sed they provide powerful text processing facilities without arbitrary data-length limits many contemporary unix commandline tools facilitating easy manipulation text files perl gained widespread popularity late 1990s cgi scripting language part due its unsurpassed regular expression string parsing abilities addition cgi perl used for graphics programming system administration network programming finance bioinformatics other applications has been nicknamed swiss army chainsaw scripting languages because its flexibility power possibly also because its ugliness was also referred duct tape that holds internet together reference both its ubiquitous use glue language its perceived inelegance contents history o early versions o early perl o 2000–present o ponie o name o camel symbol o onion symbol overview o features o design o applications o implementation o availability + windows database interfaces comparative performance o optimizing perl future perl perl community o state onion o perl pastimes o perl on irc o cpan acme example code criticism see also references further reading external links history early versions larry wall began work on perl while working programmer at unisys released version compsourcesmisc newsgroup on december language expanded rapidly over next few years perl released featured better regular expression engine perl released added support for binary data streams originally only documentation for perl was single increasingly lengthy man page programming perl known many perl programmers camel book because its cover was published became de facto reference for language at same time perl version number was bumped not mark major change language but identify version that was well documented by book early perl main article perl version history perl went through series maintenance releases culminating perl at that point wall abandoned perl begin work on perl initial design perl continued into perl5-porters mailing list was established may coordinate work on porting perl different platforms remains primary forum for development maintenance porting perl perl was released on october was nearly complete rewrite interpreter added many new features language including objects references lexical my variables modules importantly modules provided mechanism for extending language without modifying interpreter this allowed core interpreter stabilize even enabled ordinary perl programmers add new language features perl has been active development since then perl was released on march perl was released on february with new prototypes feature this allowed module authors make subroutines that behaved like perl builtins perl was released june security release one most important events perl history took place outside language proper was consequence its module support on october comprehensive perl archive network cpan was established repository for perl modules perl itself june carries over modules distributions written by more than authors mirrored worldwide at more than locations perl was released on may included among other things universal package giving perl base object which all classes were automatically derived ability require versions modules another significant development was inclusion cgipm module which contributed perl's popularity cgi scripting language perl also now supported running under microsoft windows several other operating systems perl was released on july this release included several enhancements regex engine new hooks into backend through b modules qr// regex quote operator large selection other new core modules added support for several more operating systems including beos 2000–present major version latest update old version no longer supported old version no longer supported old version no longer supported old version no longer supported old version no longer supported old version no longer supported old version no longer supported old version no longer supported old version no longer supported older version yet still supported current stable version legend old version older version still supported current stable version latest preview version future release perl was released on march major changes included 64-bit support unicode string representation large file support ie files over gib our keyword when developing perl decision was made switch versioning scheme one more similar other open source projects after next version became with plans for development versions have odd numbers stable versions have even numbers wall put forth call for suggestions for new version perl from community process resulted rfc request for comments documents that were be used guiding development perl work began on apocalypses for perl series documents meant summarize change requests present design next generation perl they were presented digest rfcs rather than formal document at this point perl existed only description language perl was first released on july had nearly yearly updates since then perl improved unicode support added new i/o implementation added new thread implementation improved numeric accuracy added several new modules this version still remains most popular version perl used by red hat suse solaris hp-ux aix work began on synopses – documents that originally summarized apocalypses but which became specification for perl language february audrey tang began work on pugs perl interpreter written haskell this was first concerted effort towards making perl reality this effort stalled on december 20th anniversary perl perl was released perl included notable new features which brought closer perl these included switch statement called given/when regular expressions updates smart match operator ~~ around this same time development began earnest on another implementation perl known rakudo perl developed tandem with parrot virtual machine november rakudo perl has had regular monthly releases now most complete implementation perl major change development process perl occurred with perl development community has switched monthly release cycle development releases with yearly schedule stable releases by that plan bugfix point releases will follow stable releases every three months on april perl was released notable core enhancements include new package name version syntax yada yada operator intended mark placeholder code that not yet implemented implicit strictures full y2038 compliance regex conversion overloading dtrace support unicode on january perl was released contains updated modules some documentation changes version was released on june latest version that branch was released on november on may perl was released json support built-in latest version that branch was released on march on may perl was released notable new features include ability specify given version perl that one wishes emulate allowing users upgrade their version perl but still run old scripts that would normally be incompatible perl also updates core support unicode on may perl was released notable new features include new dtrace hooks lexical subs more core subs overhaul hash for security reasons support for unicode on may perl was released notable new features include subroutine signatures hash slices/new slice syntax postfix dereferencing experimental unicode rand using consistent random number generator some observers credit release perl with start modern perl movement particular this phrase describes style development that embraces use cpan takes advantage recent developments language rigorous about creating high quality code while book modern perl may be most visible standard-bearer this idea other groups such enlightened perl organization have taken up cause late several projects for alternative implementations for perl started perl5 perl6 by rakudo perl team moe by stevan little friends p2 by perl11 team under reini urban gperl by goccy rperl kickstarter project led by will braswell affiliated with perll11 project ponie ponie acronym for perl on new internal engine ponie project existed from until was be bridge between perl perl was effort rewrite perl interpreter run on parrot perl virtual machine goal was ensure future millions lines perl code at thousands companies around world ponie project ended no longer being actively developed some improvements made perl interpreter part ponie were folded into that project name perl was originally named pearl wall wanted give language short name with positive connotations he claims that he considered rejected every three- four-letter word dictionary he also considered naming after his wife gloria wall discovered existing pearl programming language before perl's official release changed spelling name when referring language name normally capitalized perl proper noun when referring interpreter program itself name often uncapitalized perl because most unix-like file systems are case-sensitive before release first edition programming perl was common refer language perl randal l schwartz however capitalized language's name book make stand out better when typeset this case distinction was subsequently documented canonical name occasionally expanded practical extraction report language but this backronym other expansions have been suggested equally canonical including wall's own humorous pathologically eclectic rubbish lister indeed wall claims that name was intended inspire many different expansions camel symbol camel symbol used by o'reilly media programming perl published by o'reilly media features picture dromedary camel on cover commonly called camel book this image camel has become unofficial symbol perl well general hacker emblem appearing on t-shirts other clothing items o'reilly owns image trademark but licenses for non-commercial use requiring only acknowledgement link wwwperlcom licensing for commercial use decided on case by case basis o'reilly also provides programming republic perl logos for non-commercial sites powered by perl buttons for any site that uses perl onion symbol onion logo used by perl foundation perl foundation owns alternative symbol onion which licenses its subsidiaries perl mongers perlmonks perlorg others symbol visual pun on pearl onion overview main article perl language structure according wall perl has two slogans first there's more than one way do commonly known tmtowtdi second slogan easy things should be easy hard things should be possible features overall structure perl derives broadly from c perl procedural nature with variables expressions assignment statements brace -delimited blocks control structures subroutines perl also takes features from shell programming all variables are marked with leading sigils which allow variables be interpolated directly into strings however unlike shell perl uses sigils on all accesses variables unlike most other programming languages that use sigils sigil doesn't denote type variable but type expression so for example access list values hash sigil for array @ used not sigil for hash % perl also has many built-in functions that provide tools often used shell programming although many these tools are implemented by programs external shell such sorting calling operating system facilities perl takes lists from lisp hashes associative arrays from awk regular expressions from sed these simplify facilitate many parsing text-handling data-management tasks also shared with lisp are implicit return last value block fact that all statements have value thus are also expressions can be used larger expressions themselves perl added features that support complex data structures first-class functions that closures values object-oriented programming model these include references packages class-based method dispatch lexically scoped variables along with compiler directives for example strict pragma major additional feature introduced with perl was ability package code reusable modules wall later stated that whole intent perl 5's module system was encourage growth perl culture rather than perl core all versions perl do automatic data-typing automatic memory management interpreter knows type storage requirements every data object program allocates frees storage for them necessary using reference counting so cannot deallocate circular data structures without manual intervention legal type conversions — for example conversions from number string — are done automatically at run time illegal type conversions are fatal errors design design perl can be understood response three broad trends computer industry falling hardware costs rising labor costs improvements compiler technology many earlier computer languages such fortran c aimed make efficient use expensive computer hardware contrast perl was designed so that computer programmers could write programs more quickly easily perl has many features that ease task programmer at expense greater cpu memory requirements these include automatic memory management dynamic typing strings lists hashes regular expressions introspection eval function perl follows theory no built-in limits idea similar zero one infinity rule wall was trained linguist design perl very much informed by linguistic principles examples include huffman coding common constructions should be short good end-weighting important information should come first large collection language primitives perl favors language constructs that are concise natural for humans write even where they complicate perl interpreter perl's syntax reflects idea that things that are different should look different for example scalars arrays hashes have different leading sigils array indices hash keys use different kinds braces strings regular expressions have different standard delimiters this approach can be contrasted with language such lisp where same basic syntax composed simple universal symbolic expressions used for all purposes perl does not enforce any particular programming paradigm procedural object-oriented functional others even require programmer choose among them there broad practical bent both perl language community culture that surround preface programming perl begins perl language for getting your job done one consequence this that perl not tidy language includes many features tolerates exceptions its rules employs heuristics resolve syntactical ambiguities because forgiving nature compiler bugs can sometimes be hard find perl's function documentation remarks on variant behavior built-in functions list scalar contexts by saying general they do what you want unless you want consistency no written specification standard for perl language exists for perl versions through perl there are no plans create one for current version perl there has been only one implementation interpreter language has evolved along with that interpreter together with its functional tests stands de facto specification language perl however started with specification several projects aim implement some all specification applications perl has many varied applications compounded by availability many standard third-party modules perl has chiefly been used write cgi scripts large projects written perl include cpanel slash bugzilla rt twiki movable type high-traffic websites that use perl extensively include pricelinecom craigslist imdb livejournal duckduckgo slashdot ticketmaster also optional component popular lamp technology stack for web development lieu php python perl often used glue language tying together systems interfaces that were not specifically designed interoperate for data munging that converting processing large amounts data for tasks such creating reports fact these strengths are intimately linked combination makes perl popular all-purpose language for system administrators particularly because short programs often called one-liner programs can be entered run on single command line perl code can be made portable across windows unix such code often used by suppliers software both cots bespoke simplify packaging maintenance software build- deployment-scripts graphical user interfaces guis may be developed using perl for example perl/tk wxperl are commonly used enable user interaction with perl scripts such interaction may be synchronous asynchronous using callbacks update gui implementation perl implemented core interpreter written c together with large collection modules written perl c interpreter lines c code compiles mb executable on typical machine architectures alternatively interpreter can be compiled link library embedded other programs there are nearly modules distribution comprising lines perl additional lines c code much c code modules consists character encoding tables interpreter has object-oriented architecture all elements perl language—scalars arrays hashes coderefs file handles—are represented interpreter by c structs operations on these structs are defined by large collection macros typedefs functions these constitute perl c api perl api can be bewildering uninitiated but its entry points follow consistent naming scheme which provides guidance those who use life perl interpreter divides broadly into compile phase run phase perl phases are major stages interpreter's life-cycle each interpreter goes through each phase only once phases follow fixed sequence most what happens perl's compile phase compilation most what happens perl's run phase execution but there are significant exceptions perl makes important use its capability execute perl code during compile phase perl will also delay compilation into run phase terms that indicate kind processing that actually occurring at any moment are compile time run time perl compile time at most points during compile phase but compile time may also be entered during run phase compile time for code string argument passed eval built-in occurs during run phase perl often run time during compile phase spends most run phase run time code begin blocks executes at run time but compile phase at compile time interpreter parses perl code into syntax tree at run time executes program by walking tree text parsed only once syntax tree subject optimization before executed so that execution relatively efficient compile-time optimizations on syntax tree include constant folding context propagation but peephole optimization also performed perl has turing-complete grammar because parsing can be affected by run-time code executed during compile phase therefore perl cannot be parsed by straight lex/yacc lexer/parser combination instead interpreter implements its own lexer which coordinates with modified gnu bison parser resolve ambiguities language often said that only perl can parse perl meaning that only perl interpreter perl can parse perl language perl but even this not general true because perl interpreter can simulate turing machine during its compile phase would need decide halting problem order complete parsing every case long-standing result that halting problem undecidable therefore not even perl can always parse perl perl makes unusual choice giving user access its full programming power its own compile phase cost terms theoretical purity high but practical inconvenience seems be rare other programs that undertake parse perl such source-code analyzers auto-indenters have contend not only with ambiguous syntactic constructs but also with undecidability perl parsing general case adam kennedy's ppi project focused on parsing perl code document retaining its integrity document instead parsing perl executable code that not even perl itself can always do was kennedy who first conjectured that parsing perl suffers from 'halting problem ' which was later proved perl distributed with over functional tests for core perl language over functional tests for core modules these run part normal build process extensively exercise interpreter its core modules perl developers rely on functional tests ensure that changes interpreter do not introduce software bugs additionally perl users who see that interpreter passes its functional tests on their system can have high degree confidence that working properly availability perl dual licensed under both artistic license gnu general public license distributions are available for most operating systems particularly prevalent on unix unix-like systems but has been ported most modern many obsolete platforms with only six reported exceptions perl can be compiled from source code on all posix-compliant otherwise-unix-compatible platforms because unusual changes required for classic mac os environment special port called macperl was shipped independently comprehensive perl archive network carries complete list supported platforms with links distributions available on each cpan also source for publicly available perl modules that are not part core perl distribution windows users microsoft windows typically install one native binary distributions perl for win32 most commonly strawberry perl activeperl compiling perl from source code under windows possible but most installations lack requisite c compiler build tools this also makes difficult install modules from cpan particularly those that are partially written c activeperl closed source distribution from activestate that has regular releases that track core perl releases distribution also includes perl package manager ppm popular tool for installing removing upgrading managing use common perl modules included also perlscript windows script host wsh engine implementing perl language visual perl activestate tool that adds perl visual studio net development suite strawberry perl open source distribution for windows has had regular quarterly releases since january including new modules feedback requests come strawberry perl aims be able install modules like standard perl distributions on other platforms including compiling xs modules cygwin emulation layer another way running perl under windows cygwin provides unix-like environment on windows both perl cpan are available standard pre-compiled packages cygwin setup program since cygwin also includes gcc compiling perl from source also possible perl executable included several windows resource kits directory with other scripting tools implementations perl come with mks toolkit uwin database interfaces perl's text-handling capabilities can be used for generating sql queries arrays hashes automatic memory management make easy collect process returned data for example tim bunce's perl dbi application programming interface api arguments api can be text sql queries thus possible program multiple languages at same time eg for generating web page using html javascript sql here document use perl variable interpolation programmatically customize each sql queries specification perl arrays hashes structures programmatically hold resulting data sets from each sql query allows high-level mechanism for handling large amounts data for post-processing by perl subprogram early versions perl database interfaces were created by relinking interpreter with client-side database library this was sufficiently difficult that was done for only few most-important most widely used databases restricted resulting perl executable using just one database interface at time perl database interfaces are implemented by perl dbi modules dbi database interface module presents single database-independent interface perl applications while dbd database driver modules handle details accessing some different databases there are dbd drivers for most ansi sql databases dbi provides caching for database handles queries which can greatly improve performance long-lived execution environments such mod perl helping high-volume systems avert load spikes slashdot effect modern perl applications especially those written using web frameworks such catalyst dbi module often used indirectly via object-relational mappers such dbixclass classdbi rosedbobject that generate sql queries handle data transparently application author comparative performance computer language benchmarks game project hosted by alioth compares performance implementations typical programming problems several programming languages submitted perl implementations typically perform toward high end memory-usage spectrum give varied speed results perl's performance benchmarks game typical for interpreted languages large perl programs start more slowly than similar programs compiled languages because perl has compile source every time runs talk at yapceurope conference subsequent article timely start jean-louis leroy found that his perl programs took much longer run than expected because perl interpreter spent significant time finding modules within his over-large include path unlike java python ruby perl has only experimental support for pre-compiling therefore perl programs pay this overhead penalty on every execution run phase typical programs long enough that amortized startup time not substantial but benchmarks that measure very short execution times are likely be skewed due this overhead number tools have been introduced improve this situation first such tool was apache's mod perl which sought address one most-common reasons that small perl programs were invoked rapidly cgi web development activeperl via microsoft isapi provides similar performance improvements once perl code compiled there additional overhead during execution phase that typically isn't present for programs written compiled languages such c c++ examples such overhead include bytecode interpretation reference-counting memory management dynamic type-checking optimizing because perl interpreted language can give problems when efficiency critical such situations most critical routines can be written other languages such c which can be connected perl via simple inline modules more complex but flexible xs mechanism perl main article perl camelia logo for perl project at perl conference jon orwant made case for major new language-initiative this led decision begin work on redesign language be called perl proposals for new language features were solicited from perl community at large which submitted more than rfcs wall spent next few years digesting rfcs synthesizing them into coherent framework for perl he has presented his design for perl series documents called apocalypses - numbered correspond chapters programming perl january developing specification perl encapsulated design documents called synopses - numbered correspond apocalypses perl not intended be backward compatible although there will be compatibility mode perl perl are distinct languages with common ancestry thesis work by bradley m kuhn overseen by wall considered possible use java virtual machine runtime for perl kuhn's thesis showed this approach be problematic was decided that perl would run on cross-language virtual machine called parrot this will mean that other languages targeting parrot will gain native access cpan allowing some level cross-language development audrey tang created pugs project implementation perl haskell this acted continues act test platform for perl language separate from development actual implementation - allowing language designers explore pugs project spawned active perl/haskell cross-language community centered around freenode perl6 irc channel number features perl language show similarities haskell perl development centers primarily around two compilers rakudo perl implementation running on parrot virtual machine java virtual machine developers are also working on moarvm c language-based virtual machine designed specifically for rakudo niecza which targets common language runtime future perl development perl also continuing perl was released april with some new features influenced by design perl followed by perl released on june perl released on august perl released on may perl development versions are released on monthly basis with major releases coming out once per year future plans for perl include making core language easier extend from modules providing small extensible meta-object protocol core relative proportion internet searches for 'perl programming' compared with similar searches for other programming languages steadily declined from about 10% about 2% has remained around 2% level since perl community perl's culture community has developed alongside language itself usenet was first public venue which perl was introduced but over course its evolution perl's community was shaped by growth broadening internet-based services including introduction world wide web community that surrounds perl was fact topic wall's first state onion talk state onion state onion name for wall’s yearly keynote-style summaries on progress perl its community they are characterized by his hallmark humor employing references perl’s culture wider hacker culture wall’s linguistic background sometimes his family life occasionally even his christian background each talk first given at various perl conferences eventually also published online perl pastimes japhs email usenet message board postings just another perl hacker japh programs are common trend originated by randal l schwartz one earliest professional perl trainers parlance perl culture perl programmers are known perl hackers from this derives practice writing short programs print out phrase just another perl hacker spirit original concept these programs are moderately obfuscated short enough fit into signature email usenet message canonical japh developed by schwartz includes comma at end although this often omitted perl golf perl golf pastime reducing number characters key strokes used perl program bare minimum much same way that golf players seek take few shots possible round phrase's first use emphasized difference between pedestrian code meant teach newcomer terse hacks likely amuse experienced perl programmers example latter being japhs that were already used signatures usenet postings elsewhere similar stunts had been unnamed pastime language apl previous decades use perl write program that performed rsa encryption prompted widespread practical interest this pastime subsequent years term code golf has been applied pastime other languages perl golf apocalypse was held at perl conference monterey california july obfuscation with c obfuscated code competitions were well known pastime late 1990s obfuscated perl contest was competition held by perl journal from that made arch virtue perl's syntactic flexibility awards were given for categories such most powerful—programs that made efficient use space—and best four-line signature for programs that fit into four lines characters style usenet signature block poetry perl poetry practice writing poems that can be compiled legal perl code for example piece known black perl perl poetry made possible by large number english words that are used perl language new poems are regularly submitted community at perlmonks perl on irc there are number irc channels that offer support for language some modules irc network channels ircfreenodenet perl perl6 cbstream perlcafe poe ircperlorg moose poe catalyst dbix-class perl-help distzilla epo corehackers sdl win32 toolchain padre dancer ircslashnetorg perlmonks ircoftcnet perl ircefnetnet perlhelp ircrizonnet perl ircdebianorg debian-perl packaging perl modules for debian cpan acme there are also many examples code written purely for entertainment on cpan linguaromanaperligata for example allows writing programs latin upon execution such program module translates its source code into regular perl runs perl community has set aside acme namespace for modules that are fun nature but its scope has widened include exploratory experimental code any other module that not meant ever be used production some acme modules are deliberately implemented amusing ways this includes acmebleach one first modules acme namespace which allows program's source code be whitened ie all characters replaced with whitespace yet still work example code older versions perl one would write hello world program print hello world\n later versions which support say statement one can also write use say hello world good perl practices require more complex programs add use strict use warnings pragmas leading into something like use strict use warnings print hello world\n here more complex perl program that counts down seconds up given threshold /usr/bin/perl use strict use warnings use iohandle my $remaining $total $remaining = $total = shift@argv stdout->autoflush1 while $remaining { printf remaining %s/%s \r $remaining-- $total sleep } print \n perl interpreter can also be used for one-off scripts on command line following example invoked from sh-compatible shell such bash translates string bob all files ending with txt current directory robert $ perl -ibak -lp -e 's/bob/robert/g' txt criticism perl has been referred line noise by some programmers who claim its syntax makes write-only language earliest such mention was first edition book learning perl perl tutorial book written by randal l schwartz first chapter which he states yes sometimes perl looks like line noise uninitiated but seasoned perl programmer looks like checksummed line noise with mission life he also stated that accusation that perl write-only language could be avoided by coding with proper care perl overview document perlintro states that names built-in magic scalar variables look like punctuation line noise perlstyle document states that line noise regular expressions could be mitigated using /x modifier add whitespace according perl faq perl was designed mitigate usual suspects that elicit line noise claim from perl critics including removal majority punctuation variables sanitization regex syntax perl faq also states that what sometimes referred perl's line noise actual syntax language just gerunds prepositions are part english language december blog posting despite claiming that rakudo perl has failed will continue fail unless gets some adult supervision chromatic stated that design perl has well-defined grammar well improved type system unified object system with intelligent metamodel metaoperators clearer system context that provides for such niceties pervasive laziness he also stated that perl has coherence consistency that perl lacks see also free software portal computer programming portal outline perl perl data language perl object environment plain old documentation references perl now available wwwnntpperlorg retrieved announcing perl perlorg retrieved b artistic license - devperlorg b artistic - file on perl git repository b perl licensing devperlorg retrieved about perl perlorg retrieved perl family languages perl part family but separate language that has its own development team its existence has no significant impact on continuing development perl lapworth leo general questions about perl perl faq perlorg retrieved february perl1 practical extraction/report language - linux man page linuxdienet retrieved sheppard doug beginner's introduction perl devperlorg retrieved ashton elaine timeline perl its culture v300505 b c d wall larry tom christiansen jon orwant july programming perl third edition o'reilly media isbn 0-596-00027-8 cs1 maint multiple names authors list link language evaluations perl's strongest point its extremely powerful built-in facilities for pattern-directed processing textual line-oriented data formats unsurpassed at this you used perl write what perl has always been go-to language for any task that involves pattern-matching input importance perl perl's unparalleled ability process text smith roderick w june advanced linux networking addison-wesley professional p isbn 978-0-201-77423-8 sheppard doug beginner's introduction perl o'reilly media retrieved raymond eric swiss army chainsaw jargon file retrieved leonard andrew joy perl saloncom retrieved larry wall v13i001 perl replacement for awk sed part01/10 newsgroup compsourcesunix retrieved perlperl5porters archive perlorg retrieved perlhist - perl history records perl version documentation perldocperlorg retrieved cpan cpan retrieved b perl5004delta - what's new for perl5004 perl version documentation perldocperlorg retrieved patwardhan nathan siever ellen spainhour stephen perl nutshell second edition o'reilly media isbn 978-0-596-00241-1 perl5005delta - what's new for perl5005 perl version documentation perldocperlorg retrieved b c d e f g h i j k perl source wwwcpanorg retrieved perl56delta - what's new for perl v560 perl version documentation perldocperlorg retrieved perl56delta - what's new for perl v56x perl version documentation perldocperlorg retrieved wall larry apocalypse ugly bad good retrieved perl58delta - what new for perl v580 perl version documentation perldocperlorg retrieved plan for pugs o'reilly media retrieved tang audrey re how implement perl ten years perlmonks retrieved perl5100delta - what new for perl perl version documentation perldocperlorg retrieved perlsyn - perl syntax perl version documentation perldocperlorg retrieved b perl5120delta - what new for perl v5120 perl version documentation perldocperlorg retrieved perldelta - what new for perl v5123 perl version documentation perldocperlorg retrieved b perldelta - what new for perl v5160 perl version documentation metacpanorg retrieved perl5180delta - what new for perl v5180 - perl programming language perl version documentation metacpanorg retrieved perl5200delta - what new for perl v5200 - perl programming language perl version documentation metacpanorg retrieved milestones perl renaissance - modern perl programming modernperlbookscom retrieved on preface modern perl 2011-2012 modernperlbookscom retrieved on modern perl 2011-2012 edition by chromatic | onyx neon press onyxneoncom retrieved on yapcna - june 3-5 austin texas yapcnaorg retrieved little stevan what moe clarification | stevan little blogsperlorg retrieved p2 on potion perl11org retrieved goccy/gperl 路 github githubcom retrieved rperl rperlorg retrieved geoff broadwell august oscon inside ponie bridge from perl perl o'reilly onlamp blog jesse vincent august ponie has been put out pasture perl foundation richardson marjorie larry wall guru perl linux journal retrieved perlfaq1 what's difference between perl perl perldocperlorg - perl version documentation schwartz randal foy brian phoenix tom june learning perl o'reilly media inc p isbn 978-1449313142 perl sometimes called practical extraction report language although has also been called pathologically eclectic rubbish lister among other expansions it's actually backronym not acronym since larry wall perl’s creator came up with name first expansion later that’s why perl isn’t all caps there's no point arguing that expansion correct larry endorses both wall larry perl - perl language interpreter perl version documentation retrieved wall larry re^7 perl shibboleth perl community perlmonks retrieved b schwartz randal l phoenix tom foy brian learning perl third edition isbn 978-0-596-00132-2 b perl camel usage trademark information o'reilly media retrieved perl trademark perl foundation retrieved gillmore dan republic perl chicago tribune retrieved title unknown usenet 199705101952maa00756@wallorg wall larry wherefore art thou linux journal retrieved perlfunc - perl builtin functions perl version documentation perldocperlorg retrieved perl specification perl project retrieved perl compilers perl project retrieved gilmore w j beginning php mysql from novice professional fourth edition apress p isbn 978-1-4302-3114-1 imdb helpdesk what software/hardware are you using run site internet movie database retrieved duckduckgo handles large amount search queries at million queries per day duckduckgo uses perl perl books - book data munging with perl perlorg retrieved december description perl interpreter can be found programming perl 3rd ed chapter see particularly page which carefully distinguishes run phase compile phase from run time compile time perl time phase are often confused schwartz randal on parsing perl retrieved perl journal 19/926 pdf o'reilly media retrieved kennedy adam ppi—parse analyze manipulate perl without perl cpan rice's theorem perl review 23–29 summer perl undecidable perl review 7–11 fall available online at kegler jeffrey perl undecidability hietaniemi jarkko perl ports binary distributions cpanorg macperl pages prime time freeware perl ports binary distributions cpan retrieved activeperl perl for windows mac linux aix hp-ux & solaris activestate software retrieved using ppm activestate software retrieved descartes alligator bunce tim programming perl dbi ed beijing o'reilly isbn 1-56592-699-4 bekman stas efficient work with databases under modperl retrieved alioth computer language benchmarks game project info alioth retrieved which programs are fastest computer language benchmarks game alioth retrieved leroy jean-louis timely start o'reilly beattie malcolm & enache adrian bbytecode perl compiler's bytecode backend cpan ingerson brian inline - metacpanorg cpan archived from original on june retrieved perl perl project retrieved torkington nathan transcription larry's talk nntpperlorg retrieved official perl documentation perl project retrieved perl - devperlorg devperlorg retrieved kuhn bradley january considerations on porting perl java virtual machine university cincinnati retrieved feature comparison perl compilers worthington jonathan rakudo jvm news more tests plus thread promise prototypes 6guts retrieved july worthington jonathan moarvm virtual machine for nqp rakudo 6guts retrieved july perl released - update heise media uk archived from original on april retrieved perl released retrieved unstoppable perl release train lwnnet retrieved dave rolsky perl beyond lwnnet tiobe software index tiobe programming community index perl retrieved wall larry perl culture aka first state onion larry wall 2nd state onion retrieved search for 'church' randal l schwartz who just another perl hacker newsgroup complangperlmisc usenet m1hfpvh2jqfsf@halfdomeholditcom retrieved december schwartz randal canonical japh perlmonks retrieved greg bacon re incrementing value slice newsgroup complangperlmisc usenet 7imnti$mjh$1@info2uahedu retrieved back adam rsa lines perl retrieved code golf what code golf 29degrees gallo felix zeroth obfuscated perl contest jon orwant games diversions perl culture best perl journal pdf o'reilly media retrieved cs1 maint uses editors parameter link perl poetry perlmonks retrieved conway damian linguaromanaperligata -- perl for xxi-imum century brocard leon use perl journal acme grnlightnet developer update dr dobb's developer update miller-freeman b schwartz randal l learning perl o'reilly & associates perlintro perl version documentation perl porters perldocperlorg retrieved perlstyle perl version documentation perl porters perldocperlorg retrieved b perl faq perl project retrieved b chromatic implementation perl versus perl retrieved further reading learning perl 6th edition o'reilly beginner-level introduction perl beginning perl 1st edition wrox beginner's tutorial for those new programming just new perl modern perl 2nd edition onyx neon describes modern perl programming techniques programming perl 4th edition o'reilly definitive perl reference effective perl programming 2nd edition addison-wesley intermediate- advanced-level guide writing idiomatic perl perl cookbook isbn 0-596-00313-7 practical perl programming examples dominus mark jason higher order perl morgan kaufmann isbn 1-55860-701-3 functional programming techniques perl external links find more aboutperlat wikipedia's sister projects definitions from wiktionary media from commons quotations from wikiquote textbooks from wikibooks learning resources from wikiversity official website metacpan - new comprehensive perl archive network web interface comprehensive perl archive network - canonical location for perl code modules perl foundation perlmonks - community committed sharing perl knowledge coding tips v t e perl people larry wall randal l schwartz damian conway allison randal audrey tang sean m burke chromatic adam kennedy brian d foy jesse vincent things cpan perl foundation o perl mongers o perlmonks o archives module perl vm parrot yapc frameworks bioperl catalyst dancer dbi dbixclass lwp mason maypole mojolicious moose plack psgi template toolkit software amavis argus @ssp awstats backuppc bricolage bugzilla dada mail ikiwiki makepp movable type munin otrs spamassassin twiki/foswiki w3perl webmin outline category v t e programming languages comparison timeline history assembly basic c c++ c cobol fortran go haskell java javascript js lisp lua objective-c pascal perl php python ruby shell smalltalk swift visual basic net vbnet more category comparison lists o alphabetical o categorical o generational o non-english-based v t e free open-source software general alternative terms for free software comparison open-source closed-source software comparison source code hosting facilities free software free software project directories gratis versus libre long-term support open-source software open-source software development outline software packages audio bioinformatics codecs collaboration configuration management device drivers o graphics o wireless geophysics health mathematics operating systems programming languages routing statistics television video games web applications o content management systems o e-commerce word processors android apps ios apps commercial trademarked formerly proprietary community free software movement history open-source software movement organizations events licenses apache apsl artistic beerware boost bsd cc0 cddl epl gnu gpl gnu lgpl isc mit mpl ms-pl/rl wtfpl zlib license types standards comparison free open-source software licenses contributor license agreement copyfree copyleft debian free software guidelines definition free cultural works free license free software definition open source definition open-source license permissive free software licence public domain viral license challenges binary blob digital rights management hardware restrictions license proliferation mozilla software rebranding proprietary software sco/linux controversies secure boot software patents software security trusted computing related topics cathedral bazaar forking microsoft open specification promise revolution os book category commons portal authority control gnd 4307836-9 retrieved from https//enwikipediaorg/w/indexphptitle=perl&oldid=750628894 categories perl american inventions c programming language family cross-platform software dynamic programming languages dynamically typed programming languages free compilers interpreters free software programmed c high-level programming languages object-oriented programming languages procedural programming languages programming languages created scripting languages software using artistic license text-oriented programming languages unix programming tools hidden categories cs1 maint multiple names authors list all articles with dead external links articles with dead external links from november cs1 maint uses editors parameter use mdy dates from september good articles pages using deprecated image syntax all articles with unsourced statements articles with unsourced statements from january articles with unsourced statements from february articles containing potentially dated statements from all articles containing potentially dated statements articles containing potentially dated statements from january articles containing potentially dated statements from wikipedia articles with gnd identifiers articles with example code pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikibooks wikiquote wikiversity languages alemannisch العربية azərbaycanca বাংলা bân-lâm-gú беларуская български català čeština cymraeg dansk deitsch deutsch eesti ελληνικά español esperanto euskara فارسی français gaeilge galego ગુજરાતી 한국어 հայերեն हिन्दी hrvatski bahasa indonesia italiano עברית ಕನ್ನಡ ქართული қазақша kurdî latina latviešu lëtzebuergesch lietuvių magyar македонски മലയാളം मराठी bahasa melayu မြန်မာဘာသာ nederlands नेपाल भाषा 日本語 norsk bokmål norsk nynorsk ଓଡ଼ିଆ polski português română русский саха тыла scots shqip simple english slovenčina slovenščina کوردیی ناوەندی српски / srpski srpskohrvatski / српскохрватски suomi svenska தமிழ் ไทย тоҷикӣ türkçe українська اردو tiếng việt 粵語 žemaitėška 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 