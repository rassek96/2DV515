computer from wikipedia free encyclopedia jump navigation search computer system redirects here for other uses see computer disambiguation computer system disambiguation computer computers computing devices from different eras computer device that can be instructed carry out arbitrary set arithmetic logical operations automatically ability computers follow sequence operations called program make computers very flexible useful such computers are used control systems for very wide variety industrial consumer devices this includes simple special purpose devices like microwave ovens remote controls factory devices such industrial robots computer assisted design but also general purpose devices like personal computers mobile devices such smartphones internet run on computers connects millions other computers since ancient times simple manual devices like abacus aided people doing calculations early industrial revolution some mechanical devices were built automate long tedious tasks such guiding patterns for looms more sophisticated electrical machines did specialized analog calculations early 20th century first digital electronic calculating machines were developed during world war ii speed power versatility computers has increased continuously dramatically since then conventionally modern computer consists at least one processing element typically central processing unit cpu some form memory processing element carries out arithmetic logical operations sequencing control unit can change order operations response stored information peripheral devices include input devices keyboards mice joystick etc output devices monitor screens printers etc input/output devices that perform both functions eg 2000s-era touchscreen peripheral devices allow information be retrieved from external source they enable result operations be saved retrieved contents etymology history o pre-twentieth century o first computing device o analog computers o digital computers + electromechanical + vacuum tubes digital electronic circuits o modern computers + concept modern computer + stored programs + transistors + integrated circuits o mobile computers become dominant programs o stored program architecture o machine code o programming language + low-level languages + high-level languages/third generation language o fourth generation languages o program design o bugs components o control unit o central processing unit cpu o arithmetic logic unit alu o memory o input/output i/o o multitasking o multiprocessing networking internet o computer architecture paradigms misconceptions o unconventional computing future further topics o artificial intelligence hardware o history computing hardware o other hardware topics software languages o firmware types o based on uses o based on sizes input devices output devices professions organizations see also notes references external links etymology according oxford english dictionary first known use word computer was book called yong mans gleanings by english writer richard braithwait i haue read truest computer times best arithmetician that euer breathed he reduceth thy dayes into short number this usage term referred person who carried out calculations computations word continued with same meaning until middle 20th century from end 19th century word began take on its more familiar meaning machine that carries out computations online etymology dictionary gives first attested use computer 1640s one who calculates this agent noun from compute v online etymology dictionary states that use term mean calculating machine any type from online etymology dictionary indicates that modern use term mean programmable digital electronic computer dates from under this name theoretical from turing machine history main article history computing hardware pre-twentieth century ishango bone devices have been used aid computation for thousands years mostly using one-to-one correspondence with fingers earliest counting device was probably form tally stick later record keeping aids throughout fertile crescent included calculi clay spheres cones etc which represented counts items probably livestock grains sealed hollow unbaked clay containers use counting rods one example chinese suanpan 算盘 number represented on this abacus abacus was initially used for arithmetic tasks roman abacus was developed from devices used babylonia early bc since then many other forms reckoning boards tables have been invented medieval european counting house checkered cloth would be placed on table markers moved around on according certain rules aid calculating sums money ancient greek-designed antikythera mechanism dating between bc world's oldest analog computer antikythera mechanism believed be earliest mechanical analog computer according derek j de solla price was designed calculate astronomical positions was discovered antikythera wreck off greek island antikythera between kythera crete has been dated circa bc devices level complexity comparable that antikythera mechanism would not reappear until thousand years later many mechanical aids calculation measurement were constructed for astronomical navigation use planisphere was star chart invented by abū rayhān al-bīrūnī early 11th century astrolabe was invented hellenistic world either 1st 2nd centuries bc often attributed hipparchus combination planisphere dioptra astrolabe was effectively analog computer capable working out several different kinds problems spherical astronomy astrolabe incorporating mechanical calendar computer gear -wheels was invented by abi bakr isfahan persia abū rayhān al-bīrūnī invented first mechanical geared lunisolar calendar astrolabe early fixed-wired knowledge processing machine with gear train gear-wheels circa ad sector calculating instrument used for solving problems proportion trigonometry multiplication division for various functions such squares cube roots was developed late 16th century found application gunnery surveying navigation planimeter was manual instrument calculate area closed figure by tracing over with mechanical linkage slide rule slide rule was invented around 1620–1630 shortly after publication concept logarithm hand-operated analog computer for doing multiplication division slide rule development progressed added scales provided reciprocals squares square roots cubes cube roots well transcendental functions such logarithms exponentials circular hyperbolic trigonometry other functions aviation one few fields where slide rules are still widespread use particularly for solving time–distance problems light aircraft save space for ease reading these are typically circular devices rather than classic linear slide rule shape popular example e6b 1770s pierre jaquet-droz swiss watchmaker built mechanical doll automata that could write holding quill pen by switching number order its internal wheels different letters hence different messages could be produced effect could be mechanically programmed read instructions along with two other complex machines doll at musée d'art et d'histoire neuchâtel switzerland still operates tide-predicting machine invented by sir william thomson was great utility navigation shallow waters used system pulleys wires automatically calculate predicted tide levels for set period at particular location differential analyser mechanical analog computer designed solve differential equations by integration used wheel-and-disc mechanisms perform integration lord kelvin had already discussed possible construction such calculators but he had been stymied by limited output torque ball-and-disk integrators differential analyzer output one integrator drove input next integrator graphing output torque amplifier was advance that allowed these machines work starting 1920s vannevar bush others developed mechanical differential analyzers first computing device portion babbage's difference engine charles babbage english mechanical engineer polymath originated concept programmable computer considered father computer he conceptualized invented first mechanical computer early 19th century after working on his revolutionary difference engine designed aid navigational calculations he realized that much more general design analytical engine was possible input programs data was be provided machine via punched cards method being used at time direct mechanical looms such jacquard loom for output machine would have printer curve plotter bell machine would also be able punch numbers onto cards be read later engine incorporated arithmetic logic unit control flow form conditional branching loops integrated memory making first design for general-purpose computer that could be described modern terms turing-complete machine was about century ahead its time all parts for his machine had be made by hand — this was major problem for device with thousands parts eventually project was dissolved with decision british government cease funding babbage's failure complete analytical engine can be chiefly attributed difficulties not only politics financing but also his desire develop increasingly sophisticated computer move ahead faster than anyone else could follow nevertheless his son henry babbage completed simplified version analytical engine's computing unit mill he gave successful demonstration its use computing tables analog computers sir william thomson's third tide-predicting machine design 1879–81 during first half 20th century many scientific computing needs were met by increasingly sophisticated analog computers which used direct mechanical electrical model problem basis for computation however these were not programmable generally lacked versatility accuracy modern digital computers first modern analog computer was tide-predicting machine invented by sir william thomson differential analyser mechanical analog computer designed solve differential equations by integration using wheel-and-disc mechanisms was conceptualized by james thomson brother more famous lord kelvin art mechanical analog computing reached its zenith with differential analyzer built by h l hazen vannevar bush at mit starting this built on mechanical integrators james thomson torque amplifiers invented by h w nieman dozen these devices were built before their obsolescence became obvious by 1950s success digital electronic computers had spelled end for most analog computing machines but analog computers remained use during 1950s some specialized applications such education control systems aircraft slide rule digital computers electromechanical by united states navy had developed electromechanical analog computer small enough use aboard submarine this was torpedo data computer which used trigonometry solve problem firing torpedo at moving target during world war ii similar devices were developed other countries well replica zuse's z3 first fully automatic digital electromechanical computer early digital computers were electromechanical electric switches drove mechanical relays perform calculation these devices had low operating speed were eventually superseded by much faster all-electric computers originally using vacuum tubes z2 created by german engineer konrad zuse was one earliest examples electromechanical relay computer zuse followed his earlier machine up with z3 world's first working electromechanical programmable fully automatic digital computer z3 was built with relays implementing bit word length that operated at clock frequency about 5–10 hz program code was supplied on punched film while data could be stored words memory supplied from keyboard was quite similar modern machines some respects pioneering numerous advances such floating point numbers rather than harder-to-implement decimal system used charles babbage's earlier design using binary system meant that zuse's machines were easier build potentially more reliable given technologies available at that time z3 was turing complete vacuum tubes digital electronic circuits purely electronic circuit elements soon replaced their mechanical electromechanical equivalents at same time that digital calculation replaced analog engineer tommy flowers working at post office research station london 1930s began explore possible use electronics for telephone exchange experimental equipment that he built went into operation years later converting portion telephone exchange network into electronic data processing system using thousands vacuum tubes us john vincent atanasoff clifford e berry iowa state university developed tested atanasoff–berry computer abc first automatic electronic digital computer this design was also all-electronic used about vacuum tubes with capacitors fixed mechanically rotating drum for memory colossus was first electronic digital programmable computing device was used break german ciphers during world war ii during world war ii british at bletchley park achieved number successes at breaking encrypted german military communications german encryption machine enigma was first attacked with help electro-mechanical bombes crack more sophisticated german lorenz sz 40/42 machine used for high-level army communications max newman his colleagues commissioned flowers build colossus he spent eleven months from early february designing building first colossus after functional test december colossus was shipped bletchley park where was delivered on january attacked its first message on february colossus was world's first electronic digital programmable computer used large number valves vacuum tubes had paper-tape input was capable being configured perform variety boolean logical operations on its data but was not turing-complete nine mk ii colossi were built mk i was converted mk ii making ten machines total colossus mark i contained thermionic valves tubes but mark ii with valves was both times faster simpler operate than mark greatly speeding decoding process eniac was first turing-complete device performed ballistics trajectory calculations for united states army us-built eniac electronic numerical integrator computer was first electronic programmable computer built us although eniac was similar colossus was much faster more flexible like colossus program on eniac was defined by states its patch cables switches far cry from stored program electronic machines that came later once program was written had be mechanically set into machine with manual resetting plugs switches combined high speed electronics with ability be programmed for many complex problems could add subtract times second thousand times faster than any other machine also had modules multiply divide square root high speed memory was limited words about bytes built under direction john mauchly j presper eckert at university pennsylvania eniac's development construction lasted from full operation at end machine was huge weighing tons using kilowatts electric power contained over vacuum tubes relays hundreds thousands resistors capacitors inductors modern computers concept modern computer principle modern computer was proposed by alan turing his seminal paper on computable numbers turing proposed simple device that he called universal computing machine that now known universal turing machine he proved that such machine capable computing anything that computable by executing instructions program stored on tape allowing machine be programmable fundamental concept turing's design stored program where all instructions for computing are stored memory von neumann acknowledged that central concept modern computer was due this paper turing machines are this day central object study theory computation except for limitations imposed by their finite memory stores modern computers are said be turing-complete which say they have algorithm execution capability equivalent universal turing machine stored programs section manchester small-scale experimental machine first stored-program computer early computing machines had fixed programs changing its function required re-wiring re-structuring machine with proposal stored-program computer this changed stored-program computer includes by design instruction set can store memory set instructions program that details computation theoretical basis for stored-program computer was laid by alan turing his paper turing joined national physical laboratory began work on developing electronic stored-program digital computer his report proposed electronic calculator was first specification for such device john von neumann at university pennsylvania also circulated his first draft report on edvac ferranti mark c manchester small-scale experimental machine nicknamed baby was world's first stored-program computer was built at victoria university manchester by frederic c williams tom kilburn geoff tootill ran its first program on june was designed testbed for williams tube first random-access digital storage device although computer was considered small primitive by standards its time was first working machine contain all elements essential modern electronic computer soon ssem had demonstrated feasibility its design project was initiated at university develop into more usable computer manchester mark mark turn quickly became prototype for ferranti mark world's first commercially available general-purpose computer built by ferranti was delivered university manchester february at least seven these later machines were delivered between one them shell labs amsterdam october directors british catering company j lyons & company decided take active role promoting commercial development computers leo i computer became operational april ran world's first regular routine office computer job transistors bipolar junction transistor bipolar transistor was invented from onwards transistors replaced vacuum tubes computer designs giving rise second generation computers compared vacuum tubes transistors have many advantages they are smaller require less power than vacuum tubes so give off less heat silicon junction transistors were much more reliable than vacuum tubes had longer indefinite service life transistorized computers could contain tens thousands binary logic circuits relatively compact space at university manchester team under leadership tom kilburn designed built machine using newly developed transistors instead valves their first transistorised computer first world was operational by second version was completed there april however machine did make use valves generate its khz clock waveforms circuitry read write on its magnetic drum memory so was not first completely transistorized computer that distinction goes harwell cadet built by electronics division atomic energy research establishment at harwell integrated circuits next great advance computing power came with advent integrated circuit idea integrated circuit was first conceived by radar scientist working for royal radar establishment ministry defence geoffrey wa dummer dummer presented first public description integrated circuit at symposium on progress quality electronic components washington dc on may first practical ics were invented by jack kilby at texas instruments robert noyce at fairchild semiconductor kilby recorded his initial ideas concerning integrated circuit july successfully demonstrating first working integrated example on september his patent application february kilby described his new device body semiconductor material wherein all components electronic circuit are completely integrated noyce also came up with his own idea integrated circuit half year later than kilby his chip solved many practical problems that kilby's had not produced at fairchild semiconductor was made silicon whereas kilby's chip was made germanium this new development heralded explosion commercial personal use computers led invention microprocessor while subject exactly which device was first microprocessor contentious partly due lack agreement on exact definition term microprocessor largely undisputed that first single-chip microprocessor was intel designed realized by ted hoff federico faggin stanley mazor at intel mobile computers become dominant with continued miniaturization computing resources advancements portable battery life portable computers grew popularity 2000s same developments that spurred growth laptop computers other portable computers allowed manufacturers integrate computing resources into cellular phones these so-called smartphones tablets run on variety operating systems have become dominant computing device on market with manufacturers reporting having shipped estimated million devices 2q programs defining feature modern computers which distinguishes them from all other machines that they can be programmed that say that some type instructions program can be given computer will process them modern computers based on von neumann architecture often have machine code form imperative programming language practical terms computer program may be just few instructions extend many millions instructions do programs for word processors web browsers for example typical modern computer can execute billions instructions per second gigaflops rarely makes mistake over many years operation large computer programs consisting several million instructions may take teams programmers years write due complexity task almost certainly contain errors stored program architecture main articles computer program computer programming replica small-scale experimental machine ssem world's first stored-program computer at museum science industry manchester england this section applies most common ram machine-based computers most cases computer instructions are simple add one number another move some data from one location another send message some external device etc these instructions are read from computer's memory are generally carried out executed order they were given however there are usually specialized instructions tell computer jump ahead backwards some other place program carry on executing from there these are called jump instructions branches furthermore jump instructions may be made happen conditionally so that different sequences instructions may be used depending on result some previous calculation some external event many computers directly support subroutines by providing type jump that remembers location jumped from another instruction return instruction following that jump instruction program execution might be likened reading book while person will normally read each word line sequence they may at times jump back earlier place text skip sections that are not interest similarly computer may sometimes go back repeat instructions some section program over over again until some internal condition met this called flow control within program what allows computer perform tasks repeatedly without human intervention comparatively person using pocket calculator can perform basic arithmetic operation such adding two numbers with just few button presses but add together all numbers from would take thousands button presses lot time with near certainty making mistake on other hand computer may be programmed do this with just few simple instructions following example written mips assembly language begin addi $8 $0 initialize sum addi $9 $0 set first number add = loop slti $10 $9 check if number less than beq $10 $0 finish if odd number greater than n then exit add $8 $8 $9 update sum addi $9 $9 get next number j loop repeat summing process finish add $2 $8 $0 put sum output register once told run this program computer will perform repetitive addition task without further human intervention will almost never make mistake modern pc can complete task fraction second machine code most computers individual instructions are stored machine code with each instruction being given unique number its operation code opcode for short command add two numbers together would have one opcode command multiply them would have different opcode so on simplest computers are able perform any handful different instructions more complex computers have several hundred choose from each with unique numerical code since computer's memory able store numbers can also store instruction codes this leads important fact that entire programs which are just lists these instructions can be represented lists numbers can themselves be manipulated inside computer same way numeric data fundamental concept storing programs computer's memory alongside data they operate on crux von neumann stored program architecture some cases computer might store some all its program memory that kept separate from data operates on this called harvard architecture after harvard mark i computer modern von neumann computers display some traits harvard architecture their designs such cpu caches while possible write computer programs long lists numbers machine language while this technique was used with many early computers extremely tedious potentially error-prone do so practice especially for complicated programs instead each basic instruction can be given short name that indicative its function easy remember – mnemonic such add sub mult jump these mnemonics are collectively known computer's assembly language converting programs written assembly language into something computer can actually understand machine language usually done by computer program called assembler 1970s punched card containing one line from fortran program card reads z1 = y + w1 labeled proj039 for identification purposes programming language main article programming language programming languages provide various ways specifying programs for computers run unlike natural languages programming languages are designed permit no ambiguity be concise they are purely written languages are often difficult read aloud they are generally either translated into machine code by compiler assembler before being run translated directly at run time by interpreter sometimes programs are executed by hybrid method two techniques low-level languages main article low-level programming language machine languages assembly languages that represent them collectively termed low-level programming languages tend be unique particular type computer for instance arm architecture computer such may be found smartphone hand-held videogame cannot understand machine language x86 cpu that might be pc high-level languages/third generation language main article high-level programming language though considerably easier than machine language writing long programs assembly language often difficult also error prone therefore most practical programs are written more abstract high-level programming languages that are able express needs programmer more conveniently thereby help reduce programmer error high level languages are usually compiled into machine language sometimes into assembly language then into machine language using another computer program called compiler high level languages are less related workings target computer than assembly language more related language structure problems be solved by final program therefore often possible use different compilers translate same high level language program into machine language many different types computer this part means by which software like video games may be made available for different computer architectures such personal computers various video game consoles fourth generation languages these 4g languages are less procedural than 3g languages benefit 4gl that they provide ways obtain information without requiring direct help programmer example 4gl sql program design this section does not cite any sources please help improve this section by adding citations reliable sources unsourced material may be challenged removed july learn how when remove this template message program design small programs relatively simple involves analysis problem collection inputs using programming constructs within languages devising using established procedures algorithms providing data for output devices solutions problem applicable problems become larger more complex features such subprograms modules formal documentation new paradigms such object-oriented programming are encountered large programs involving thousands line code more require formal software methodologies task developing large software systems presents significant intellectual challenge producing software with acceptably high reliability within predictable schedule budget has historically been difficult academic professional discipline software engineering concentrates specifically on this challenge bugs main article software bug actual first computer bug moth found trapped on relay harvard mark ii computer errors computer programs are called bugs they may be benign not affect usefulness program have only subtle effects but some cases they may cause program entire system hang becoming unresponsive input such mouse clicks keystrokes completely fail crash otherwise benign bugs may sometimes be harnessed for malicious intent by unscrupulous user writing exploit code designed take advantage bug disrupt computer's proper execution bugs are usually not fault computer since computers merely execute instructions they are given bugs are nearly always result programmer error oversight made program's design admiral grace hopper american computer scientist developer first compiler credited for having first used term bugs computing after dead moth was found shorting relay harvard mark ii computer september components main articles central processing unit microprocessor play media video demonstrating standard components slimline computer general purpose computer has four main components arithmetic logic unit alu control unit memory input output devices collectively termed i/o these parts are interconnected by buses often made groups wires inside each these parts are thousands trillions small electrical circuits which can be turned off on by means electronic switch each circuit represents bit binary digit information so that when circuit on represents when off represents positive logic representation circuits are arranged logic gates so that one more circuits may control state one more other circuits control unit main articles cpu design control unit diagram showing how particular mips architecture instruction would be decoded by control system control unit often called control system central controller manages computer's various components reads interprets decodes program instructions transforming them into control signals that activate other parts computer control systems advanced computers may change order execution some instructions improve performance key component common all cpus program counter special memory cell register that keeps track which location memory next instruction be read from control system's function follows—note that this simplified description some these steps may be performed concurrently different order depending on type cpu read code for next instruction from cell indicated by program counter decode numerical code for instruction into set commands signals for each other systems increment program counter so points next instruction read whatever data instruction requires from cells memory perhaps from input device location this required data typically stored within instruction code provide necessary data alu register if instruction requires alu specialized hardware complete instruct hardware perform requested operation write result from alu back memory location register perhaps output device jump back step since program counter conceptually just another set memory cells can be changed by calculations done alu adding program counter would cause next instruction be read from place locations further down program instructions that modify program counter are often known jumps allow for loops instructions that are repeated by computer often conditional instruction execution both examples control flow sequence operations that control unit goes through process instruction itself like short computer program indeed some more complex cpu designs there another yet smaller computer called microsequencer which runs microcode program that causes all these events happen central processing unit cpu control unit alu registers are collectively known central processing unit cpu early cpus were composed many separate components but since mid-1970s cpus have typically been constructed on single integrated circuit called microprocessor arithmetic logic unit alu main article arithmetic logic unit alu capable performing two classes operations arithmetic logic set arithmetic operations that particular alu supports may be limited addition subtraction might include multiplication division trigonometry functions such sine cosine etc square roots some can only operate on whole numbers integers whilst others use floating point represent real numbers albeit with limited precision however any computer that capable performing just simplest operations can be programmed break down more complex operations into simple steps that can perform therefore any computer can be programmed perform any arithmetic operation—although will take more time do so if its alu does not directly support operation alu may also compare numbers return boolean truth values true false depending on whether one equal greater than less than other greater than logic operations involve boolean logic xor not these can be useful for creating complicated conditional statements processing boolean logic superscalar computers may contain multiple alus allowing them process several instructions simultaneously graphics processors computers with simd mimd features often contain alus that can perform arithmetic on vectors matrices memory main article computer data storage magnetic core memory was computer memory choice throughout 1960s until was replaced by semiconductor memory computer's memory can be viewed list cells into which numbers can be placed read each cell has numbered address can store single number computer can be instructed put number into cell numbered add number that cell number that cell put answer into cell information stored memory may represent practically anything letters numbers even computer instructions can be placed into memory with equal ease since cpu does not differentiate between different types information software's responsibility give significance what memory sees nothing but series numbers almost all modern computers each memory cell set up store binary numbers groups eight bits called byte each byte able represent different numbers = either from −128 store larger numbers several consecutive bytes may be used typically two four eight when negative numbers are required they are usually stored two's complement notation other arrangements are possible but are usually not seen outside specialized applications historical contexts computer can store any kind information memory if can be represented numerically modern computers have billions even trillions bytes memory cpu contains special set memory cells called registers that can be read written much more rapidly than main memory area there are typically between two one hundred registers depending on type cpu registers are used for most frequently needed data items avoid having access main memory every time data needed data constantly being worked on reducing need access main memory which often slow compared alu control units greatly increases computer's speed computer main memory comes two principal varieties random-access memory ram read-only memory rom ram can be read written anytime cpu commands but rom preloaded with data software that never changes therefore cpu can only read from rom typically used store computer's initial start-up instructions general contents ram are erased when power computer turned off but rom retains its data indefinitely pc rom contains specialized program called bios that orchestrates loading computer's operating system from hard disk drive into ram whenever computer turned on reset embedded computers which frequently do not have disk drives all required software may be stored rom software stored rom often called firmware because notionally more like hardware than software flash memory blurs distinction between rom ram retains its data when turned off but also rewritable typically much slower than conventional rom ram however so its use restricted applications where high speed unnecessary more sophisticated computers there may be one more ram cache memories which are slower than registers but faster than main memory generally computers with this sort cache are designed move frequently needed data into cache automatically often without need for any intervention on programmer's part input/output i/o main article input/output hard disk drives are common storage devices used with computers i/o means by which computer exchanges information with outside world devices that provide input output computer are called peripherals on typical personal computer peripherals include input devices like keyboard mouse output devices such display printer hard disk drives floppy disk drives optical disc drives serve both input output devices computer networking another form i/o i/o devices are often complex computers their own right with their own cpu memory graphics processing unit might contain fifty more tiny computers that perform calculations necessary display graphics modern desktop computers contain many smaller computers that assist main cpu performing i/o 2016-era flat screen display contains its own computer circuitry multitasking main article computer multitasking while computer may be viewed running one gigantic program stored its main memory some systems necessary give appearance running several programs simultaneously this achieved by multitasking ie having computer switch rapidly between running each program turn one means by which this done with special signal called interrupt which can periodically cause computer stop executing instructions where was do something else instead by remembering where was executing prior interrupt computer can return that task later if several programs are running at same time then interrupt generator might be causing several hundred interrupts per second causing program switch each time since modern computers typically execute instructions several orders magnitude faster than human perception may appear that many programs are running at same time even though only one ever executing any given instant this method multitasking sometimes termed time-sharing since each program allocated slice time turn before era inexpensive computers principal use for multitasking was allow many people share same computer seemingly multitasking would cause computer that switching between several programs run more slowly direct proportion number programs running but most programs spend much their time waiting for slow input/output devices complete their tasks if program waiting for user click on mouse press key on keyboard then will not take time slice until event waiting for has occurred this frees up time for other programs execute so that many programs may be run simultaneously without unacceptable speed loss multiprocessing main article multiprocessing cray designed many supercomputers that used multiprocessing heavily some computers are designed distribute their work across several cpus multiprocessing configuration technique once employed only large powerful machines such supercomputers mainframe computers servers multiprocessor multi-core multiple cpus on single integrated circuit personal laptop computers are now widely available are being increasingly used lower-end markets result supercomputers particular often have highly unique architectures that differ significantly from basic stored-program architecture from general purpose computers they often feature thousands cpus customized high-speed interconnects specialized computing hardware such designs tend be useful only for specialized tasks due large scale program organization required successfully utilize most available resources at once supercomputers usually see usage large-scale simulation graphics rendering cryptography applications well with other so-called embarrassingly parallel tasks networking internet main articles computer networking internet visualization portion routes on internet computers have been used coordinate information between multiple locations since 1950s us military's sage system was first large-scale example such system which led number special-purpose commercial systems such sabre 1970s computer engineers at research institutions throughout united states began link their computers together using telecommunications technology effort was funded by arpa now darpa computer network that resulted was called arpanet technologies that made arpanet possible spread evolved time network spread beyond academic military institutions became known internet emergence networking involved redefinition nature boundaries computer computer operating systems applications were modified include ability define access resources other computers on network such peripheral devices stored information like extensions resources individual computer initially these facilities were available primarily people working high-tech environments but 1990s spread applications like e-mail world wide web combined with development cheap fast networking technologies like ethernet adsl saw computer networking become almost ubiquitous fact number computers that are networked growing phenomenally very large proportion personal computers regularly connect internet communicate receive information wireless networking often utilizing mobile phone networks has meant networking becoming increasingly ubiquitous even mobile computing environments computer architecture paradigms there are many types computer architectures quantum computer vs chemical computer scalar processor vs vector processor non-uniform memory access numa computers register machine vs stack machine harvard architecture vs von neumann architecture cellular architecture all these abstract machines quantum computer holds most promise for revolutionizing computing logic gates are common abstraction which can apply most above digital analog paradigms ability store execute lists instructions called programs makes computers extremely versatile distinguishing them from calculators church–turing thesis mathematical statement this versatility any computer with minimum capability being turing-complete principle capable performing same tasks that any other computer can perform therefore any type computer netbook supercomputer cellular automaton etc able perform same computational tasks given enough time storage capacity misconceptions main articles human computer harvard computers women computers naca high speed flight station computer room computer does not need be electronic nor even have processor nor ram nor even hard disk while popular usage word computer synonymous with personal electronic computer modern definition computer literally device that computes especially programmable electronic machine that performs high-speed mathematical logical operations that assembles stores correlates otherwise processes information any device which processes information qualifies computer especially if processing purposeful unconventional computing main article unconventional computing historically computers evolved from mechanical computers eventually from vacuum tubes transistors however conceptually computational systems flexible personal computer can be built out almost anything for example computer can be made out billiard balls billiard ball computer often quoted example more realistically modern computers are made out transistors made photolithographed semiconductors future there active research make computers out many promising new types technology such optical computers dna computers neural computers quantum computers most computers are universal are able calculate any computable function are limited only by their memory capacity operating speed however different designs computers can give very different performance for particular problems for example quantum computers can potentially break some modern encryption algorithms by quantum factoring very quickly further topics glossary computers artificial intelligence computer will solve problems exactly way programmed without regard efficiency alternative solutions possible shortcuts possible errors code computer programs that learn adapt are part emerging field artificial intelligence machine learning hardware main articles computer hardware personal computer hardware term hardware covers all those parts computer that are tangible physical objects circuits computer chips graphic cards sound cards memory ram motherboard displays power supplies cables keyboards printers mice input devices are all hardware history computing hardware main article history computing hardware first generation mechanical/electromechanical calculators pascal's calculator arithmometer difference engine quevedo's analytical machines programmable devices jacquard loom analytical engine ibm ascc/harvard mark i harvard mark ii ibm ssec z1 z2 z3 second generation vacuum tubes calculators atanasoff–berry computer ibm univac univac programmable devices colossus eniac manchester small-scale experimental machine edsac manchester mark ferranti pegasus ferranti mercury csirac edvac univac i ibm ibm ibm z22 third generation discrete transistors ssi msi lsi integrated circuits mainframes ibm ibm ibm system/360 bunch minicomputer hp 2116a ibm system/32 ibm system/36 linc pdp-8 pdp-11 fourth generation vlsi integrated circuits minicomputer vax ibm system i 4-bit microcomputer intel intel 8-bit microcomputer intel intel motorola motorola mos technology zilog z80 16-bit microcomputer intel zilog z8000 wdc 65816/65802 32-bit microcomputer intel pentium motorola arm 64-bit microcomputer alpha mips pa-risc powerpc sparc x86-64 armv8-a embedded computer intel intel personal computer desktop computer home computer laptop computer personal digital assistant pda portable computer tablet pc wearable computer theoretical/experimental quantum computer chemical computer dna computing optical computer spintronics based computer other hardware topics peripheral device input/output input mouse keyboard joystick image scanner webcam graphics tablet microphone output monitor printer loudspeaker both floppy disk drive hard disk drive optical disc drive teleprinter computer buses short range rs-232 scsi pci usb long range computer networking ethernet atm fddi software main article computer software software refers parts computer which do not have material form such programs data protocols etc software that part computer system that consists encoded information computer instructions contrast physical hardware from which system built computer software includes computer programs libraries related non-executable data such online documentation digital media computer hardware software require each other neither can be realistically used on its own when software stored hardware that cannot easily be modified such with bios rom ibm pc compatible computer sometimes called firmware operating system /system software unix bsd unix system v ibm aix hp-ux solaris sunos irix list bsd operating systems gnu/linux list linux distributions comparison linux distributions microsoft windows windows windows windows nt windows windows me windows xp windows vista windows windows windows dos 86-dos qdos ibm pc dos ms-dos dr-dos freedos mac os mac os classic mac os x embedded real-time list embedded operating systems experimental amoeba oberon/bluebottle plan from bell labs library multimedia directx opengl openal vulkan api programming library c standard library standard template library data protocol tcp/ip kermit ftp http smtp file format html xml jpeg mpeg png user interface graphical user interface wimp microsoft windows gnome kde qnx photon cde gem aqua text-based user interface command-line interface text user interface application software office suite word processing desktop publishing presentation program database management system scheduling & time management spreadsheet accounting software internet access browser e-mail client web server mail transfer agent instant messaging design manufacturing computer-aided design computer-aided manufacturing plant management robotic manufacturing supply chain management graphics raster graphics editor vector graphics editor modeler animation editor computer graphics video editing image processing audio digital audio editor audio playback mixing audio synthesis computer music software engineering compiler assembler interpreter debugger text editor integrated development environment software performance analysis revision control software configuration management educational edutainment educational game serious game flight simulator games strategy arcade puzzle simulation first-person shooter platform massively multiplayer interactive fiction misc artificial intelligence antivirus software malware scanner installer/package management systems file manager languages there are thousands different programming languages—some intended be general purpose others useful only for highly specialized applications programming languages lists programming languages timeline programming languages list programming languages by category generational list programming languages list programming languages non-english-based programming languages commonly used assembly languages arm mips x86 commonly used high-level programming languages ada basic c c++ c cobol fortran pl/1 rexx java lisp pascal object pascal commonly used scripting languages bourne script javascript python ruby php perl firmware firmware technology which has combination both hardware software such bios chip inside computer this chip hardware located on motherboard has bios set up software stored types computers are typically classified based on their uses based on uses analog computer digital computer hybrid computer based on sizes smartphone micro computer personal computer laptop mini computer mainframe computer super computer input devices when unprocessed data sent computer with help input devices data processed sent output devices input devices may be hand-operated automated act processing mainly regulated by cpu some examples hand-operated input devices are computer keyboard digital camera digital video graphics tablet image scanner joystick microphone mouse overlay keyboard trackball touchscreen output devices means through which computer gives output are known output devices some examples output devices are computer monitor printer pc speaker projector sound card video card professions organizations use computers has spread throughout society there are increasing number careers involving computers computer-related professions hardware-related electrical engineering electronic engineering computer engineering telecommunications engineering optical engineering nanoengineering software-related computer science computer engineering desktop publishing human–computer interaction information technology information systems computational science software engineering video game industry web design need for computers work well together be able exchange information has spawned need for many standards organizations clubs societies both formal informal nature organizations standards groups ansi iec ieee ietf iso w3c professional societies acm ais iet ifip bcs free/open source software groups free software foundation mozilla foundation apache software foundation see also information technology portal computability theory computer insecurity computer security glossary computer hardware terms history computer science list computer term etymologies list fictional computers pulse computation top500 list most powerful computers notes computer n oxford english dictionary ed oxford university press retrieved april computer n online etymology dictionary according schmandt-besserat these clay containers contained tokens total which were count objects being transferred containers thus served something bill lading accounts book order avoid breaking open containers first clay impressions tokens were placed on outside containers for count shapes impressions were abstracted into stylized marks finally abstract marks were systematically used numerals these numerals were finally formalized numbers eventually schmandt-besserat estimates took years archived january at wayback machine marks on outside containers were all that were needed convey count clay containers evolved into clay tablets with marks for count archived january at wayback machine robson eleanor mathematics ancient iraq isbn 978-0-691-09182-2 p5 calculi were use iraq for primitive accounting systems early 3200–3000 bce with commodity-specific counting representation systems balanced accounting was use by 3000–2350 bce sexagesimal number system was use 2350–2000 bce antikythera mechanism research project antikythera mechanism research project retrieved july g wiet v elisseeff p wolff j naudu history mankind vol great medieval civilisations p george allen & unwin ltd unesco fuat sezgin catalogue exhibition institute for history arabic-islamic science at johann wolfgang goethe university frankfurt germany frankfurt book fair p35 & françois charette archaeology high tech from ancient greece nature 551–55230 november doi101038/444551a bedini silvio maddison francis r mechanical universe astrarium giovanni de' dondi transactions american philosophical society 1–69 doi102307/1006002 jstor price derek de s history calculating machines ieee micro 22–52 doi101109/mm1984291305 őren tuncer advances computer information sciences from abacus holonic agents pdf turk j elec engin 63–70 donald routledge hill al-biruni's mechanical calendar annals science p 139–163 writer automaton switzerland chondaycom july b ray girvan revealed grace mechanism computing after babbage archived november at wayback machine scientific computing world may/june halacy daniel stephen charles babbage father computer crowell-collier press isbn 0-02-741370-5 babbage online stuff science museum retrieved let's build babbage's ultimate mechanical computer opinion new scientist december retrieved b c d modern history computing stanford encyclopedia philosophy zuse horst part konrad zuse's z1 z3 computers life work konrad zuse epe online archived from original on retrieved zuse konrad computer – my life translated by mckenna patricia ross j andrew from der computer mein lebenswerk berlin/heidelberg springer-verlag isbn 978-3-642-08151-4 salz trautman peggy april computer pioneer rediscovered years on new york times zuse konrad der computer mein lebenswerk german 3rd ed berlin springer-verlag p isbn 978-3-540-56292-4 crash story zuse retrieved june rojas r how make zuse's z3 universal computer ieee annals history computing 51–54 doi 101109/85707574 rojas raúl how make zuse's z3 universal computer pdf january notice des moines register arthur w burks first electronic computer b c d copeland jack colossus secrets bletchley park's codebreaking computers oxford oxford university press pp 101–115 isbn 0-19-284055-x bletchley's code-cracking colossus bbc news february retrieved october colossus – rebuild story national museum computing randell brian fensom harry milne frank march obituary allen coombs independent retrieved october fensom jim november harry fensom obituary retrieved october john presper eckert jr john w mauchly electronic numerical integrator computer united states patent office us patent filed june issued february invalidated october after court ruling on honeywell v sperry rand generations computer techiwarehousecom turing m on computable numbers with application entscheidungsproblem proceedings london mathematical society 230–265 doi101112/plms/s2-421230 von neumann firmly emphasized me others i am sure that fundamental conception owing turing—insofar not anticipated by babbage lovelace others letter by stanley frankel brian randell quoted jack copeland essential turing p22 enticknap nicholas summer computing's golden jubilee resurrection computer conservation society issn 0958-7403 retrieved april early computers at manchester university resurrection computer conservation society summer issn 0958-7403 retrieved july early electronic computers 1946–51 university manchester retrieved november napper r b e introduction mark university manchester retrieved november computer conservation society our computer heritage pilot study deliveries ferranti mark i mark i star computers retrieved january lavington simon brief history british computers first years 1948–1973 british computer society retrieved january lavington simon history manchester computers ed swindon british computer society pp 34–35 b cooke-yarborough e h june some early transistor applications uk engineering science education journal london uk iee 100–106 doi101049/esej19980301 issn 0963-7346 retrieved june subscription required cooke-yarborough eh introduction transistor circuits edinburgh oliver boyd p hapless tale geoffrey dummer archived may at wayback machine nd html electronic product news accessed july archived may at wayback machine kilby jack nobel lecture pdf stockholm nobel foundation retrieved chip that jack built c html texas instruments retrieved may jack s kilby miniaturized electronic circuits united states patent office us patent filed february issued june winston brian media technology society history from telegraph internet routledge p isbn 978-0-415-14230-4 robert noyce's unitary circuit us patent semiconductor device-and-lead structure issued assigned fairchild semiconductor corporation intel4004 november intel's first microprocessor—the intel intel corp archived from original on may retrieved intel die was mm2 composed transistors by comparison pentium pro was mm2 composed million transistors according patterson david hennessy john computer organization design san francisco morgan kaufmann pp 27–39 isbn 1-55860-428-6 chartier david december global notebook shipments finally overtake desktops ars technica idc july growth accelerates worldwide mobile phone smartphone markets second quarter according idc archived from original on june even some later computers were commonly programmed directly machine code some minicomputers like dec pdp-8 could be programmed directly from panel switches however this method was usually used only part booting process most modern computers boot entirely automatically by reading boot program from some non-volatile memory however there sometimes some form machine language compatibility between different computers x86-64 compatible microprocessor like amd athlon able run most same programs that intel core microprocessor can well programs designed for earlier microprocessors like intel pentiums intel this contrasts with very early commercial computers which were often one-of-a-kind totally incompatible with other computers high level languages are also often interpreted rather than compiled interpreted languages are translated into machine code on fly while running by another program called interpreter not universally true that bugs are solely due programmer oversight computer hardware may fail may itself have fundamental problem that produces unexpected results certain situations for instance pentium fdiv bug caused some intel microprocessors early 1990s produce inaccurate results for certain floating point division operations this was caused by flaw microprocessor design resulted partial recall affected devices taylor alexander l iii april wizard inside machine time retrieved february subscription required control unit's role interpreting instructions has varied somewhat past although control unit solely responsible for instruction interpretation most modern computers this not always case some computers have instructions that are partially interpreted by control unit with further interpretation performed by another device for example edvac one earliest stored-program computers used central control unit that only interpreted four instructions all arithmetic-related instructions were passed on its arithmetic unit further decoded there instructions often occupy more than one memory address therefore program counter usually increases by number memory locations required store one instruction david j eck most complex machine survey computers computing k peters ltd p isbn 978-1-56881-128-4 erricos john kontoghiorghes handbook parallel computing statistics crc press p isbn 978-0-8247-4067-2 flash memory also may only be rewritten limited number times before wearing out making less useful for heavy random access usage verma & mielke donald eadie introduction basic computer prentice-hall p arpad barna dan i porat introduction microcomputers microprocessors wiley p isbn 978-0-471-05051-3 jerry peek grace todino john strang learning unix operating system concise guide for new user o'reilly p isbn 978-0-596-00261-9 gillian m davis noise reduction speech applications crc press p isbn 978-0-8493-0949-6 however also very common construct supercomputers out many pieces cheap commodity hardware usually individual computers connected by networks these so-called computer clusters can often provide supercomputer performance at much lower cost than customized designs while custom architectures are still used for most most powerful supercomputers there has been proliferation cluster computers recent years top500 agatha c hughes systems experts computers mit press p isbn 978-0-262-08285-3 experience sage helped make possible first truly large-scale commercial real-time network sabre computerized airline reservations system brief history internet internet society retrieved september computer architecture fundamentals principles computer design by joseph d dumas page according shorter oxford english dictionary 6th ed word computer dates back mid 17th century when referred person who makes calculations specifically person employed for this observatory etc definition computer thefreedictionarycom retrieved january most major 64-bit instruction set architectures are extensions earlier designs all architectures listed this table except for alpha existed 32-bit forms before their 64-bit incarnations were introduced references fuegi j francis j lovelace & babbage creation 'notes' ieee annals history computing no october–december digital object identifier kempf karl historical monograph electronic computers within ordnance corps aberdeen proving ground united states army phillips tony antikythera mechanism i american mathematical society retrieved april shannon claude elwood symbolic analysis relay switching circuits massachusetts institute technology digital equipment corporation pdp-11/40 processor handbook pdf maynard ma digital equipment corporation verma g mielke n reliability performance etox based flash memories ieee international reliability physics symposium doron d swade february redeeming charles babbage's mechanical computer scientific american meuer hans strohmaier erich simon horst dongarra jack november architectures share over time top500 archived from original on february retrieved november lavington simon history manchester computers ed swindon british computer society isbn 978-0-902505-01-8 stokes jon inside machine illustrated introduction microprocessors computer architecture san francisco no starch press isbn 978-1-59327-104-6 zuse konrad computer - my life berlin pringler-verlag isbn 0-387-56453-5 felt dorr e mechanical arithmetic history counting machine chicago washington institute ifrah georges universal history computing from abacus quantum computer new york john wiley & sons isbn 0-471-39671-0 berkeley edmund giant brains machines that think john wiley & sons cohen bernard howard aiken portrait computer pioneer cambridge massachusetts mit press isbn 978-0-262-53179-5 ligonnière robert préhistoire et histoire des ordinateurs paris robert laffont isbn 978-2-221-05261-7 couffignal louis les machines à calculer leurs principes leur évolution paris gauthier-villars essinger james jacquard's web how hand loom led birth information age oxford university press isbn 0-19-280577-0 hyman anthony charles babbage pioneer computer princeton university press isbn 978-0-691-02377-9 cohen bernard howard aiken portrait computer pioneer cambridge massachusetts mit press isbn 978-0-262-53179-5 bowden b v faster than thought new york toronto london pitman publishing corporation moseley maboth irascible genius charles babbage inventor london hutchinson collier bruce little engine that could've calculating machines charles babbage garland publishing inc isbn 0-8240-0043-9 randell brian from analytical engine electronic digital computer contributions ludgate torres bush pdf retrieved october external links media related computers at wikimedia commons wikiversity has quiz on this article warhol & computer authority control lccn sh85029552 gnd 4070083-5 bnf cb119401913 data ndl v t e digital electronics components combinational logic integrated circuit ic logic gate sequential logic theory digital signal electronics boolean algebra logic synthesis logic computer science computer architecture digital signal signal processing digital signal processing circuit minimization design logic synthesis register-transfer level formal equivalence checking synchronous logic asynchronous logic finite-state machine applications computer hardware digital audio digital photography digital video electronic literature telecommunication design issues metastability runt pulse retrieved from https//enwikipediaorg/w/indexphptitle=computer&oldid=752059028 categories computers hidden categories articles with wayback machine links webarchive template wayback links cs1 german-language sources de all articles with dead external links articles with dead external links from march pages containing links subscription-only content wikipedia indefinitely semi-protected pages wikipedia indefinitely move-protected pages articles which use infobox templates with no data rows all articles with unsourced statements articles with unsourced statements from may articles needing additional references from july all articles needing additional references articles with unsourced statements from december articles with unsourced statements from september articles with unsourced statements from december articles with dead external links from may commons category with local link same on wikidata use dmy dates from april wikipedia articles with lccn identifiers wikipedia articles with gnd identifiers wikipedia articles with bnf identifiers articles containing video clips articles with example code navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read view source view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikiquote languages acèh afrikaans alemannisch አማርኛ ænglisc العربية aragonés ܐܪܡܝܐ অসমীয়া asturianu avañe'ẽ azərbaycanca تۆرکجه বাংলা bân-lâm-gú башҡортса беларуская беларуская тарашкевіца‎ भोजपुरी bislama български boarisch བོད་ཡིག bosanski brezhoneg буряад català чӑвашла cebuano čeština cymraeg dansk deutsch diné bizaad eesti ελληνικά emiliàn e rumagnòl эрзянь español esperanto euskara فارسی fiji hindi føroyskt français frysk furlan gaeilge gaelg gàidhlig galego 贛語 ગુજરાતી 𐌲𐌿𐍄𐌹𐍃𐌺 客家語/hak-kâ-ngî 한국어 hausa հայերեն हिन्दी hrvatski ido igbo ilokano বিষ্ণুপ্রিয়া মণিপুরী bahasa indonesia interlingua interlingue ᐃᓄᒃᑎᑐᑦ/inuktitut iñupiak isixhosa isizulu íslenska italiano עברית basa jawa ಕನ್ನಡ kapampangan къарачай-малкъар ქართული कॉशुर / کٲشُر kaszëbsczi қазақша kernowek kiswahili коми kongo kreyòl ayisyen kurdî кыргызча ladino лезги ລາວ latina latviešu lëtzebuergesch lietuvių limburgs lingála la lojban lumbaart magyar македонски malagasy മലയാളം malti मराठी მარგალური مصرى مازِرونی bahasa melayu mìng-dĕ̤ng-ngṳ̄ mirandés монгол မြန်မာဘာသာ nāhuatl nederlands nedersaksies नेपाली नेपाल भाषा 日本語 napulitano нохчийн norsk bokmål norsk nynorsk occitan олык марий ଓଡ଼ିଆ oromoo oʻzbekcha/ўзбекча ਪੰਜਾਬੀ پنجابی پښتو patois ភាសាខ្មែរ piemontèis plattdüütsch polski ποντιακά português qaraqalpaqsha qırımtatarca română runa simi русиньскый русский саха тыла संस्कृतम् sardu scots seeltersk sesotho shqip sicilianu සිංහල simple english سنڌي slovenčina slovenščina словѣньскъ / ⱄⰾⱁⰲⱑⱀⱐⱄⰽⱏ ślůnski soomaaliga کوردیی ناوەندی српски / srpski srpskohrvatski / српскохрватски basa sunda suomi svenska tagalog தமிழ் татарча/tatarça తెలుగు ไทย тоҷикӣ tsetsêhestâhese türkçe türkmençe ᨅᨔ ᨕᨘᨁᨗ українська اردو ئۇيغۇرچە / uyghurche vahcuengh vèneto tiếng việt võro walon 文言 west-vlams winaray wolof 吴语 ייִדיש yorùbá 粵語 zazaki žemaitėška 中文 मैथिली livvinkarjala ತುಳು edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 