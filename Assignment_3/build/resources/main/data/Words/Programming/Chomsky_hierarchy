chomsky hierarchy from wikipedia free encyclopedia jump navigation search within fields computer science linguistics specifically area formal languages chomsky hierarchy occasionally referred chomsky–schützenberger hierarchy containment hierarchy classes formal grammars this hierarchy grammars was described by noam chomsky also named after marcel-paul schützenberger who played crucial role development theory formal languages contents formal grammars hierarchy o summary references formal grammars main article formal grammar formal grammar this type consists finite set production rules left-hand side → right-hand side where each side consists sequence following symbols finite set nonterminal symbols indicating that some production rule can yet be applied finite set terminal symbols indicating that no production rule can be applied start symbol distinguished nonterminal symbol formal grammar defines generates formal language which usually infinite set finite-length sequences symbols that may be constructed by applying production rules another sequence symbols which initially contains just start symbol rule may be applied by replacing occurrence symbols on its left-hand side with those that appear on its right-hand side sequence rule applications called derivation such grammar defines formal language all words consisting solely terminal symbols which can be reached by derivation from start symbol nonterminals are often represented by uppercase letters terminals by lowercase letters start symbol by s for example grammar with terminals {a b} nonterminals {s b} production rules s → ab s → ε where ε empty string → b → b start symbol s defines language all words form n b n {\displaystyle a^{n}b^{n}} ie n copies followed by n copies b following simpler grammar that defines same language terminals {a b} nonterminals {s} start symbol s production rules s → asb s → ε another example grammar for toy subset english language given by terminals {generate hate great green ideas linguists} nonterminals {sentence nounphrase verbphrase noun verb adj} production rules sentence → nounphrase verbphrase nounphrase → adj nounphrase nounphrase → noun verbphrase → verb nounphrase verbphrase → verb noun → ideas noun → linguists verb → generate verb → hate adj → great adj → green start symbol sentence example derivation sentence → nounphrase verbphrase → adj nounphrase verbphrase → adj noun verbphrase → adj noun verb nounphrase → adj noun verb adj nounphrase → adj noun verb adj adj nounphrase → adj noun verb adj adj noun → great noun verb adj adj noun → great linguists verb adj adj noun → great linguists generate adj adj noun → great linguists generate great adj noun → great linguists generate great green noun → great linguists generate great green ideas other sequences that can be derived from this grammar are ideas hate great linguists ideas generate while these sentences are nonsensical they are syntactically correct syntactically incorrect sentence eg ideas ideas great hate cannot be derived from this grammar see colorless green ideas sleep furiously for similar example given by chomsky see phrase structure grammar phrase structure rules for more natural language examples problems formal grammar that area hierarchy set inclusions described by chomsky hierarchy chomsky hierarchy consists following levels type-0 grammars unrestricted grammars include all formal grammars they generate exactly all languages that can be recognized by turing machine these languages are also known recursively enumerable turing-recognizable languages note that this different from recursive languages which can be decided by always-halting turing machine type-1 grammars context-sensitive grammars generate context-sensitive languages also known turing-decidable simply decidable languages these grammars have rules form α β → α γ β {\displaystyle \alpha a\beta \rightarrow \alpha \gamma \beta } with {\displaystyle a} nonterminal α {\displaystyle \alpha } β {\displaystyle \beta } γ {\displaystyle \gamma } strings terminals and/or nonterminals strings α {\displaystyle \alpha } β {\displaystyle \beta } may be empty but γ {\displaystyle \gamma } must be nonempty rule s → ϵ {\displaystyle s\rightarrow \epsilon } allowed if s {\displaystyle s} does not appear on right side any rule languages described by these grammars are exactly all languages that can be recognized by linear bounded automaton nondeterministic turing machine whose tape bounded by constant times length input type-2 grammars context-free grammars generate context-free languages these are defined by rules form → γ {\displaystyle a\rightarrow \gamma } with {\displaystyle a} nonterminal γ {\displaystyle \gamma } string terminals and/or nonterminals these languages are exactly all languages that can be recognized by non-deterministic pushdown automaton context-free languages – rather its subset deterministic context-free language – are theoretical basis for phrase structure most programming languages though their syntax also includes context-sensitive name resolution due declarations scope often subset grammars are used make parsing easier such by ll parser type-3 grammars regular grammars generate regular languages such grammar restricts its rules single nonterminal on left-hand side right-hand side consisting single terminal possibly followed by single nonterminal right regular alternatively right-hand side grammar can consist single terminal possibly preceded by single nonterminal left regular these generate same languages – however if left-regular rules right-regular rules are combined language need no longer be regular rule s → ϵ {\displaystyle s\rightarrow \epsilon } also allowed here if s {\displaystyle s} does not appear on right side any rule these languages are exactly all languages that can be decided by finite state automaton additionally this family formal languages can be obtained by regular expressions regular languages are commonly used define search patterns lexical structure programming languages note that set grammars corresponding recursive languages not member this hierarchy these would be properly between type-0 type-1 every regular language context-free every context-free language not containing empty string context-sensitive every context-sensitive language recursive every recursive language recursively enumerable these are all proper inclusions meaning that there exist recursively enumerable languages which are not context-sensitive context-sensitive languages which are not context-free context-free languages which are not regular summary following table summarizes each chomsky's four types grammars class language generates type automaton that recognizes form its rules must have grammar languages automaton production rules constraints type-0 recursively enumerable turing machine α → β {\displaystyle \alpha \rightarrow \beta } no restrictions type-1 context-sensitive linear-bounded non-deterministic turing machine α β → α γ β {\displaystyle \alpha a\beta \rightarrow \alpha \gamma \beta } type-2 context-free non-deterministic pushdown automaton → γ {\displaystyle a\rightarrow \gamma } type-3 regular finite state automaton → {\displaystyle a\rightarrow a} → b {\displaystyle a\rightarrow ab} there are further categories formal languages some which are given expandable navigation box at bottom this page references chomsky noam three models for description language pdf ire transactions on information theory 113–124 doi 101109/tit19561056813 michael sipser introduction theory computation 1st cengage learning isbn 0-534-94728-x church-turing thesis page chomsky noam on certain formal properties grammars pdf information control 137–167 doi 101016/s0019-99585990362-6 chomsky noam schützenberger marcel p algebraic theory context free languages braffort p hirschberg d computer programming formal languages amsterdam north holland pp 118–161 davis martin d sigal ron weyuker elaine j computability complexity languages fundamentals theoretical computer science 2nd ed boston academic press harcourt brace p isbn 0-12-206382-1 v t e automata theory formal languages formal grammars chomsky hierarchy grammars languages abstract machines type-0 — type-1 — — — — — type-2 — — type-3 — — unrestricted no common name context-sensitive positive range concatenation indexed — linear context-free rewriting systems tree-adjoining context-free deterministic context-free visibly pushdown regular — non-recursive recursively enumerable decidable context-sensitive positive range concatenation indexed — linear context-free rewriting language tree-adjoining context-free deterministic context-free visibly pushdown regular star-free finite turing machine decider linear-bounded ptime turing machine nested stack thread automaton restricted tree stack automaton embedded pushdown nondeterministic pushdown deterministic pushdown visibly pushdown finite counter-free with aperiodic finite monoid acyclic finite each category languages except those marked by proper subset category directly above any language each category generated by grammar by automaton category same line v t e noam chomsky political views bibliography chomsky hierarchy colorless green ideas sleep furiously select bibliography linguistics syntactic structures current issues linguistic theory aspects theory syntax cartesian linguistics chapter history rationalist thought sound pattern english conditions on transformations logical structure linguistic theory lectures on government binding pisa lectures knowledge language its nature origin use minimalist program new horizons study language mind politics responsibility intellectuals american power new mandarins fateful triangle soviet union versus socialism manufacturing consent political economy mass media with edward s herman necessary illusions deterring democracy world orders old new objectivity liberal scholarship culture terrorism hegemony survival america's quest for global dominance failed states abuse power assault on democracy collections class warfare middle east illusions imperial ambitions interventions gaza crisis 9-11 was there alternative making future occupy filmography manufacturing consent noam chomsky media last party power terror noam chomsky our times distorted morality – america's war on terror noam chomsky rebel without pause tv peace propaganda & promised land man who tall happy family william chomsky carol chomsky aviva chomsky retrieved from https//enwikipediaorg/w/indexphptitle=chomskyhierarchy&oldid=745448806 categories computer science formal languages generative linguistics noam chomsky navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages afrikaans বাংলা български bosanski català čeština deutsch ελληνικά español فارسی français 한국어 hrvatski italiano עברית ქართული қазақша latina македонски nederlands 日本語 norsk bokmål norsk nynorsk polski português română русский slovenčina српски / srpski srpskohrvatski / српскохрватски suomi українська 中文 edit links this page was last modified on october at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 