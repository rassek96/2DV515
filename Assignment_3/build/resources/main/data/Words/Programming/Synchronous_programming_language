synchronous programming language from wikipedia free encyclopedia jump navigation search this article has multiple issues please help improve discuss these issues on talk page learn how when remove these template messages this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed june learn how when remove this template message this article's introduction may be too long for length article please help by moving some material from into body article please read layout guide lead section guidelines ensure section will still be inclusive all essential details please discuss this issue on article's talk page april learn how when remove this template message synchronous programming language computer programming language optimized for programming reactive systems computer systems can be sorted three main classes transformational systems that take some inputs process them deliver their outputs terminate their execution typical example compiler interactive systems that interact continuously with their environment at their own speed typical example web reactive systems that interact continuously with their environment at speed imposed by environment typical example automatic flight control system modern airplanes reactive systems must therefore react stimuli from environment within strict time bounds for this reason they are often also called real-time systems are found often embedded systems synchronous programming also synchronous reactive programming srp computer programming paradigm supported by synchronous programming languages principle srp make same abstraction for programming languages synchronous abstraction digital circuits synchronous circuits are indeed designed at high-level abstraction where timing characteristics electronic transistors are neglected each gate circuit therefore assumed compute its result instantaneously each wire assumed transmit its signal instantaneously synchronous circuit clocked at each tick its clock computes instantaneously its output values new values its memory cells latches from its input values current values its memory cells other words circuit behaves if electrons were flowing infinitely fast first synchronous programming languages were invented france 1980s esterel lustre signal since then many other synchronous languages have emerged synchronous abstraction makes reasoning about time synchronous program lot easier thanks notion logical ticks synchronous program reacts its environment sequence ticks computations within tick are assumed be instantaneous ie if processor executing them were infinitely fast statement “a||b” therefore abstracted package “ab” where “a” “b” are simultaneous take concrete example esterel statement “every second emit minute” specifies that signal “minute” exactly synchronous with 60-th occurrence signal “second” at more fundamental level synchronous abstraction eliminates non-determinism resulting from interleaving concurrent behaviors this allows deterministic semantics therefore making synchronous programs amenable formal analysis verification certified code generation usable formal specification formalisms contrast asynchronous model computation on sequential processor statement “a||b” can be either implemented ab ba this known interleaving-based non determinism drawback that intrinsically forbids deterministic semantics eg race conditions which makes formal reasoning such analysis verification more complex nonetheless asynchronous formalisms are very useful model design verify distributed systems because they are intrinsically asynchronous also contrast are systems with processes that basically interact synchronously example would be systems built based on communicating sequential processes csp model which also allows nondeterministic choice contents synchronous languages references external links see also synchronous languages see also list synchronous programming languages argos atom dsl haskell for hard realtime embedded programming averest chuck synchronous reactive programming language for audio esterel labview lea lustre plexil signal dataflow-oriented synchronous language enabling multi-clock specifications sol synccharts references nicolas halbwachs synchronous programming reactive systems kluwer academic publishers g berry g gonthier synchronous programming language esterel design semantics implementation science computer programming external links synchronous group at verimag lab signal programming language unification synchronous asynchronous models for parallel programming languages —proposes parallel languages based on c lets programmers specify manage parallelism on broad range computer architectures see also asynchronous programming concurrency computer science v t e types programming languages actor-based array aspect-oriented class-based concatenative concurrent data-structured dataflow declarative domain-specific dynamic esoteric event-driven extensible functional imperative logic macro metaprogramming+multi-paradigm object-based object-oriented pipeline procedural prototype-based reflective rule-based scripting synchronous templating assembly compiled interpreted machine low-level high-level very high-level first generation second generation third generation fourth generation fifth generation non-english-based visual retrieved from https//enwikipediaorg/w/indexphptitle=synchronousprogramminglanguage&oldid=740861516 categories synchronous programming languages programming language classification hidden categories articles needing additional references from june all articles needing additional references wikipedia introduction cleanup from april all pages needing cleanup articles covered by wikiproject wikify from april all articles covered by wikiproject wikify navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages deutsch français edit links this page was last modified on september at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 