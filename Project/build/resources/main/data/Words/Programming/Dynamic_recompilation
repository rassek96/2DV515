dynamic recompilation from wikipedia free encyclopedia jump navigation search this article has multiple issues please help improve discuss these issues on talk page learn how when remove these template messages this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed january learn how when remove this template message this article contains weasel words vague phrasing that often accompanies biased unverifiable information such statements should be clarified removed january learn how when remove this template message program execution general concepts runtime system runtime library executable compiler interpreter virtual machine intermediate representation ir source code object code bytecode machine code compilation strategies just-in-time jit o tracing just-in-time ahead-of-time aot transcompilation recompilation notable runtimes android runtime art common language runtime clr crt0 java virtual machine jvm nodejs zend engine notable compilers & toolchains llvm gnu compiler collection gcc v t e computer science dynamic recompilation sometimes abbreviated dynarec pseudo-acronym drc feature some emulators virtual machines where system may recompile some part program during execution by compiling during execution system can tailor generated code reflect program's run-time environment potentially produce more efficient code by exploiting information that not available traditional static compiler contents uses tasks example applications o general purpose o gaming see also references external links uses most dynamic recompilers are used convert machine code between architectures at runtime this task often needed emulation legacy gaming platforms other cases system may employ dynamic recompilation part adaptive optimization strategy execute portable program representation such java net common language runtime bytecodes full-speed debuggers also utilize dynamic recompilation reduce space overhead incurred most deoptimization techniques other features such dynamic thread migration tasks main tasks dynamic recompiler has perform are reading machine code from source platform emitting machine code for target platform dynamic recompiler may also perform some auxiliary tasks managing cache recompiled code updating elapsed cycle counts on platforms with cycle count registers management interrupt checking providing interface virtualized support hardware for example gpu optimizing higher level code structures run efficiently on target hardware see below example suppose program being run emulator needs copy null-terminated string program compiled originally for very simple processor this processor can only copy byte at time must do so by first reading from source string into register then writing from that register into destination string original program might look something like this beginning mov put location first character source string register mov b put location first character destination string register b loop mov c copy byte at address register register c mov c copy byte register c address register b inc increment address register point next byte inc b increment address register b point next byte cmp c0 compare data we just copied string end marker jnz loop if wasn't then we have more copy so go back copy next byte end if we didn't loop then we must have finished so carry on with something else emulator might be running on processor which similar but extremely good at copying strings emulator knows can take advantage this might recognize string copy sequence instructions decide rewrite them more efficiently just before execution speed up emulation say there instruction on our new processor called movs specifically designed copy strings efficiently our theoretical movs instruction copies bytes at time without having load them into register c between but will stop if copies byte which marks end string set zero flag also knows that addresses strings will be registers b so increments b by every time executes ready for next copy our new recompiled code might look something like this beginning mov put location first character source string register mov b put location first character destination string register b loop movs copy bytes at address register address register b then increment b by jnz loop if zero flag isn't set then we haven't reached end string so go back copy some more end if we didn't loop then we must have finished so carry on with something else there immediate speed benefit simply because processor doesn't have load so many instructions do same task but also because movs instruction likely be optimized by processor designer be more efficient than sequence used first example for example may make better use parallel execution processor increment b while still copying bytes applications general purpose many java virtual machines feature dynamic recompilation apple's rosetta for mac os x on x86 allows powerpc code be run on x86 architecture later versions mac 68k emulator used classic mac os run 680x0 code on powerpc hardware psyco specializing compiler for python hp dynamo project example transparent binary dynamic optimizer dynamorio open-source successor dynamo that works with arm x86-64 ia-64 itanium instruction sets vx32 virtual machine employs dynamic recompilation create os -independent x86 architecture sandboxes for safe application plugins microsoft virtual pc for mac used run x86 code on powerpc qemu open-source full system emulator freekeyb international dos keyboard console driver with many usability enhancements utilized self-modifying code dynamic dead code elimination minimize its in-memory image based on its user configuration selected features languages layouts actual runtime environment os variant version loaded drivers underlying hardware automatically resolving dependencies dynamically relocating recombining code sections on byte-level granularity optimizing opstrings based on semantic information provided source code relocation information generated by special tools during assembly profile information obtained at load time ovpsim freely available full system emulator virtualbox uses dynamic recompilation valgrind programming tool for memory debugging memory leak detection profiling uses dynamic recompilation gaming mame uses dynamic recompilation its cpu emulators for mips superh powerpc even voodoo graphics processing units nintendo emulator for x86 hardware wii64 nintendo emulator for wii wiisx sony playstation emulator for nintendo wii mupen64plus multi-platform nintendo emulator yabause multi-platform saturn emulator backwards compatibility functionality xbox ie running games written for original xbox widely assumed use dynamic recompilation ppsspp sony playstation portable emulator recompilers for both x86 arm psemu pro sony playstation emulator ultrahle first nintendo emulator fully run commercial games pcsx2 sony playstation emulator has recompiler called microvu successor supervu dolphin nintendo gamecube wii emulator has dynarec option gcemu nintendo gamecube emulator nulldc sega dreamcast emulator for x86 gem nintendo game boy emulator for msx uses optimizing dynamic recompiler desmume nintendo ds emulator has dynarec option soywiz's psp sony playstation portable emulator has dynarec option see also computing portal binary recompiler binary translation comparison platform virtualization software just-in-time compilation references hp labs' technical report on dynamo paul matthias frinke axel c freekeyb - enhanced dos keyboard console driver user manual v65 ed nb freekeyb unicode-based dynamically configurable successor k3plus supporting most keyboard layouts code pages country codes k3plus was extended keyboard driver for dos widely distributed germany at its time with adaptations handful other european languages available did support sub-set freekeyb features already but was statically configured did not support dynamic dead code elimination paul matthias frinke axel c freekeyb - advanced international dos keyboard console driver user manual v7 preliminary ed ovpsim mupen64plus sh2 pcsx petebernert gcemu sourceforge gameboy emulator for msx | new image gem retrieved desmume v099 publicado por carlos ballesteros velasco soywiz's psp emulator release soywiz's psp emulator r525 pspemusoywizcom retrieved external links dynamic recompiler tutorial blog posts about writing mips ppc dynamic recompiler retrieved from https//enwikipediaorg/w/indexphptitle=dynamicrecompilation&oldid=741515514 categories virtualization software compiler construction emulation software hidden categories articles needing additional references from january all articles needing additional references articles with weasel words from january navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages italiano português edit links this page was last modified on september at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 