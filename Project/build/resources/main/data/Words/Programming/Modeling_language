modeling language from wikipedia free encyclopedia jump navigation search modeling language any artificial language that can be used express information knowledge systems structure that defined by consistent set rules rules are used for interpretation meaning components structure contents overview type modeling languages o graphical types o textual types o more specific types + algebraic + behavioral + discipline-specific + domain-specific + framework-specific + object-oriented + virtual reality + others applications quality o framework for evaluation + domain appropriateness + participant appropriateness + modeller appropriateness + comprehensibility appropriateness + tool appropriateness + organizational appropriateness see also references external links further reading overview modeling language can be graphical textual graphical modeling languages use diagram technique with named symbols that represent concepts lines that connect symbols represent relationships various other graphical notation represent constraints textual modeling languages may use standardized keywords accompanied by parameters natural language terms phrases make computer-interpretable expressions example graphical modeling language corresponding textual modeling language express not all modeling languages are executable for those that are use them doesn't necessarily mean that programmers are no longer required on contrary executable modeling languages are intended amplify productivity skilled programmers so that they can address more challenging problems such parallel computing distributed systems large number modeling languages appear literature type modeling languages graphical types example graphical modeling languages field computer science project management systems engineering behavior trees are formal graphical modeling language used primarily systems software engineering commonly used unambiguously represent hundreds even thousands natural language requirements that are typically used express stakeholder needs for large-scale software-integrated system business process modeling notation bpmn xml form bpml example process modeling language c-k theory consists modeling language for design processes drakon general-purpose algorithmic modeling language for specifying software-intensive systems schematic representation algorithm stepwise process family programming languages express express-g iso 10303-11 international standard general-purpose data modeling language extended enterprise modeling language eeml commonly used for business process modeling across number layers flowchart schematic representation algorithm stepwise process fundamental modeling concepts fmc modeling language for software-intensive systems idef family modeling languages which include idef0 for functional modeling idef1x for information modeling idef3 for business process modeling idef4 for object-oriented design idef5 for modeling ontologies jackson structured programming jsp method for structured programming based on correspondences between data stream structure program structure lepus3 object-oriented visual design description language formal specification language that suitable primarily for modeling large object-oriented java c++ c programs design patterns object-role modeling orm field software engineering method for conceptual modeling can be used tool for information rules analysis petri nets use variations on exactly one diagramming technique topology namely bipartite graph simplicity its basic user interface easily enabled extensive tool support over years particularly areas model checking graphically oriented simulation software verification southbeach notation visual modeling language used describe situations terms agents that are considered useful harmful from modeler's perspective notation shows how agents interact with each other whether this interaction improves worsens situation specification description language sdl specification language targeted at unambiguous specification description behavior reactive distributed systems sysml domain-specific modeling language for systems engineering that defined uml profile customization unified modeling language uml general-purpose modeling language that industry standard for specifying software-intensive systems uml current version supports thirteen different diagram techniques has widespread tool support service-oriented modeling framework somf holistic language for designing enterprise application level architecture models space enterprise architecture virtualization service-oriented architecture soa cloud computing more architecture description language adl language used describe represent systems architecture system aadl aadl modeling language that supports early repeated analyses system's architecture with respect performance-critical properties through exetendable notation tool framework precisely defined semantics examples graphical modeling languages other fields science east-adl domain-specific modeling language dedicated automotive system design energy systems language esl language that aims model ecological energetics & global economics textual types information models can also be expressed formalized natural languages such gellish gellish has natural language variants such gellish formal english gellish formal dutch gellish formeel nederlands etc gellish formal english information representation language semantic modeling language that defined gellish english dictionary-taxonomy which has form taxonomy-ontology similarly for dutch gellish formal english not only suitable express knowledge requirements dictionaries taxonomies ontologies but also information about individual things all that information expressed one language therefore can all be integrated independent question whether stored central distributed federated databases information models gellish formal english consists collections gellish formal english expressions that use natural language terms formalized phrases for example geographic information model might consist number gellish formal english expressions such - eiffel tower paris - paris city whereas information requirements knowledge can be expressed for example follows - tower geographical area - city geographical area such gellish formal english expressions use names concepts such 'city' phrases that represent relation types such that should be selected from gellish english dictionary-taxonomy your own domain dictionary gellish english dictionary-taxonomy enables creation semantically rich information models because dictionary contains more than standard relation types contains definitions more than concepts information model gellish can express facts make statements queries answers more specific types field computer science recently more specific types modeling languages have emerged algebraic algebraic modeling languages aml are high-level programming languages for describing solving high complexity problems for large scale mathematical computation ie large scale optimization type problems one particular advantage amls like aimms ampl gams lpl mpl opl optimj similarity its syntax mathematical notation optimization problems this allows for very concise readable definition problems domain optimization which supported by certain language elements like sets indices algebraic expressions powerful sparse index data handling variables constraints with arbitrary names algebraic formulation model does not contain any hints how process behavioral behavioral languages are designed describe observable behavior complex systems consisting components that execute concurrently these languages focus on description key concepts such concurrency nondeterminism synchronization communication semantic foundations behavioral languages are process calculus process algebra discipline-specific discipline-specific modeling dspm language focused on deliverables affiliated with specific software development life cycle stage therefore such language offers distinct vocabulary syntax notation for each stage such discovery analysis design architecture contraction etc for example for analysis phase project modeler employs specific analysis notation deliver analysis proposition diagram during design phase however logical design notation used depict relationship between software entities addition discipline-specific modeling language best practices does not preclude practitioners from combining various notations single diagram domain-specific domain-specific modeling dsm software engineering methodology for designing developing systems most often systems such computer software involves systematic use graphical domain-specific language dsl represent various facets system dsm languages tend support higher-level abstractions than general-purpose modeling languages so they require less effort fewer low-level details specify given system framework-specific framework-specific modeling language fsml kind domain-specific modeling language which designed for object-oriented application framework fsmls define framework-provided abstractions fsml concepts decompose abstractions into features features represent implementation steps choices fsml concept can be configured by selecting features providing values for features such concept configuration represents how concept should be implemented code other words concept configuration describes how framework should be completed order create implementation concept object-oriented object modeling language are modeling languages based on standardized set symbols ways arranging them model part object oriented software design system design some organizations use them extensively combination with software development methodology progress from initial specification implementation plan communicate that plan entire team developers stakeholders because modeling language visual at higher-level abstraction than code using models encourages generation shared vision that may prevent problems differing interpretation later development often software modeling tools are used construct these models which may then be capable automatic translation code virtual reality virtual reality modeling language vrml before known virtual reality markup language standard file format for representing 3-dimensional interactive vector graphics designed particularly with world wide web mind others architecture description language face modeling language generative modelling language java modeling language promela rebeca modeling language service modeling language web services modeling language x3d applications various kinds modeling languages are applied different disciplines including computer science information management business process modeling software engineering systems engineering modeling languages can be used specify system requirements structures behaviors modeling languages are intended be used precisely specify systems so that stakeholders eg customers operators analysts designers can better understand system being modeled more mature modeling languages are precise consistent executable informal diagramming techniques applied with drawing tools are expected produce useful pictorial representations system requirements structures behaviors but not much else executable modeling languages applied with proper tool support however are expected automate system verification validation simulation code generation from same representations quality review modelling languages essential be able assign which languages are appropriate for different modelling settings term settings we include stakeholders domain knowledge connected assessing language quality means that aims achieve better models framework for evaluation here language quality stated accordance with sequal framework for quality models developed by krogstie sindre lindland since this framework that connects language quality framework for general model quality five areas are used this framework describe language quality these are supposed express both conceptual well visual notation language we will not go into thoroughly explanation underlying quality framework models but concentrate on areas used explain language quality framework domain appropriateness framework states ability represent domain domain appropriateness statement appropriateness can be bit vague but this particular context means able express you should ideally only be able express things that are domain but be powerful enough include everything that domain this requirement might seem bit strict but aim get visually expressed model which includes everything relevant domain excludes everything not appropriate for domain achieve this language has have good distinction which notations syntaxes that are advantageous present participant appropriateness evaluate participant appropriateness we try identify how well language expresses knowledge held by stakeholders this involves challenges since stakeholder's knowledge subjective knowledge stakeholder both tacit explicit both types knowledge are dynamic character this framework only explicit type knowledge taken into account language should large extent express all explicit knowledge stakeholders relevant domain modeller appropriateness last paragraph stated that knowledge stakeholders should be presented good way addition imperative that language should be able express all possible explicit knowledge stakeholders no knowledge should be left unexpressed due lacks language comprehensibility appropriateness comprehensibility appropriateness makes sure that social actors understand model due consistent use language achieve this framework includes set criteria general importance that these express that language should be flexible easy organize easy distinguish different parts language internally well from other languages addition this goal should be simple possible that each symbol language has unique representation tool appropriateness ensure that domain actually modelled usable for analyzing further processing language has ensure that possible reason automatic way achieve this has include formal syntax semantics another advantage by formalizing ability discover errors early stage not always that language best fitted for technical actors same for social actors organizational appropriateness language used appropriate for organizational context eg that language standardized within organization that supported by tools that are chosen standard organization see also analogical models anthropomorphism discipline-specific modeling metamodeling model-based testing mbt model-driven architecture model-driven engineering mde modeling perspectives scientific modeling visual modeling visual programming language references xiao he metamodel for notation graphical modeling languages computer software applications conference compsac - vol 31st annual international volume issue 24–27 july pp 219-224 bell michael introduction service-oriented modeling service-oriented modeling service analysis design architecture wiley & sons isbn 978-0-470-14111-3 andries van renssen gellish generic extensible ontological language delft university technology external links wikimedia commons has media related modeling languages fundamental modeling concepts software modeling languages portal bip -- incremental component-based construction real-time systems gellish formal english further reading john krogstie evaluating uml using generic quality framework sintef telecom andinformatics idi ntnu norway krogstie sølvsberg information systems engineering conceptual modeling quality perspective institute computer information sciences\ anna gunhild nysetvold john krogstie assessing business processing modeling languages using generic quality framework institute computer information sciences v t e software engineering fields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification validation structured analysis orientations agile aspect-oriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model v-model waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml sysml software engineers victor basili kent beck grady booch fred brooks barry boehm ward cunningham tom demarco edsger w dijkstra martin fowler c r hoare watts humphrey michael jackson ivar jacobson stephen j mellor bertrand meyer david parnas winston w royce james rumbaugh niklaus wirth edward yourdon mohamed fayad related fields computer science computer engineering project management risk management systems engineering category commons v t e types сomputer languages types architecture description hardware description knowledge representation markup modeling programming language query specification stylesheet transformation see also categorylists computer languages categorylists programming languages list programming languages by type retrieved from https//enwikipediaorg/w/indexphptitle=modelinglanguage&oldid=739646108 categories scientific modeling specific models specification languages hidden categories commons category with local link same on wikidata navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons languages العربية deutsch français italiano nederlands 日本語 edit links this page was last modified on september at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 