scripting language from wikipedia free encyclopedia jump navigation search scripting script language programming language that supports scripts programs written for special run-time environment that automate execution tasks that could alternatively be executed one-by-one by human operator scripting languages are often interpreted rather than compiled primitives are usually elementary tasks api calls language allows them be combined into more complex programs environments that can be automated through scripting include software applications web pages within web browser shells operating systems os embedded systems well numerous games scripting language can be viewed domain-specific language for particular environment case scripting application this also known extension language scripting languages are also sometimes referred very high-level programming languages they operate at high level abstraction control languages particularly for job control languages on mainframes term scripting language also used loosely refer dynamic high-level general-purpose languages such perl tcl python with term script often used for small programs up few thousand lines code such languages domain-specific languages such text-processing languages sed awk some these languages were originally developed for use within particular environment later developed into portable domain-specific general-purpose languages conversely many general-purpose languages have dialects that are used scripting languages this article discusses scripting languages narrow sense languages for specific environment spectrum scripting languages ranges from very small highly domain-specific languages general-purpose programming languages used for scripting standard examples scripting languages for specific environments include bash for unix unix-like operating systems ecmascript javascript for web browsers visual basic for applications for microsoft office applications lua language designed widely used extension language python general-purpose language that also commonly used extension language while ecmascript still primarily scripting language for web browsers but also used general-purpose language emacs lisp dialect lisp for emacs editor visual basic for applications dialect visual basic are examples scripting language dialects general-purpose languages some game systems notably second life virtual world trainz franchise railroad simulators have been extensively extended functionality by scripting extensions other games like wesnoth variety actual games played by players are scripts written by other users contents characteristics history types scripting languages o glue languages o job control languages shells o gui scripting o application-specific languages o extension/embeddable languages see also references further reading external links characteristics typically scripting languages are intended be very fast learn write either short source code files interactively read–eval–print loop repl language shell this generally implies relatively simple syntax semantics typically script code written scripting language executed from start finish script with no explicit entry point for example uncommon characterise java scripting language because its lengthy syntax rules about which classes exist which files not directly possible execute java interactively because source files can only contain definitions that must be invoked externally by host application application launcher public class helloworld { public void printhelloworld { systemoutprintlnhello world } } this piece code intended print hello world does nothing main not declared helloworld class contrast python allows definition some functions single file avoid functions altogether use imperative programming style even use interactively print hello world this one line python code prints hello world no declarative statement like main required here scripting language usually interpreted from source code bytecode by contrast software environment scripts are written for typically written compiled language distributed machine code form scripting languages may be designed for use by end users program— end-user development—or may be only for internal use by developers so they can write portions program scripting language scripting languages typically use abstraction form information hiding spare users details internal variable types data storage memory management scripts are often created modified by person executing them but they are also often distributed such when large portions games are written scripting language history early mainframe computers 1950s were non-interactive instead using batch processing ibm's job control language jcl archetype languages used control batch processing first interactive shells were developed 1960s enable remote operation first time-sharing systems these used shell scripts which controlled running computer programs within computer program shell calvin mooers his trac language generally credited with inventing command substitution ability embed commands scripts that when interpreted insert character string into script multics calls these active functions louis pouzin wrote early processor for command scripts called runcom for ctss around stuart madnick at mit wrote scripting language for ibm's cp/cms he originally called this processor command later named exec multics included offshoot ctss runcom also called runcom exec was eventually replaced by exec rexx languages such tcl lua were specifically designed general-purpose scripting languages that could be embedded any application other languages such visual basic for applications vba provided strong integration with automation facilities underlying system embedding such general-purpose scripting languages instead developing new language for each application also had obvious benefits relieving application developer need code language translator from scratch allowing user apply skills learned elsewhere some software incorporates several different scripting languages modern web browsers typically provide language for writing extensions browser itself several standard embedded languages for controlling browser including javascript dialect ecmascript xul types scripting languages glue languages this section does not cite any sources please help improve this section by adding citations reliable sources unsourced material may be challenged removed march learn how when remove this template message scripting often contrasted with system programming ousterhout's dichotomy programming large programming small this view scripting particularly glue code connecting software components language specialized for this purpose glue language pipelines shell scripting are archetypal examples glue languages perl was initially developed fill this same role web development can be considered use glue languages interfacing between database web server but if substantial amount logic written script better characterized simply another software component not glue glue languages are especially useful for writing maintaining custom commands for command shell smaller programs than those that are better implemented compiled language wrapper programs for executables like batch file that moves manipulates files does other things with operating system before after running application like word processor spreadsheet data base assembler compiler etc scripts that may change rapid prototypes solution eventually implemented another usually compiled language glue language examples applescript coldfusion dcl embeddable common lisp ecl erlang jcl coffeescript jscript javascript lua m4 perl php pure python rebol rexx ruby scheme tcl unix shell scripts ksh csh bash sh others vbscript work flow language windows powershell xslt macro languages exposed operating system application components can serve glue languages these include visual basic for applications wordbasic lotusscript corelscript hummingbird basic quickscript saxbasic winwrap basic other tools like awk can also be considered glue languages can any language implemented by windows script host engine vbscript jscript vba by default windows third-party engines including implementations rexx perl tcl python xslt ruby delphi &c majority applications can access use operating system components via object models its own functions other devices like programmable calculators may also have glue languages operating systems pdas such windows ce may have available native third-party macro tools that glue applications together addition implementations common glue languages—including windows nt ms-dos some unix shells rexx php perl depending upon os version wsh default script engines vbscript jscript are available programmable calculators can be programmed glue languages three ways for example texas instruments ti-92 by factory default can be programmed with command script language inclusion scripting glue language lua ti-nspire series calculators could be seen successor this primary on-board high-level programming languages most graphing calculators most often basic variants sometimes lisp derivatives more uncommonly c derivatives many cases can glue together calculator functions—such graphs lists matrices etc third-party implementations more comprehensive basic version that may be closer variants listed glue languages this article are available—and attempts implement perl rexx various operating system shells on ti hp graphing calculators are also mentioned pc-based c cross-compilers for some ti hp machines used conjunction with tools that convert between c perl rexx awk well shell scripts perl vbscript from perl make possible write program glue language for eventual implementation compiled program on calculator job control languages shells main article shell script major class scripting languages has grown out automation job control which relates starting controlling behavior system programs this sense one might think shells being descendants ibm's jcl job control language which was used for exactly this purpose many these languages' interpreters double command-line interpreters such unix shell ms-dos commandcom others such applescript offer use english-like commands build scripts gui scripting with advent graphical user interfaces specialized kind scripting language emerged for controlling computer these languages interact with same graphic windows menus buttons so on that human user would they do this by simulating actions user these languages are typically used automate user actions such languages are also called macros when control through simulated key presses mouse clicks well tapping pressing on touch-activated screen these languages could principle be used control any gui application but practice their use limited because their use needs support from application from operating system there are few exceptions this limitation some gui scripting languages are based on recognizing graphical objects from their display screen pixels these gui scripting languages do not depend on support from operating system application application-specific languages many large application programs include idiomatic scripting language tailored needs application user likewise many computer game systems use custom scripting language express programmed actions non-player characters game environment languages this sort are designed for single application while they may superficially resemble specific general-purpose language eg quakec modeled after c they have custom features that distinguish them emacs lisp while fully formed capable dialect lisp contains many special features that make most useful for extending editing functions emacs application-specific scripting language can be viewed domain-specific programming language specialized single application extension/embeddable languages number languages have been designed for purpose replacing application-specific scripting languages by being embeddable application programs application programmer working c another systems language includes hooks where scripting language can control application these languages may be technically equivalent application-specific extension language but when application embeds common language user gets advantage being able transfer skills from application application more generic alternative simply provide library often c library that general-purpose language can use control application without modifying language for specific domain javascript began primarily still language for scripting inside web browsers however standardization language ecmascript has made popular general-purpose embeddable language particular mozilla implementation spidermonkey embedded several environments such yahoo widget engine other applications embedding ecmascript implementations include adobe products adobe flash actionscript adobe acrobat for scripting pdf files tcl was created extension language but has come be used more frequently general-purpose language roles similar python perl ruby on other hand rexx was originally created job control language but widely used extension language well general-purpose language perl general-purpose language but had oraperl dialect consisting perl binary with oracle call interface compiled this has however since been replaced by library perl module dbdoracle other complex task-oriented applications may incorporate expose embedded programming language allow their users more control give them more functionality than can be available through user interface no matter how sophisticated for example autodesk maya authoring tools embed mel scripting language blender which uses python fill this role some other types applications that need faster feature addition tweak-and-run cycles eg game engines also use embedded language during development this allows them prototype features faster tweak more freely without need for user have intimate knowledge inner workings application rebuild after each tweak which can take significant amount time scripting languages used for this purpose range from more common more famous lua python lesser-known ones such angelscript squirrel ch another c compatible scripting option for industry embed into c/c++ application programs see also list scripting languages architecture description language authoring language build automation configuration file interpreter directive / shebang unix templating language references eva oceguera owner wwwevaocegueracom eva oceguera sheppard doug beginner's introduction perl devperlorg retrieved programming hard let's go scripting… larry wall december hey tony pápay gyuri computing universe journey through revolution cambridge university press p isbn 978-1-31612322-5 major characteristic modern scripting languages their interactivity sometimes referred repl programming environment characteristics ease use immediate execution with repl environment are sometimes taken definition scripting language brown vicki scripting languages retrieved loui ronald praise scripting ieee computer ibm corporation ibm system/360 operating system job control language c28-6529-4 pdf mooers calvin trac procedure-describing language for reactive typewriter archived from original on retrieved march van vlecked thomas multics glossary -a- active function retrieved march varian melinda vm vm community past present future pdf retrieved march van vleck thomased multics glossary -r- runcom retrieved march oraperl cpan] perl underground oracle faq van rossum guido january 6–8 glue all together glue all together with python pythonorg further reading barron david william world scripting languages isbn 0-471-99886-9 external links patterns for scripted applications at wayback machine archived october common development scenarios v t e types programming languages actor-based array aspect-oriented class-based concatenative concurrent data-structured dataflow declarative domain-specific dynamic esoteric event-driven extensible functional imperative logic macro metaprogramming+multi-paradigm object-based object-oriented pipeline procedural prototype-based reflective rule-based scripting synchronous templating assembly compiled interpreted machine low-level high-level very high-level first generation second generation third generation fourth generation fifth generation non-english-based visual retrieved from https//enwikipediaorg/w/indexphptitle=scriptinglanguage&oldid=751010215 categories scripting languages programming paradigms hidden categories all articles with dead external links articles with dead external links from september articles needing additional references from march all articles needing additional references pages using columns with default column width webarchive template wayback links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons languages العربية azərbaycanca беларуская тарашкевіца‎ български català čeština dansk deutsch eesti ελληνικά español فارسی français 한국어 हिन्दी bahasa indonesia italiano עברית қазақша кыргызча latviešu magyar മലയാളം bahasa melayu mìng-dĕ̤ng-ngṳ̄ mirandés nederlands नेपाली 日本語 norsk bokmål polski português русский simple english slovenčina српски / srpski suomi svenska தமிழ் తెలుగు türkçe українська tiếng việt 粵語 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 