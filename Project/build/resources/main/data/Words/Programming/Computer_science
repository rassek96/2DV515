computer science from wikipedia free encyclopedia jump navigation search computer science deals with theoretical foundations information computation together with practical techniques for implementation application these foundations computer science study theory experimentation engineering that form basis for design use computers scientific practical approach computation its applications systematic study feasibility structure expression mechanization methodical procedures algorithms that underlie acquisition representation processing storage communication access information alternate more succinct definition computer science study automating algorithmic processes that scale computer scientist specializes theory computation design computational systems its fields can be divided into variety theoretical practical disciplines some fields such computational complexity theory which explores fundamental properties computational intractable problems are highly abstract while fields such computer graphics emphasize real-world visual applications other fields still focus on challenges implementing computation for example programming language theory considers various approaches description computation while study computer programming itself investigates various aspects use programming language complex systems human–computer interaction considers challenges making computers computations useful usable universally accessible humans contents history o contributions etymology philosophy areas computer science o theoretical computer science + theory computation + information coding theory + algorithms data structures + programming language theory + formal methods o applied computer science + artificial intelligence + computer architecture engineering + computer performance analysis + computer graphics visualization + computer security cryptography + computational science + computer networks + concurrent parallel distributed systems + databases + software engineering great insights computer science academia education see also notes references further reading external links history main article history computer science see also history computing history informatics charles babbage credited with inventing first mechanical computer ada lovelace credited with writing first algorithm intended for processing on computer earliest foundations what would become computer science predate invention modern digital computer machines for calculating fixed numerical tasks such abacus have existed since antiquity aiding computations such multiplication division further algorithms for performing computations have existed since antiquity even before development sophisticated computing equipment blaise pascal designed constructed first working mechanical calculator pascal's calculator gottfried leibniz demonstrated digital mechanical calculator called stepped reckoner he may be considered first computer scientist information theorist for among other reasons documenting binary number system thomas de colmar launched mechanical calculator industry when he released his simplified arithmometer which was first calculating machine strong enough reliable enough be used daily office environment charles babbage started design first automatic mechanical calculator his difference engine which eventually gave him idea first programmable mechanical calculator his analytical engine he started developing this machine less than two years he had sketched out many salient features modern computer crucial step was adoption punched card system derived from jacquard loom making infinitely programmable during translation french article on analytical engine ada lovelace wrote one many notes she included algorithm compute bernoulli numbers which considered be first computer program around herman hollerith invented tabulator which used punched cards process statistical information eventually his company became part ibm one hundred years after babbage's impossible dream howard aiken convinced ibm which was making all kinds punched card equipment was also calculator business develop his giant programmable calculator ascc/harvard mark i based on babbage's analytical engine which itself used cards central computing unit when machine was finished some hailed babbage's dream come true during 1940s new more powerful computing machines were developed term computer came refer machines rather than their human predecessors became clear that computers could be used for more than just mathematical calculations field computer science broadened study computation general computer science began be established distinct academic discipline 1950s early 1960s world's first computer science degree program cambridge diploma computer science began at university cambridge computer laboratory first computer science degree program united states was formed at purdue university since practical computers became available many applications computing have become distinct areas study their own rights although many initially believed was impossible that computers themselves could actually be scientific field study late fifties gradually became accepted among greater academic population now well-known ibm brand that formed part computer science revolution during this time ibm short for international business machines released ibm later ibm computers which were widely used during exploration period such devices still working with ibm was frustrating if you had misplaced much one letter one instruction program would crash you would have start whole process over again during late 1950s computer science discipline was very much its developmental stages such issues were commonplace time has seen significant improvements usability effectiveness computing technology modern society has seen significant shift users computer technology from usage only by experts professionals near-ubiquitous user base initially computers were quite costly some degree human aid was needed for efficient use—in part from professional computer operators computer adoption became more widespread affordable less human assistance was needed for common usage contributions german military used enigma machine shown here during world war ii for communications they wanted kept secret large-scale decryption enigma traffic at bletchley park was important factor that contributed allied victory wwii despite its short history formal academic discipline computer science has made number fundamental contributions science society—in fact along with electronics founding science current epoch human history called information age driver information revolution seen third major leap human technological progress after industrial revolution 1750–1850 ce agricultural revolution 8000–5000 bc these contributions include start digital revolution which includes current information age internet formal definition computation computability proof that there are computationally unsolvable intractable problems concept programming language tool for precise expression methodological information at various levels abstraction cryptography breaking enigma code was important factor contributing allied victory world war ii scientific computing enabled practical evaluation processes situations great complexity well experimentation entirely by software also enabled advanced study mind mapping human genome became possible with human genome project distributed computing projects such folding@home explore protein folding algorithmic trading has increased efficiency liquidity financial markets by using artificial intelligence machine learning other statistical numerical techniques on large scale high frequency algorithmic trading can also exacerbate volatility computer graphics computer-generated imagery have become ubiquitous modern entertainment particularly television cinema advertising animation video games even films that feature no explicit cgi are usually filmed now on digital cameras edited post-processed using digital video editor simulation various processes including computational fluid dynamics physical electrical electronic systems circuits well societies social situations notably war games along with their habitats among many others modern computers enable optimization such designs complete aircraft notable electrical electronic circuit design are spice well software for physical realization new modified designs latter includes essential design software for integrated circuits artificial intelligence becoming increasingly important gets more efficient complex there are many applications ai some which can be seen at home such robotic vacuum cleaners also present video games on modern battlefield drones anti-missile systems squad support robots etymology see also informatics § etymology although first proposed term computer science appears article communications acm which louis fein argues for creation graduate school computer sciences analogous creation harvard business school justifying name by arguing that like management science subject applied interdisciplinary nature while having characteristics typical academic discipline his efforts those others such numerical analyst george forsythe were rewarded universities went on create such programs starting with purdue despite its name significant amount computer science does not involve study computers themselves because this several alternative names have been proposed certain departments major universities prefer term computing science emphasize precisely that difference danish scientist peter naur suggested term datalogy reflect fact that scientific discipline revolves around data data treatment while not necessarily involving computers first scientific institution use term was department datalogy at university copenhagen founded with peter naur being first professor datalogy term used mainly scandinavian countries alternative term also proposed by naur data science this now used for distinct field data analysis including statistics databases also early days computing number terms for practitioners field computing were suggested communications acm—turingineer turologist flow-charts-man applied meta-mathematician applied epistemologist three months later same journal comptologist was suggested followed next year by hypologist term computics has also been suggested europe terms derived from contracted translations expression automatic information eg informazione automatica italian information mathematics are often used eg informatique french informatik german informatica italian dutch informática spanish portuguese informatika slavic languages hungarian pliroforiki πληροφορική which means informatics greek similar words have also been adopted uk school informatics university edinburgh us however informatics linked with applied computing computing context another domain folkloric quotation often attributed to—but almost certainly not first formulated by—edsger dijkstra states that computer science no more about computers than astronomy about telescopes design deployment computers computer systems generally considered province disciplines other than computer science for example study computer hardware usually considered part computer engineering while study commercial computer systems their deployment often called information technology information systems however there has been much cross-fertilization ideas between various computer-related disciplines computer science research also often intersects other disciplines such philosophy cognitive science linguistics mathematics physics biology statistics logic computer science considered by some have much closer relationship with mathematics than many scientific disciplines with some observers saying that computing mathematical science early computer science was strongly influenced by work mathematicians such kurt gödel alan turing there continues be useful interchange ideas between two fields areas such mathematical logic category theory domain theory algebra relationship between computer science software engineering contentious issue which further muddied by disputes over what term software engineering means how computer science defined david parnas taking cue from relationship between other engineering science disciplines has claimed that principal focus computer science studying properties computation general while principal focus software engineering design specific computations achieve practical goals making two separate but complementary disciplines academic political funding aspects computer science tend depend on whether department formed with mathematical emphasis with engineering emphasis computer science departments with mathematics emphasis with numerical orientation consider alignment with computational science both types departments tend make efforts bridge field educationally if not across all research philosophy main article philosophy computer science number computer scientists have argued for distinction three separate paradigms computer science peter wegner argued that those paradigms are science technology mathematics peter denning's working group argued that they are theory abstraction modeling design amnon h eden described them rationalist paradigm which treats computer science branch mathematics which prevalent theoretical computer science mainly employs deductive reasoning technocratic paradigm which might be found engineering approaches most prominently software engineering scientific paradigm which approaches computer-related artifacts from empirical perspective natural sciences identifiable some branches artificial intelligence areas computer science further information outline computer science discipline computer science spans range topics from theoretical studies algorithms limits computation practical issues implementing computing systems hardware software csab formerly called computing sciences accreditation board—which made up representatives association for computing machinery acm ieee computer society ieee cs—identifies four areas that considers crucial discipline computer science theory computation algorithms data structures programming methodology languages computer elements architecture addition these four areas csab also identifies fields such software engineering artificial intelligence computer networking communication database systems parallel computation distributed computation human–computer interaction computer graphics operating systems numerical symbolic computation being important areas computer science theoretical computer science main article theoretical computer science theoretical computer science mathematical abstract spirit but derives its motivation from practical everyday computation its aim understand nature computation consequence this understanding provide more efficient methodologies all papers introducing studying mathematical logic formal concepts methods are welcome provided that their motivation clearly drawn from field computing theory computation main article theory computation according peter denning fundamental question underlying computer science what can be efficiently automated theory computation focused on answering fundamental questions about what can be computed what amount resources are required perform those computations effort answer first question computability theory examines which computational problems are solvable on various theoretical models computation second question addressed by computational complexity theory which studies time space costs associated with different approaches solving multitude computational problems famous p = np problem one millennium prize problems open problem theory computation p = np gnitirw-terces automata theory computability theory computational complexity theory cryptography quantum computing theory information coding theory main articles information theory coding theory information theory related quantification information this was developed by claude shannon find fundamental limits on signal processing operations such compressing data on reliably storing communicating data coding theory study properties codes systems for converting information from one form another their fitness for specific application codes are used for data compression cryptography error detection correction more recently also for network coding codes are studied for purpose designing efficient reliable data transmission methods algorithms data structures algorithms data structures study commonly used computational methods their computational efficiency on2 analysis algorithms algorithms data structures combinatorial optimization computational geometry programming language theory main article programming language theory programming language theory branch computer science that deals with design implementation analysis characterization classification programming languages their individual features falls within discipline computer science both depending on affecting mathematics software engineering linguistics active research area with numerous dedicated academic journals γ ⊢ x int {\displaystyle \gamma \vdash x{\text{int}}} type theory compiler design programming languages formal methods main article formal methods formal methods are particular kind mathematically based technique for specification development verification software hardware systems use formal methods for software hardware design motivated by expectation that other engineering disciplines performing appropriate mathematical analysis can contribute reliability robustness design they form important theoretical underpinning for software engineering especially where safety security involved formal methods are useful adjunct software testing since they help avoid errors can also give framework for testing for industrial use tool support required however high cost using formal methods means that they are usually only used development high-integrity life-critical systems where safety security utmost importance formal methods are best described application fairly broad variety theoretical computer science fundamentals particular logic calculi formal languages automata theory program semantics but also type systems algebraic data types problems software hardware specification verification applied computer science applied computer science aims at identifying certain computer science concepts that can be used directly solving real world problems artificial intelligence main article artificial intelligence artificial intelligence ai aims required synthesize goal-orientated processes such problem-solving decision-making environmental adaptation learning communication found humans animals from its origins cybernetics dartmouth conference artificial intelligence research has been necessarily cross-disciplinary drawing on areas expertise such applied mathematics symbolic logic semiotics electrical engineering philosophy mind neurophysiology social intelligence ai associated popular mind with robotic development but main field practical application has been embedded component areas software development which require computational understanding starting-point late 1940s was alan turing's question can computers think question remains effectively unanswered although turing test still used assess computer output on scale human intelligence but automation evaluative predictive tasks has been increasingly successful substitute for human monitoring intervention domains computer application involving complex real-world data machine learning computer vision image processing pattern recognition data mining evolutionary computation knowledge representation natural language processing robotics computer architecture engineering main articles computer architecture computer engineering computer architecture digital computer organization conceptual design fundamental operational structure computer system focuses largely on way by which central processing unit performs internally accesses addresses memory field often involves disciplines computer engineering electrical engineering selecting interconnecting hardware components create computers that meet functional performance cost goals digital logic microarchitecture multiprocessing ubiquitous computing systems architecture operating systems computer performance analysis main article computer performance computer performance analysis study work flowing through computers with general goals improving throughput controlling response time using resources efficiently eliminating bottlenecks predicting performance under anticipated peak loads computer graphics visualization main article computer graphics computer science computer graphics study digital visual contents involves synthesis manipulation image data study connected many other fields computer science including computer vision image processing computational geometry heavily applied fields special effects video games computer security cryptography main articles computer security cryptography computer security branch computer technology whose objective includes protection information from unauthorized access disruption modification while maintaining accessibility usability system for its intended users cryptography practice study hiding encryption therefore deciphering decryption information modern cryptography largely related computer science for many encryption decryption algorithms are based on their computational complexity computational science computational science scientific computing field study concerned with constructing mathematical models quantitative analysis techniques using computers analyze solve scientific problems practical use typically application computer simulation other forms computation problems various scientific disciplines numerical analysis computational physics computational chemistry bioinformatics computer networks main article computer network this branch computer science aims manage networks between computers worldwide concurrent parallel distributed systems main articles concurrency computer science distributed computing concurrency property systems which several computations are executing simultaneously potentially interacting with each other number mathematical models have been developed for general concurrent computation including petri nets process calculi parallel random access machine model distributed system extends idea concurrency onto multiple computers connected through network computers within same distributed system have their own private memory information often exchanged among themselves achieve common goal databases main article database database intended organize store retrieve large amounts data easily digital databases are managed using database management systems store create maintain search data through database models query languages software engineering main article software engineering see also computer programming software engineering study designing implementing modifying software order ensure high quality affordable maintainable fast build systematic approach software design involving application engineering practices software software engineering deals with organizing analyzing software—it doesn't just deal with creation manufacture new software but its internal maintenance arrangement both computer applications software engineers computer systems software engineers are projected be among fastest growing occupations from great insights computer science philosopher computing bill rapaport noted three great insights computer science gottfried wilhelm leibniz's george boole's alan turing's claude shannon's samuel morse's insight there are only two objects that computer has deal with order represent anything all information about any computable problem can be represented using only any other bistable pair that can flip-flop between two easily distinguishable states such on/off magnetized/de-magnetized high-voltage/low-voltage etc see also digital physics alan turing's insight there are only five actions that computer has perform order do anything every algorithm can be expressed language for computer consisting only five basic instructions move left one location move right one location read symbol at current location print at current location print at current location see also turing machine corrado böhm giuseppe jacopini's insight there are only three ways combining these actions into more complex ones that are needed order for computer do anything only three rules are needed combine any set basic instructions into more complex ones sequence first do this then do that selection if such-and-such case then do this else do that repetition while such-and-such case do this note that three rules boehm's jacopini's insight can be further simplified with use goto which means more elementary than structured programming see also elementary function arithmetic § friedman's grand conjecture academia further information list computer science conferences categorycomputer science journals conferences are important events for computer science research during these conferences researchers from public private sectors present their recent work meet unlike most other academic fields computer science prestige conference papers greater than that journal publications one proposed explanation for this quick development this relatively new field requires rapid review distribution results task better handled by conferences than by journals education since computer science relatively new field not widely taught schools universities other academic subjects for example codeorg estimated that only percent high schools united states offered computer science education report by association for computing machinery acm computer science teachers association csta revealed that only out states have adopted significant education standards for high school computer science however computer science education growing some countries such israel new zealand south korea have already included computer science their respective national secondary education curriculum several countries are following suit most countries there significant gender gap computer science education for example us about 20% computer science degrees were conferred women this gender gap also exists other western countries however some parts world gap small nonexistent approximately half all computer science degrees malaysia were conferred women women made up 545% computer science graduates guyana see also main article outline computer science computer science portal academic genealogy computer scientists association for computing machinery computer science teachers association informatics engineering informatics list academic computer science departments list computer scientists list publications computer science list pioneers computer science list unsolved problems computer science outline software engineering technology transfer computer science turing award computer science – wikipedia book notes introduction punched cards into new engine was important not only more convenient form control than drums because programs could now be unlimited extent could be stored repeated without danger introducing errors setting machine by hand was important also because served crystallize babbage's feeling that he had invented something really new something much more than sophisticated calculating machine bruce collier see entry computer science on wikiquote for history this quotation references wordnet search—31 wordnetwebprincetonedu retrieved blaise pascal school mathematics statistics university st andrews scotland brief history computing science museum—introduction babbage archived from original on retrieved b anthony hyman charles babbage pioneer computer selection adaptation from ada's notes found ada enchantress numbers by betty alexandra toole edd strawberry press mill valley ca archived from original on february retrieved this sense aiken needed ibm whose technology included use punched cards accumulation numerical data transfer numerical data from one register another bernard cohen p44 brian randell p association for computing machinery acm was founded b c denning peter j computer science discipline pdf encyclopedia computer science archived from original pdf on some edsac statistics clcamacuk retrieved computer science pioneer samuel d conte dies at purdue computer science july retrieved december b levy steven hackers heroes computer revolution doubleday isbn 0-385-19195-2 b c d tedre matti science computing shaping discipline taylor francis / crc press ibm electronic data processing system—chm revolution computerhistoryorg retrieved ibm powerful new data processing system pdf computer history museum retrieved december timeline computer history computer history museum retrieved november b david kahn codebreakers isbn 0-684-83130-9 b computer science achievements challenges circa pdf archived from original pdf on september retrieved january constable r l march computer science achievements challenges circa pdf abelson h gj sussman with j sussman structure interpretation computer programs 2nd ed mit press isbn 0-262-01153-0 computer revolution revolution way we think way we express what we think essence this change emergence what might best be called procedural epistemology — study structure knowledge from imperative point view opposed more declarative point view taken by classical mathematical subjects black box traders are on march telegraph august archived from original on june impact high frequency trading on electronic market papersssrncom doi102139/ssrn1686004 retrieved maly timy how digital filmmakers produced gorgeous sci-fi movie on kickstarter budget wired retrieved november matthau charles how tech has shaped film making film vs digital debate put rest wired retrieved november b louis fine role university computers data processing related fields communications acm 7–14 doi101145/368424368427 stanford university oral history stanford university retrieved may donald knuth george forsythe development computer science comms acm archived october at wayback machine matti tedre development computer science sociocultural perspective pdf p retrieved december peter naur science datalogy communications acm doi101145/365719366510 weiss e corley henry p t communications acm communications acm doi101145/368796368802 communications acm 21p4 ieee computer 2812p136 p mounier-kuhn l'informatique en france de la seconde guerre mondiale au plan calcul l'émergence d'une science paris pups ch & tedre m computing science survey competing viewpoints minds machines 361–387 doi 101007/s11023-011-9240-4 parnas d l software engineering programmes are not computer science programmes annals software engineering 19–37 doi101023/a1018949113292 p rather than treat software engineering subfield computer science i treat element set civil engineering mechanical engineering chemical engineering electrical engineering wegner p october 13–15 research paradigms computer science—proceedings 2nd international conference on software engineering san francisco california united states ieee computer society press los alamitos ca denning p j comer d e gries d mulder m c tucker turner j young p r jan computing discipline communications acm 9–23 doi101145/6323863239 eden h three paradigms computer science pdf minds machines 135–167 doi 101007/s11023-007-9060-8 b computing sciences accreditation board may computer science profession archived from original on retrieved committee on fundamentals computer science challenges opportunities national research council computer science reflections on field reflections from field national academies press isbn 978-0-309-09301-9 csab leading computer education csab retrieved clay mathematics institute p = np archived october at wayback machine p collins graham october claude e shannon founder information theory scientific american retrieved december thisted ronald april computer architecture pdf university chicago wescott bob every computer performance book chapter useful laws createspace isbn what computation buffaloedu meyer bertrand april viewpoint research evaluation for computer science communications acm 31–34 doi 101145/14987651498780 patterson david august evaluating computer scientists engineers for promotion tenure computing research association fortnow lance august viewpoint time for computer science grow up communications acm 33–35 doi 101145/15366161536631 computer science not just elective anymore education week february running on empty pdf october how teach computational thinking—stephen wolfram blog blogstephenwolframcom retrieved for algorithm economist april computing at school international comparisons pdf retrieved july scott michael ghinea gheorghita april educating programmers reflection on barriers deliberate practice pdf proceedings 2nd hea conference on learning teaching stem disciplines hea pp 85–90 doi1011120/stemhea20130005 retrieved march adding coding curriculum new york times march gender gap where are female programmers retrieved july b gender gap where are female programmers what gender science pdf retrieved july further reading overview tucker allen b computer science handbook 2nd ed chapman hall/crc isbn 1-58488-360-x o within more than chapters every one new significantly revised one can find any kind information references about computer science one can imagine all all there absolute nothing about computer science that can not be found kilogram-encyclopaedia with its survey articles christoph meinel zentralblatt math van leeuwen jan handbook theoretical computer science mit press isbn 0-262-72020-5 o this set most unique possibly most useful community support both teaching research books can be used by anyone wanting simply gain understanding one these areas by someone desiring be research topic by instructors wishing find timely information on subject they are teaching outside their major areas expertise rocky ross sigact news ralston anthony reilly edwin d hemmendinger david encyclopedia computer science 4th ed grove's dictionaries isbn 1-56159-248-x o since this has been definitive reference work on computer computing computer science alphabetically arranged classified into broad subject areas entries cover hardware computer systems information data software mathematics computing theory computation methodologies applications computing milieu editors have done commendable job blending historical perspective practical reference information encyclopedia remains essential for most public academic library reference collections joe accardin northeastern illinois univ chicago edwin d reilly milestones computer science information technology greenwood publishing group isbn 978-1-57356-521-9 selected literature knuth donald e selected papers on computer science csli publications cambridge university press collier bruce little engine that could've calculating machines charles babbage garland publishing inc isbn 0-8240-0043-9 cohen bernard howard aiken portrait computer pioneer mit press isbn 978-0-2625317-9-5 tedre matti science computing shaping discipline crc press taylor & francis randell brian origins digital computers selected papers springer-verlag isbn 3-540-06169-x o covering period from its interest lies not only content each these papers — still timely today — but also their being put together so that ideas expressed at different times complement each other nicely n bernard zentralblatt math articles peter j denning computer science science communications acm april peter j denning great principles computing curricula technical symposium on computer science education research evaluation for computer science informatics europe report shorter journal version bertrand meyer christine choppy jan van leeuwen jorgen staunstrup research evaluation for computer science communications acm vol no pp 31–34 april curriculum classification association for computing machinery acm computing classification system joint task force association for computing machinery acm association for information systems ais ieee computer society ieee cs computing curricula overview report september norman gibbs allen tucker model curriculum for liberal arts degree computer science communications acm volume issue march external links find more aboutcomputer scienceat wikipedia's sister projects definitions from wiktionary media from commons news from wikinews quotations from wikiquote texts from wikisource textbooks from wikibooks learning resources from wikiversity library resources about computer science ------------------------------------------------------------------------ resources your library resources other libraries computer science at dmoz scholarly societies computer science what computer science best papers awards computer science since photographs computer scientists by bertrand meyer eecsberkeleyedu bibliography academic search engines citeseerx article search engine digital library repository for scientific academic papers with focus on computer information science dblp computer science bibliography article computer science bibliography website hosted at universität trier germany collection computer science bibliographies article professional organizations association for computing machinery ieee computer society informatics europe aaai aaas computer science misc computer science—stack exchange community-run question-and-answer site for computer science what computer science computer science science computer science software must be considered independent discipline v t e major fields computer science note this template roughly follows acm computing classification hardware printed circuit board peripheral integrated circuit very-large-scale integration energy consumption electronic design automation computer systems organization computer architecture embedded system real-time computing dependability networks network architecture network protocol network components network scheduler network performance evaluation network service software organization interpreter middleware virtual machine operating system software quality software notations tools programming paradigm programming language compiler domain-specific language modeling language software framework integrated development environment software configuration management software library software repository software development software development process requirements analysis software design software construction software deployment software maintenance programming team open-source model theory computation model computation formal language automata theory computational complexity theory logic semantics algorithms algorithm design analysis algorithms randomized algorithm computational geometry mathematics computing discrete mathematics probability statistics mathematical software information theory mathematical analysis numerical analysis information systems database management system information storage systems enterprise information system social information systems geographic information system decision support system process control system multimedia information system data mining digital library computing platform digital marketing world wide web information retrieval security cryptography formal methods security services intrusion detection system hardware security network security information security application security human–computer interaction interaction design social computing ubiquitous computing visualization accessibility concurrency concurrent computing parallel computing distributed computing multithreading multiprocessing artificial intelligence natural language processing knowledge representation reasoning computer vision automated planning scheduling search methodology control method philosophy artificial intelligence distributed artificial intelligence machine learning supervised learning unsupervised learning reinforcement learning multi-task learning machine learning algorithms cross-validation graphics animation rendering image manipulation graphics processing unit mixed reality virtual reality image compression solid modeling applied computing e-commerce enterprise software computational mathematics computational physics computational chemistry computational biology computational social science computational engineering computational healthcare digital art electronic publishing cyberwarfare electronic voting video game word processing operations research educational technology document management computer science portal v t e technology outline technology outline applied science fields agriculture agricultural engineering aquaculture fisheries science food chemistry food engineering food microbiology food technology gurt ict nutrition biomedical bioinformatics biological engineering biomechatronics biomedical engineering biotechnology cheminformatics genetic engineering healthcare science medical research medical technology nanomedicine neuroscience neurotechnology pharmacology reproductive technology tissue engineering buildings construction acoustical engineering architectural engineering building services engineering civil engineering construction engineering domestic technology facade engineering fire protection engineering safety engineering sanitary engineering structural engineering educational educational software digital technologies education ict education impact multimedia learning virtual campus virtual education energy nuclear engineering nuclear technology petroleum engineering soft energy technology environmental clean technology clean coal technology ecological design ecological engineering ecotechnology environmental engineering environmental engineering science green building green nanotechnology landscape engineering renewable energy sustainable design sustainable engineering industrial automation business informatics engineering management enterprise engineering financial engineering industrial biotechnology industrial engineering metallurgy mining engineering productivity improving technologies research development tribology communications artificial intelligence broadcast engineering computer engineering computer science financial technology information technology music technology ontology engineering rf engineering software engineering telecommunications engineering visual technology web engineering military army engineering maintenance electronic warfare military communications military engineering stealth technology transport aerospace engineering automotive engineering naval architecture space technology traffic engineering transport engineering others applied science cryogenics electro-optics electronics engineering geology engineering physics hydraulics materials science microfabrication nanoengineering engineering list audio biochemical ceramic chemical polymer control electrical electronic entertainment geotechnical hydraulic mechanical mechatronics optical protein quantum robotics o animatronics systems components infrastructure invention o timeline knowledge machine skill o craft tool o gadget scales femtotechnology picotechnology nanotechnology microtechnology macro-engineering megascale engineering history prehistoric technology neolithic revolution ancient technology medieval technology renaissance technology industrial revolution o second atomic age jet age space age digital revolution information age theories concepts appropriate technology collingridge dilemma critique technology diffusion innovations disruptive innovation dual-use technology ephemeralization high tech hype cycle low-technology mature technology strategy technology technicism techno-progressivism technocapitalism technocentrism technocracy technocriticism technoculture technoethics technoetic technogaianism technoliberalism technolibertarianism technological alliance technological apartheid technological change technological convergence technological determinism technological escalation technological evolution technological fix technological innovation system technological momentum technological nationalism technological paradigm technological rationality technological revival technological revolution technological self-efficacy technological singularity o singularitarianism technological somnambulism technological transitions technological unemployment technological utopianism technology lifecycle o technology acceptance model o technology adoption lifecycle technomancy technopaganism technorealism technoromanticism technoscience o feminist transhumanism other emerging technologies o list fictional technology high-technology business districts kardashev scale list technologies philosophy technology o ethics technology science technology society o technology dynamics o science technology by country stem fields o pre-stem o women steam fields technology alignment technology assessment technology brokering technology companies technology demonstration technology education o technical universities colleges technology evangelist technology fusion technology governance technology integration technology journalism technology management technology museum technology policy technology shock technology strategy technology society technology transfer technophilia technophobia technoself technosexual technosignature technostress terotechnology book category commons portal wikiquotes authority control lccn sh89003285 gnd 4026894-9 bnf cb11932109b data bne xx525961 computer science computergkcom retrieved from https//enwikipediaorg/w/indexphptitle=computerscience&oldid=751312465 categories electrical engineering electronic engineering computer engineering computer science hidden categories webarchive template wayback links pages using isbn magic links wikipedia pages semi-protected against vandalism wikipedia indefinitely move-protected pages use mdy dates from august all articles with unsourced statements articles with unsourced statements from october articles with dmoz links wikipedia articles with lccn identifiers wikipedia articles with gnd identifiers wikipedia articles with bnf identifiers navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read view source view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikiquote languages afrikaans alemannisch አማርኛ العربية aragonés armãneashti অসমীয়া asturianu azərbaycanca বাংলা bân-lâm-gú беларуская беларуская тарашкевіца‎ भोजपुरी български boarisch bosanski brezhoneg català čeština corsu cymraeg dansk deutsch eesti ελληνικά emiliàn e rumagnòl español esperanto estremeñu euskara فارسی føroyskt français frysk furlan gaeilge gaelg galego 客家語/hak-kâ-ngî 한국어 հայերեն हिन्दी hrvatski ido bahasa indonesia interlingua interlingue ᐃᓄᒃᑎᑐᑦ/inuktitut íslenska italiano עברית kalaallisut ಕನ್ನಡ ქართული kaszëbsczi қазақша kreyòl ayisyen kurdî ladino latgaļu latina latviešu lëtzebuergesch lietuvių limburgs la lojban lumbaart magyar македонски malagasy മലയാളം مصرى bahasa melayu mirandés монгол nederlands nedersaksies नेपाली नेपाल भाषा 日本語 napulitano nordfriisk norsk bokmål norsk nynorsk novial occitan олык марий ଓଡ଼ିଆ oʻzbekcha/ўзбекча पालि پښتو picard piemontèis polski português qaraqalpaqsha română русиньскый संस्कृतम् sardu scots seeltersk shqip sicilianu සිංහල simple english سنڌي slovenčina slovenščina کوردیی ناوەندی српски / srpski srpskohrvatski / српскохрватски suomi svenska tagalog தமிழ் татарча/tatarça తెలుగు ไทย ትግርኛ тоҷикӣ türkçe türkmençe українська اردو ئۇيغۇرچە / uyghurche vèneto tiếng việt võro walon winaray wolof 吴语 yorùbá 粵語 zazaki zeêuws žemaitėška 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 