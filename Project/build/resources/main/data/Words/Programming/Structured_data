data model from wikipedia free encyclopedia   redirected from structured data jump navigation search data model abstract model that organizes elements data standardizes how they relate one another properties real world entities for instance data model may specify that data element representing car comprises number other elements which turn represent color size owner car overview data modeling context data model based on data data relationship data semantic data constraint data model provides details information be stored primary use when final product generation computer software code for application preparation functional specification aid computer software make-or-buy decision figure example interaction between process data models data model explicitly determines structure data data models are specified data modeling notation which often graphical form data model can be sometimes referred data structure especially context programming languages data models are often complemented by function models especially context enterprise models contents overview o role data models o three perspectives history types data models o database model o data structure diagram o entity-relationship model o geographic data model o generic data model o semantic data model data model topics o data architecture o data modeling o data properties o data organization o data structure o data model theory o patterns related models o data flow diagram o information model o object model o object-role model o unified modeling language models see also references further reading overview managing large quantities structured unstructured data primary function information systems data models describe structure manipulation integrity aspects data stored data management systems such relational databases they typically do not describe unstructured data such word processing documents email messages pictures digital audio video role data models how data models deliver benefit main aim data models support development information systems by providing definition format data according west fowler if this done consistently across systems then compatibility data can be achieved if same data structures are used store access data then different applications can share data results this are indicated above however systems interfaces often cost more than they should build operate maintain they may also constrain business rather than support major cause that quality data models implemented systems interfaces poor business rules specific how things are done particular place are often fixed structure data model this means that small changes way business conducted lead large changes computer systems interfaces entity types are often not identified incorrectly identified this can lead replication data data structure functionality together with attendant costs that duplication development maintenance data models for different systems are arbitrarily different result this that complex interfaces are required between systems that share data these interfaces can account for between 25-70% cost current systems data cannot be shared electronically with customers suppliers because structure meaning data has not been standardized for example engineering design data drawings for process plant are still sometimes exchanged on paper reason for these problems lack standards that will ensure that data models will both meet business needs be consistent data model explicitly determines structure data structured data typical applications data models include database models design information systems enabling exchange data usually data models are specified data modeling language data model can be sometimes referred data structure especially context programming languages data models are often complemented by function models especially context enterprise models three perspectives ansi/sparc three level architecture this shows that data model can be external model view conceptual model physical model this not only way look at data models but useful way particularly when comparing models data model instance may be one three kinds according ansi conceptual data model describes semantics domain being scope model for example may be model interest area organization industry this consists entity classes representing kinds things significance domain relationship assertions about associations between pairs entity classes conceptual schema specifies kinds facts propositions that can be expressed using model that sense defines allowed expressions artificial 'language' with scope that limited by scope model logical data model describes semantics represented by particular data manipulation technology this consists descriptions tables columns object oriented classes xml tags among other things physical data model describes physical means by which data are stored this concerned with partitions cpus tablespaces like significance this approach according ansi that allows three perspectives be relatively independent each other storage technology can change without affecting either logical conceptual model table/column structure can change without necessarily affecting conceptual model each case course structures must remain consistent with other model table/column structure may be different from direct translation entity classes attributes but must ultimately carry out objectives conceptual entity class structure early phases many software development projects emphasize design conceptual data model such design can be detailed into logical data model later stages this model may be translated into physical data model however also possible implement conceptual model directly history one earliest pioneering works modelling information systems was done by young kent who argued for precise abstract way specifying informational time characteristics data processing problem they wanted create notation that should enable analyst organize problem around any piece hardware their work was first effort create abstract specification invariant basis for designing different alternative implementations using different hardware components next step modelling was taken by codasyl industry consortium formed who essentially aimed at same thing young kent development proper structure for machine independent problem definition language at system level data processing this led development specific information algebra 1960s data modeling gained more significance with initiation management information system mis concept according leondes during that time information system provided data information for management purposes first generation database system called integrated data store ids was designed by charles bachman at general electric two famous database models network data model hierarchical data model were proposed during this period time towards end 1960s edgar f codd worked out his theories data arrangement proposed relational model for database management based on first-order predicate logic 1970s entity relationship modeling emerged new type conceptual data modeling originally proposed by peter chen entity relationship models were being used first stage information system design during requirements analysis describe information needs type information that be stored database this technique can describe any ontology ie overview classification concepts their relationships for certain area interest 1970s gm nijssen developed natural language information analysis method niam method developed this 1980s cooperation with terry halpin into object-role modeling orm bill kent his book data reality compared data model map territory emphasizing that real world highways are not painted red rivers don't have county lines running down middle you can't see contour lines on mountain contrast other researchers who tried create models that were mathematically clean elegant kent emphasized essential messiness real world task data modeller create order out chaos without excessively distorting truth 1980s according jan l harrington development object-oriented paradigm brought about fundamental change way we look at data procedures that operate on data traditionally data procedures have been stored separately data their relationship database procedures application program object orientation however combined entity's procedure with its data types data models database model main article database model database model specification describing how database structured used several such models have been suggested common models include flat model this may not strictly qualify data model flat table model consists single two-dimensional array data elements where all members given column are assumed be similar values all members row are assumed be related one another hierarchical model hierarchical model similar network model except that links hierarchical model form tree structurewhile network model allows arbitrary graphs network model this model organizes data using two fundamental constructs called records sets records contain fields sets define one-to-many relationships between records one owner many membersthe network data model abstraction design concept used implementation databases relational model database model based on first-order predicate logic its core idea describe database collection predicates over finite set predicate variables describing constraints on possible values combinations valuesthe power relational data model lies its mathematical foundations simple user-level paradigm object-relational model similar relational database model but objects classes inheritance are directly supported database schemas query language star schema simplest style data warehouse schema star schema consists few fact tables possibly only one justifying name referencing any number dimension tables star schema considered important special case snowflake schema flat model hierarchical model network model relational model concept-oriented model star schema data structure diagram main article data structure diagram example data structure diagram data structure diagram dsd diagram data model used describe conceptual data models by providing graphical notations which document entities their relationships constraints that bind them basic graphic elements dsds are boxes representing entities arrows representing relationships data structure diagrams are most useful for documenting complex data entities data structure diagrams are extension entity-relationship model er model dsds attributes are specified inside entity boxes rather than outside them while relationships are drawn boxes composed attributes which specify constraints that bind entities together e-r model while robust doesn't provide way specify constraints between relationships becomes visually cumbersome when representing entities with several attributes dsds differ from er model that er model focuses on relationships between different entities whereas dsds focus on relationships elements within entity enable users fully see links relationships between each entity there are several styles for representing data structure diagrams with notable difference manner defining cardinality choices are between arrow heads inverted arrow heads crow's feet numerical representation cardinality example idef1x entity relationship diagrams used model idef1x itself entity-relationship model main article entity-relationship model entity-relationship model erm sometimes referred entity-relationship diagram erd abstract conceptual data model semantic data model used software engineering represent structured data there are several notations used for erms geographic data model main article data model gis data model geographic information systems mathematical construct for representing geographic objects surfaces data for example vector data model represents geography collections points lines polygons raster data model represent geography cell matrixes that store numeric values triangulated irregular network tin data model represents geography sets contiguous nonoverlapping triangles groups relate process making map ngmdb data model applications ngmdb databases linked together representing map information generic data model main article generic data model generic data models are generalizations conventional data models they define standardised general relation types together with kinds things that may be related by such relation type generic data models are developed approach solve some shortcomings conventional data models for example different modelers usually produce different conventional data models same domain this can lead difficulty bringing models different people together obstacle for data exchange data integration invariably however this difference attributable different levels abstraction models differences kinds facts that can be instantiated semantic expression capabilities models modelers need communicate agree on certain elements which are be rendered more concretely order make differences less significant semantic data model main article semantic data model semantic data models semantic data model software engineering technique define meaning data within context its interrelationships with other data semantic data model abstraction which defines how stored symbols relate real world semantic data model sometimes called conceptual data model logical data structure database management system dbms whether hierarchical network relational cannot totally satisfy requirements for conceptual definition data because limited scope biased toward implementation strategy employed by dbms therefore need define data from conceptual view has led development semantic data modeling techniques that techniques define meaning data within context its interrelationships with other data illustrated figure real world terms resources ideas events etc are symbolically defined within physical data stores semantic data model abstraction which defines how stored symbols relate real world thus model must be true representation real world data model topics data architecture main article data architecture data architecture design data for use defining target state subsequent planning needed hit target state usually one several architecture domains that form pillars enterprise architecture solution architecture data architecture describes data structures used by business and/or its applications there are descriptions data storage data motion descriptions data stores data groups data items mappings those data artifacts data qualities applications locations etc essential realizing target state data architecture describes how data processed stored utilized given system provides criteria for data processing operations that make possible design data flows also control flow data system data modeling main article data modeling data modeling process data modeling software engineering process creating data model by applying formal data model descriptions using data modeling techniques data modeling technique for defining business requirements for database sometimes called database modeling because data model eventually implemented database figure illustrates way data models are developed used today conceptual data model developed based on data requirements for application that being developed perhaps context activity model data model will normally consist entity types attributes relationships integrity rules definitions those objects this then used start point for interface database design data properties some important properties data for which requirements need be met are definition-related properties o relevance usefulness data context your business o clarity availability clear shared definition for data o consistency compatibility same type data from different sources some important properties data content-related properties o timeliness availability data at time required how up date that data o accuracy how close truth data properties related both definition content o completeness how much required data available o accessibility where how whom data available not available eg security o cost cost incurred obtaining data making available for use data organization another kind data model describes how organize data using database management system other data management technology describes for example relational tables columns object-oriented classes attributes such data model sometimes referred physical data model but original ansi three schema architecture called logical that architecture physical model describes storage media cylinders tracks tablespaces ideally this model derived from more conceptual data model described above may differ however account for constraints like processing capacity usage patterns while data analysis common term for data modeling activity actually has more common with ideas methods synthesis inferring general concepts from particular instances than does with analysis identifying component concepts from more general ones {presumably we call ourselves systems analysts because no one can say systems synthesists} data modeling strives bring data structures interest together into cohesive inseparable whole by eliminating unnecessary data redundancies by relating data structures with relationships different approach use adaptive systems such artificial neural networks that can autonomously create implicit models data data structure main article data structure binary tree simple type branching linked data structure data structure way storing data computer so that can be used efficiently organization mathematical logical concepts data often carefully chosen data structure will allow most efficient algorithm be used choice data structure often begins from choice abstract data type data model describes structure data within given domain by implication underlying structure that domain itself this means that data model fact specifies dedicated grammar for dedicated artificial language for that domain data model represents classes entities kinds things about which company wishes hold information attributes that information relationships among those entities often implicit relationships among those attributes model describes organization data some extent irrespective how data might be represented computer system entities represented by data model can be tangible entities but models that include such concrete entity classes tend change over time robust data models often identify abstractions such entities for example data model might include entity class called person representing all people who interact with organization such abstract entity class typically more appropriate than ones called vendor employee which identify specific roles played by those people array hash table linked list stack data structure data model theory term data model can have two meanings data model theory ie formal description how data may be structured accessed data model instance ie applying data model theory create practical data model instance for some particular application data model theory has three main components structural part collection data structures which are used create databases representing entities objects modeled by database integrity part collection rules governing constraints placed on these data structures ensure structural integrity manipulation part collection operators which can be applied data structures update query data contained database for example relational model structural part based on modified concept mathematical relation integrity part expressed first-order logic manipulation part expressed using relational algebra tuple calculus domain calculus data model instance created by applying data model theory this typically done solve some business enterprise requirement business requirements are normally captured by semantic logical data model this transformed into physical data model instance from which generated physical database for example data modeler may use data modeling tool create entity-relationship model corporate data repository some business enterprise this model transformed into relational model which turn generates relational database patterns patterns are common data modeling structures that occur many data models related models data flow diagram main article data flow diagram data flow diagram example data flow diagram dfd graphical representation flow data through information system differs from flowchart shows data flow instead control flow program data flow diagram can also be used for visualization data processing structured design data flow diagrams were invented by larry constantine original developer structured design based on martin estrin's data flow graph model computation common practice draw context-level data flow diagram first which shows interaction between system outside entities dfd designed show how system divided into smaller portions highlight flow data between those parts this context-level data flow diagram then exploded show more detail system being modeled information model main article information model example express g information model information model not type data model but more less alternative model within field software engineering both data model information model can be abstract formal representations entity types that includes their properties relationships operations that can be performed on them entity types model may be kinds real-world objects such devices network they may themselves be abstract such for entities used billing system typically they are used model constrained domain that can be described by closed set entity types properties relationships operations according lee information model representation concepts relationships constraints rules operations specify data semantics for chosen domain discourse can provide sharable stable organized structure information requirements for domain context more general term information model used for models individual things such facilities buildings process plants etc those cases concept specialised facility information model building information model plant information model etc such information model integration model facility with data documents about facility information model provides formalism description problem domain without constraining how that description mapped actual implementation software there may be many mappings information model such mappings are called data models irrespective whether they are object models eg using uml entity relationship models xml schemas document object model standard object model for representing html xml object model main article object model object model computer science collection objects classes through which program can examine manipulate some specific parts its world other words object-oriented interface some service system such interface said be object model represented service system for example document object model dom collection objects that represent page web browser used by script programs examine dynamically change page there microsoft excel object model for controlling microsoft excel from another program ascom telescope driver object model for controlling astronomical telescope computing term object model has distinct second meaning general properties objects specific computer programming language technology notation methodology that uses them for example java object model com object model object model omt such object models are usually defined using concepts such class message inheritance polymorphism encapsulation there extensive literature on formalized object models subset formal semantics programming languages object-role model main article object-role modeling example application object-role modeling schema for geologic surface stephen m richard object-role modeling orm method for conceptual modeling can be used tool for information rules analysis object-role modeling fact-oriented method for performing systems analysis at conceptual level quality database application depends critically on its design help ensure correctness clarity adaptability productivity information systems are best specified first at conceptual level using concepts language that people can readily understand conceptual design may include data process behavioral perspectives actual dbms used implement design might be based on one many logical data models relational hierarchic network object-oriented etc unified modeling language models main article unified modeling language unified modeling language uml standardized general-purpose modeling language field software engineering graphical language for visualizing specifying constructing documenting artifacts software-intensive system unified modeling language offers standard way write system's blueprints including conceptual things such business processes system functions concrete things such programming language statements database schemas reusable software components uml offers mix functional models data models database models see also business process model core architecture data model data dictionary jc3iedm process model data format description language dfdl structured search key-objects references paul r smith & richard sarfaty publications llc michael r mccaleb conceptual data model datum systems national institute standards technology august b c d e f g h i j k matthew west julian fowler developing high quality data models european process industries step technical liaison executive epistle american national standards institute ansi/x3/sparc study group on data base management systems interim report fdt bulletin acm sigmod young j w kent h k abstract formulation data processing problems journal industrial engineering nov-dec pp 471-479 b janis bubenko jr from information algebra enterprise modelling ontologies - historical perspective on modelling for information systems conceptual modelling information systems engineering john krogstie et al eds pp 1-18 cornelius t leondes database data communication network systems techniques applications page derivability redundancy consistency relations stored large data banks ef codd ibm research report check |url= value help jan l harrington object-oriented database design clearly explained p4 b c d fips publication released idef1x by computer systems laboratory national institute standards technology nist december withdrawn wade t sommer s eds z gis b c d david r soller1 thomas m berg national geologic map database project overview progress us geological survey open-file report 03–471 whitten jeffrey l lonnie d bentley kevin c dittman systems analysis design methods 6th edition isbn 0-256-19906-x b beynon-davies p database systems 3rd edition palgrave basingstoke uk isbn 1-4039-1601-2 data model resource book universal patterns for data modeling len silverstone & paul agnew john azzolini introduction systems engineering practices july w stevens g myers l constantine structured design ibm systems journal 115-139 b y tina lee information modeling from design implementation national institute standards technology excel object model overview ascom general requirements retrieved stephen m richard geologic concept modeling us geological survey open-file report 99-386 joachim rossberg rickard redler pro scalable net application designs page object role modeling overview msdnmicrosoftcom retrieved september grady booch ivar jacobson & jim rumbaugh omg unified modeling language specification version further reading david c hay data model patterns conventions thought new yorkdorset house publishers inc len silverston data model resource book volume 1/2 john wiley & sons len silverston & paul agnew data model resource book universal patterns for data modeling volume john wiley & sons matthew west julian fowler developing high quality data models european process industries step technical liaison executive epistle matthew west developing high quality data models morgan kaufmann v t e data model main architecture modeling structure schemas conceptual logical physical types database data structure diagram entity–relationship model enhanced geographic generic semantic related models data flow diagram information model object model object-role modeling unified modeling language see also database design business process modeling core architecture data model enterprise modelling function model process modeling xml schema data format description language v t e software engineering fields computer programming requirements engineering software deployment software design software maintenance software testing systems analysis formal methods concepts data modeling enterprise architecture functional specification modeling language orthogonality programming paradigm software software archaeology software architecture software configuration management software development methodology software development process software quality software quality assurance software verification validation structured analysis orientations agile aspect-oriented object orientation ontology service orientation sdlc models developmental agile eup executable uml incremental model iterative model prototype model rad up scrum spiral model v-model waterfall model xp other spice cmmi data model er model function model information model metamodeling object model systems model view model languages idef uml sysml software engineers victor basili kent beck grady booch fred brooks barry boehm ward cunningham tom demarco edsger w dijkstra martin fowler c r hoare watts humphrey michael jackson ivar jacobson stephen j mellor bertrand meyer david parnas winston w royce james rumbaugh niklaus wirth edward yourdon mohamed fayad related fields computer science computer engineering project management risk management systems engineering category commons retrieved from https//enwikipediaorg/w/indexphptitle=datamodel&oldid=750009805 categories data modeling hidden categories pages with url errors pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons languages العربية deutsch ελληνικά español فارسی français 한국어 italiano қазақша nederlands 日本語 norsk bokmål русский ไทย українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 