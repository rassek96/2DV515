php from wikipedia free encyclopedia jump navigation search this article about scripting language for other uses see php disambiguation php paradigm imperative functional object-oriented procedural reflective designed by rasmus lerdorf developer php development team zend technologies first appeared june years ago stable release / november days ago preview release release candidate / november days ago typing discipline dynamic weak gradual php implementation language c primarily some components c++ os unix-like windows license php license most zend engine under zend engine license & tsrm license filename extensions php phtml php3 php4 php5 php7 phps website phpnet major implementations zend engine hhvm phalanger quercus project zero parrot influenced by c c++ java perl tcl influenced falcon hack php programming at wikibooks php server-side scripting language designed primarily for web development but also used general-purpose programming language originally created by rasmus lerdorf php reference implementation now produced by php development team php originally stood for personal home page but now stands for recursive acronym php hypertext preprocessor php code may be embedded into html code can be used combination with various web template systems web content management systems web frameworks php code usually processed by php interpreter implemented module web server common gateway interface cgi executable web server combines results interpreted executed php code which may be any type data including images with generated web page php code may also be executed with command-line interface cli can be used implement standalone graphical applications standard php interpreter powered by zend engine free software released under php license php has been widely ported can be deployed on most web servers on almost every operating system platform free charge php language evolved without written formal specification standard until leaving canonical php interpreter de facto standard since work has gone on create formal php specification during 2010s there have been increased efforts towards standardisation code sharing php applications by projects such php-fig form psr-initiatives well composer dependency manager packagist repository contents history o early history o php o php o php unicode o php o release history mascot syntax o data types o functions o object-oriented programming implementations licensing development community installation configuration use security see also references further reading external links history early history rasmus lerdorf who wrote original common gateway interface cgi component together with andi gutmans zeev suraski who rewrote parser that formed php php development began when rasmus lerdorf wrote several common gateway interface cgi programs c which he used maintain his personal homepage he extended them work with web forms communicate with databases called this implementation personal home page/forms interpreter php/fi php/fi could help build simple dynamic web applications accelerate bug reporting improve code lerdorf initially announced release php/fi personal home page tools php tools version on usenet discussion group compinfosystemswwwauthoringcgi on june this release already had basic functionality that php has this included perl-like variables form handling ability embed html syntax resembled that perl but was simpler more limited less consistent lerdorf did not intend early php become new programming language but grew organically with lerdorf noting retrospect i don’t know how stop there was never any intent write programming language i have absolutely no idea how write programming language i just kept adding next logical step on way development team began form after months work beta testing officially released php/fi november fact that php lacked original overall design but instead developed organically has led inconsistent naming functions inconsistent ordering their parameters some cases function names were chosen match lower-level libraries which php was wrapping while some very early versions php length function names was used internally hash function so names were chosen improve distribution hash values php this example custom php code on computer screen zeev suraski andi gutmans rewrote parser formed base php changing language's name recursive acronym php hypertext preprocessor afterwards public testing php began official launch came june suraski gutmans then started new rewrite php's core producing zend engine they also founded zend technologies ramat gan israel on may php powered by zend engine was released august this branch reached version php no longer under development nor will any security updates be released php on july php was released powered by new zend engine ii php included new features such improved support for object-oriented programming php data objects pdo extension which defines lightweight consistent interface for accessing databases numerous performance enhancements php became only stable version under development late static binding had been missing from php was added version many high-profile open-source projects ceased support php new code february because gophp5 initiative provided by consortium php developers promoting transition from php php over time php interpreters became available on most existing 32-bit 64-bit operating systems either by building them from php source code by using pre-built binaries for php versions only available microsoft windows binary distributions were 32-bit x86 builds requiring windows 32-bit compatibility mode while using internet information services iis on 64-bit windows platform php version made 64-bit x86-64 builds available for microsoft windows php unicode php received mixed reviews due lacking native unicode support at core language level project headed by andrei zmievski was initiated bring native unicode support throughout php by embedding international components for unicode icu library representing text strings utf-16 internally since this would cause major changes both internals language user code was planned release this version language along with other major features then development however shortage developers who understood necessary changes performance problems arising from conversion from utf-16 which rarely used web context led delays project result php release was created with many non-unicode features back-ported from php notably namespaces march project its current form was officially abandoned php release was prepared containing most remaining non-unicode features from php such traits closure re-binding initial hopes were that new plan would be formed for unicode integration but none have been adopted php during new major php version was developed which was numbered php numbering this version involved some debate while php unicode experiment had never been released several articles book titles referenced php name which might have caused confusion if new release were reuse name after vote name php was chosen foundation php php branch that was originally dubbed php next generation phpng was authored by dmitry stogov xinchen hui nikita popov aimed optimize php performance by refactoring zend engine while retaining near-complete language compatibility july wordpress-based benchmarks which served main benchmark suite for phpng project showed almost 100% increase performance changes from phpng are also expected make easier improve performance future more compact data structures other changes are seen better suited for successful migration just-in-time jit compiler because significant changes reworked zend engine called zend engine succeeding zend engine used php because major internal changes phpng must receive new major version number php rather than minor php release according php's release process major versions php are allowed break backward-compatibility code therefore php presented opportunity for other improvements beyond phpng that require backward-compatibility breaks particular involved following changes many fatal- recoverable-level legacy php error mechanisms were replaced with modern object-oriented exceptions syntax for variable dereferencing was reworked be internally more consistent complete allowing use operators -> {} with arbitrary meaningful left-hand-side expressions support for legacy php 4-style constructor methods was deprecated behavior foreach statement was changed be more predictable constructors for few classes built-in php which returned null upon failure were changed throw exception instead for consistency several unmaintained deprecated server application programming interfaces sapis extensions were removed from php core most notably legacy mysql extension behavior list operator was changed remove support for strings support for legacy asp-style php code delimiters was removed oversight allowing switch statement have multiple default clauses was fixed support for hexadecimal number support some implicit conversions from strings number types was removed left-shift right-shift operators were changed behave more consistently across platforms conversions between integers floating point numbers were tightened implemented more consistently across platforms php also included new language features most notably introduces return type declarations for functions which complement existing parameter type declarations support for scalar types integer float string boolean parameter return type declarations release history key color meaning development red old release no development yellow stable release security fixes green stable release bug security fixes blue future release new features version release date supported until notes june officially called personal home page tools php tools this first use name php november officially called php/fi this first release that could actually be characterised php being standalone language with many features that have endured present day june october development moves from one person multiple developers zeev suraski andi gutmans rewrite base for this version may june added more advanced two-stage parse/execute tag-parsing system called zend engine december march introduced superglobals $get $post $session etc april september disabled registerglobals by default data received over network not inserted directly into global namespace anymore closing possible security holes applications december march introduced command-line interface cli supplement cgi july august fixed memory corruption bug which required breaking binary compatibility with extensions compiled against php version 43x july september zend engine ii with new object model november august performance improvements with introduction compiler variables re-engineered php engine added php data objects pdo consistent interface for accessing databases november january enabled filter extension by default native json support june august namespace support late static bindings jump label limited goto closures php archives phar garbage collection for circular references improved windows support sqlite3 mysqlnd replacement for libmysql underlying library for extensions that work with mysql fileinfo replacement for mimemagic for better mime support internationalization extension deprecation ereg extension march september trait support short array syntax support removed items registerglobals safemode allowcalltimepassreference sessionregister sessionunregister sessionisregistered built-in web server several improvements existing features performance reduced memory requirements june july support for generators finally blocks for exceptions handling opcache based on zend optimizer+ bundled official distribution august december constant scalar expressions variadic functions argument unpacking new exponentiation operator extensions use statement for functions constants new phpdbg debugger sapi module other smaller improvements 6x not released n/a abandoned version php that planned include native unicode support december december zend engine performance improvements 64-bit integer support on windows uniform variable syntax ast-based compilation process added closure call bitwise shift consistency across platforms null coalesce operator unicode codepoint escape syntax return type declarations scalar type integer float string boolean declarations spaceship three-way comparison operator generator delegation anonymous classes simpler more consistently available csprng api replacement many remaining internal php errors with more modern exceptions shorthand syntax for importing multiple items from namespace november years after release void return type class constant visibility modifiers nullable types beginning on june php group implemented timeline for release new versions php under this system at least one release should occur every month once per year minor release should occur which may include new features every minor release should at least be supported for two years with security bug fixes followed by at least one year only security fixes for total three-year release process for every minor release no new features unless small self-contained are be introduced into minor release during three-year release process mascot elephpant php mascot mascot php project elephpant blue elephant with php logo on its side designed by vincent pontier elephpant sometimes differently colored when plush toy form syntax main article php syntax semantics following hello world program written php code embedded html document php test hello world' > however no requirement exists for php code be embedded html simplest version hello world may be written like this with closing tag omitted preferred files containing pure php code close php sections shortened form xhtml other xml documents creates correctly formed xml processing instructions this means that resulting mixture php code other markup server-side file itself well-formed xml variables are prefixed with dollar symbol type does not need be specified advance php introduced type hinting that allows functions force their parameters be objects specific class arrays interfaces callback functions however before php type hints could not be used with scalar types such integer string unlike function class names variable names are case sensitive both double-quoted heredoc strings provide ability interpolate variable's value into string php treats newlines whitespace manner free-form language statements are terminated by semicolon php has three types comment syntax / / marks block inline comments // well are used for one-line comments echo statement one several facilities php provides output text eg web browser terms keywords language syntax php similar c style syntax if conditions for while loops function returns are similar syntax languages such c c++ c java perl following example php for loop } > data types php stores integers platform-dependent range either 64-bit 32-bit signed integer equivalent c-language long type unsigned integers are converted signed values certain situations this behavior different from that other programming languages integer variables can be assigned using decimal positive negative octal hexadecimal binary notations floating point numbers are also stored platform-specific range they can be specified using floating point notation two forms scientific notation php has native boolean type that similar native boolean types java c++ using boolean type conversion rules non-zero values are interpreted true zero false perl c++ null data type represents variable that has no value null only allowed value for this data type variables resource type represent references resources from external sources these are typically created by functions from particular extension can only be processed by functions from same extension examples include file image database resources arrays can contain elements any type that php can handle including resources objects other arrays order preserved lists values hashes with both keys values two can be intermingled php also supports strings which can be used with single quotes double quotes nowdoc heredoc syntax standard php library spl attempts solve standard problems implements efficient data access interfaces classes functions php defines large array functions core language many are also available various extensions these functions are well documented online php documentation however built-in library has wide variety naming conventions associated inconsistencies described under history above custom functions may be defined by developer eg function myage$birthyear { // defines function this one named myage $yearsold = date'y' - $birthyear // calculates age return $yearsold ' year' $yearsold = 's' '' // returns age descriptive form } echo 'i am currently ' myage1981 ' old' // outputs text concatenated // with return value myage // result this syntax myage called output above sample program 'i am currently years old' lieu function pointers functions php can be referenced by string containing their name this manner normal php functions can be used for example callbacks within function tables user-defined functions may be created at any time without being prototyped functions may be defined inside code blocks permitting run-time decision whether not function should be defined there functionexists function that determines whether function with given name has already been defined function calls must use parentheses with exception zero-argument class constructor functions called with php operator new which case parentheses are optional until php support for anonymous functions closures did not exist php while createfunction exists since php merely thin wrapper around eval that allows normal php functions be created during program execution php added syntax define anonymous function closure which can capture variables from surrounding scope function getadder$x { return function$y use $x { return $x + $y } } $adder = getadder8 echo $adder2 // prints example above getadder function creates closure using passed argument $x keyword use imports variable from lexical context which takes additional argument $y returns created closure caller such function first-class object meaning that can be stored variable passed parameter other functions etc unusually for dynamically typed language php supports type declarations on function parameters which are enforced at runtime this has been supported for classes interfaces since php for arrays since php for callables since php scalar integer float string boolean types since php php also has type declarations for function return types expressed by placing type name after list parameters preceded by colon for example getadder function from earlier example could be annotated with types like so php function getadderint $x \closure { return functionint $y use $x int { return $x + $y } } $adder = getadder8 echo $adder2 // prints echo $addernull // throws exception because incorrect type was passed $adder = getadder // would also throw exception by default scalar type declarations follow weak typing principles so for example if parameter's type int php would allow not only integers but also convertible numeric strings floats booleans be passed that function would convert them however php has strict typing mode which when used disallows such conversions for function calls returns within file object-oriented programming basic object-oriented programming functionality was added php improved php this allowed for php gain further abstraction making creative tasks easier for programmers using language object handling was completely rewritten for php expanding feature set enhancing performance previous versions php objects were handled like value types drawback this method was that code had make heavy use php's reference variables if wanted modify object was passed rather than creating copy new approach objects are referenced by handle not by value php introduced private protected member variables methods along with abstract classes final classes abstract methods final methods also introduced standard way declaring constructors destructors similar that other object-oriented languages such c++ standard exception handling model furthermore php added interfaces allowed for multiple interfaces be implemented there are special interfaces that allow objects interact with runtime system objects implementing arrayaccess can be used with array syntax objects implementing iterator iteratoraggregate can be used with foreach language construct there no virtual table feature engine so static variables are bound with name instead reference at compile time if developer creates copy object using reserved word clone zend engine will check whether clone method has been defined if not will call default clone which will copy object's properties if clone method defined then will be responsible for setting necessary properties created object for convenience engine will supply function that imports properties source object so programmer can start with by-value replica source object only override properties that need be changed following basic example object-oriented programming php class person { public $firstname public $lastname public function construct$firstname $lastname = '' { // optional second argument $this->firstname = $firstname $this->lastname = $lastname } public function greet { return 'hello my name ' $this->firstname $this->lastname = '' ' ' $this->lastname '' '' } public static function staticgreet$firstname $lastname { return 'hello my name ' $firstname ' ' $lastname '' } } $he = new person'john' 'smith' $she = new person'sally' 'davis' $other = new person'iamine' echo $he->greet // prints hello my name john smith echo '' echo $she->greet // prints hello my name sally davis echo '' echo $other->greet // prints hello my name iamine echo '' echo personstaticgreet'jane' 'doe' // prints hello my name jane doe visibility php properties methods defined using keywords public private protected default public if only var used var synonym for public items declared public can be accessed everywhere protected limits access inherited classes class that defines item private limits visibility only class that defines item objects same type have access each other's private protected members even though they are not same instance php's member visibility features have sometimes been described highly useful however they have also sometimes been described at best irrelevant at worst positively harmful implementations original only complete most widely used php implementation powered by zend engine known simply php disambiguate from other implementations sometimes unofficially referred zend php zend engine compiles php source code on-the-fly into internal format that can execute thus works interpreter also reference implementation php php has no formal specification so semantics zend php define semantics php itself due complex nuanced semantics php defined by how zend works difficult for competing implementations offer complete compatibility php's single-request-per-script-execution model fact zend engine interpreter leads inefficiency result various products have been developed help improve php performance order speed up execution time not have compile php source code every time web page accessed php scripts can also be deployed php engine's internal format by using opcode cache which works by caching compiled form php script opcodes shared memory avoid overhead parsing compiling code every time script runs opcode cache zend opcache built into php since version another example widely used opcode cache alternative php cache apc which available pecl extension while zend php still most popular implementation several other implementations have been developed some these are compilers support jit compilation hence offer performance benefits over zend php at expense lacking full php compatibility alternative implementations include following hiphop virtual machine hhvm – developed at facebook available open source converts php code into high-level bytecode commonly known intermediate language which then translated into x86-64 machine code dynamically at runtime by just-in-time jit compiler resulting up 6× performance improvements parrot – virtual machine designed run dynamic languages efficiently pipp transforms php source code into parrot intermediate representation which then translated into parrot's bytecode executed by virtual machine phalanger – compiles php into common intermediate language cil bytecode hiphop – developed at facebook available open source transforms php scripts into c++ code then compiles resulting code reducing server load up 50% early facebook deprecated favor hhvm due multiple reasons including deployment difficulties lack support for whole php language including createfunction eval constructs licensing php free software released under php license which stipulates that products derived from this software may not be called php nor may php appear their name without prior written permission from group@phpnet you may indicate that your software works conjunction with php by saying foo for php instead calling php foo phpfoo this restriction on use php makes php license incompatible with general public license gpl while zend license incompatible due advertising clause similar that original bsd license development community php includes various free open-source libraries its source distribution uses them resulting php binary builds php fundamentally internet-aware system with built-in modules for accessing file transfer protocol ftp servers many database servers including postgresql mysql microsoft sql server sqlite which embedded database ldap servers others numerous functions familiar c programmers such those stdio family are available standard php builds php allows developers write extensions c add functionality php language php extensions can be compiled statically into php loaded dynamically at runtime numerous extensions have been written add support for windows api process management on unix-like operating systems multibyte strings unicode curl several popular compression formats other php features made available through extensions include integration with irc dynamic generation images adobe flash content php data objects pdo abstraction layer used for accessing databases even speech synthesis some language's core functions such those dealing with strings arrays are also implemented extensions php extension community library pecl project repository for extensions php language some other projects such zephir provide ability for php extensions be created high-level language compiled into native php extensions such approach instead writing php extensions directly c simplifies development extensions reduces time required for programming testing php group consists ten people thies c arntzen stig bakken shane caraveo andi gutmans rasmus lerdorf sam ruby sascha schumann zeev suraski jim winstead andrei zmievski zend technologies provides php certification based on php exam for programmers become certified php developers installation configuration there are two primary ways for adding support for php web server – native web server module cgi executable php has direct module interface called server application programming interface sapi which supported by many web servers including apache http server microsoft iis netscape now defunct iplanet some other web servers such omnihttpd support internet server application programming interface isapi which microsoft's web server module interface if php has no module support for web server can always be used common gateway interface cgi fastcgi processor that case web server configured use php's cgi executable process all requests php files php-fpm fastcgi process manager alternative fastcgi implementation for php bundled with official php distribution since version when compared older fastcgi implementation contains some additional features mostly useful for heavily loaded web servers when using php for command-line scripting php command-line interface cli executable needed php supports cli sapi php main focus this sapi developing shell applications using php there are quite few differences between cli sapi other sapis although they do share many same behaviors php has direct module interface called sapi for different web servers case php apache on windows provided form dll file called php5apache2dll which module that among other functions provides interface between php web server implemented form that server understands this form what known sapi there are different kinds sapis for various web server extensions for example addition those listed above other sapis for php language include common gateway interface cgi command-line interface cli php can also be used for writing desktop graphical user interface gui applications by using php-gtk extension php-gtk not included official php distribution extension can be used only with php versions newer most common way installing php-gtk compiling from source code when php installed used cloud environments software development kits sdks are provided for using cloud-specific features for example amazon web services provides aws sdk for php windows azure can be used with windows azure sdk for php numerous configuration options are supported affecting both core php features extensions configuration file phpini searched for different locations depending on way php used configuration file split into various sections while some configuration options can be also set within web server configuration use broad overview lamp software bundle displayed here together with squid php general-purpose scripting language that especially suited server-side web development which case php generally runs on web server any php code requested file executed by php runtime usually create dynamic web page content dynamic images used on websites elsewhere can also be used for command-line scripting client-side graphical user interface gui applications php can be deployed on most web servers many operating systems platforms can be used with many relational database management systems rdbms most web hosting providers support php for use by their clients available free charge php group provides complete source code for users build customize extend for their own use dynamic web page example server-side scripting php mysql php acts primarily filter taking input from file stream containing text and/or php instructions outputting another stream data most commonly output will be html although could be json xml binary data such image audio formats since php php parser compiles input produce bytecode for processing by zend engine giving improved performance over its interpreter predecessor originally designed create dynamic web pages php now focuses mainly on server-side scripting similar other server-side scripting languages that provide dynamic content from web server client such microsoft's aspnet sun microsystems' javaserver pages modperl php has also attracted development many software frameworks that provide building blocks design structure promote rapid application development rad some these include prado cakephp symfony codeigniter laravel yii framework phalcon zend framework offering features similar other web frameworks lamp architecture has become popular web industry way deploying web applications php commonly used p this bundle alongside linux apache mysql although p may also refer python perl some mix three similar packages wamp mamp are also available for windows os x with first letter standing for respective operating system although both php apache are provided part mac os x base install users these packages seek simpler installation mechanism that can be more easily kept up date april over million internet domains had web services hosted on servers with php installed modphp was recorded most popular apache http server module october php was used server-side programming language on 75% all websites whose server-side programming language was known february percentage had reached 82% php was most-used open source software within enterprises web content management systems written php include mediawiki joomla ez publish ez platform silverstripe wordpress drupal moodle user-facing portion facebook digg for specific more advanced usage scenarios php offers well defined documented way for writing custom extensions c c++ besides extending language itself form additional libraries extensions are providing way for improving execution speed where critical there room for improvements by using true compiled language php also offers well defined ways for embedding itself into other software projects that way php can be easily used internal scripting language for another project also providing tight interfacing with project's specific internal data structures php received mixed reviews due lacking support for multithreading at core language level though using threads made possible by pthreads pecl extension january php was used more than million websites 39% those sampled was installed on million web servers security 9% all vulnerabilities listed by national vulnerability database were linked php historically about 30% all vulnerabilities listed since this database are linked php technical security flaws language itself its core libraries are not frequent these numbered which was about 1% total although php applies about 20% programs listed recognizing that programmers make mistakes some languages include taint checking automatically detect lack input validation which induces many issues such feature being developed for php but its inclusion into release has been rejected several times past there are advanced protection patches such suhosin hardening -patch that are especially designed for web hosting environments primarily due these environments being seen places where carelessly written code may run however many security features such function whitelists have proven more powerful application-specific environments due php's extensive capabilities code size criticism php within security communities can be deflected somewhat by use suhosin this may cease be case if php7 moves using jit engine thereby preventing exploitation mitigation technologies such w^x from being effective there are certain language features configuration parameters primarily default values for such runtime settings that make php applications prone security issues among these magicquotesgpc registerglobals configuration directives are best known latter made any url parameters become php variables opening path for serious security vulnerabilities by allowing attacker set value any uninitialized global variable interfere with execution php script support for magic quotes register globals has been deprecated php removed php another example for runtime settings vulnerability comes from failing disable php execution via engine configuration directive for directory where uploaded images are stored leaving default settings can result execution malicious php code embedded within uploaded images also leaving enabled dynamic loading php extensions via enabledl configuration directive shared web hosting environment can lead security issues also implied type conversions that result incompatible values being treated identical against programmer's intent can lead security issues for example result comparison == comparison true because first compared value treated scientific notation having value 0×101234 ie zero this feature resulted authentication vulnerabilities simple machines forum typo3 phpbb when md5 password hashes were compared instead either function strcmp identity operator === should be used === results false analysis over website defacements published by zone-h most frequently 53% used technique was exploitation file inclusion vulnerability mostly related insecure usage php functions include require allowurlfopen see also computer programming portal free software portal pear php extension application repository php extension community library pecl php accelerator list php accelerators list amp packages list php editors php-gtk template processor xampp free open source cross-platform web server solution stack package zend server hack programming language comparison programming languages comparison web frameworks references b lerdorf rasmus php on hormones – history php presentation by rasmus lerdorf given at mysql conference santa clara california conversations network retrieved b news archive – php released phpnet retrieved news archive – php release candidate released phpnet retrieved type hinting phpnet retrieved september b history php phpnet b c d e f g h i history php related projects php group retrieved php manual preface wwwphpnet introduction what can php do php manual retrieved b embedding php html o'reilly retrieved jackson joab php gets formal specification at last itworld idg lerdorf rasmus i wonder why people keep writing that php was ever written perl never was php twitter retrieved lerdorf rasmus php on hormones mp3 conversations network retrieved lerdorf rasmus slide slides for 'php on hormones' talk php group retrieved lerdorf rasmus june announce personal home page tools php tools retrieved june lerdorf rasmus announce personal home page tools php tools newsgroup compinfosystemswwwauthoringcgi retrieved rasmus lerdorf senior technical yahoo php behind mic archived from original on cited at felipe ribeiro aug this not another php sucks article problems with php retrieved december phpinternals re function name consistency newsphpnet retrieved rasmus lerdorf dec re flexible function naming newsgroup phpinternals retrieved december php - acronym meaning vote phpnet archived from original on august zend engine version feature overview design zend technologies ltd retrieved phpnet news archive php group retrieved kerner sean michael php dead—long live php internetnews retrieved trachtenberg adam why php rocks o'reilly retrieved late static binding php digital sandwich retrieved static keyword php group retrieved gophp5 archived from original on gophp5 php projects join forces go php gophp5 press release archived from original pdf on retrieved gophp5 gophp5 archived from original on retrieved php installation configuration wwwphpnet retrieved php for windows binaries sources releases phpnet retrieved php for windows binaries sources releases phpnet retrieved php for windows binaries sources releases phpnet retrieved types strings php manual phpnet retrieved details string type php manual phpnet retrieved andrei zmievski php unicode support design document mailing list post retrieved php retrieved andrei zmievski good bad ugly what happened unicode php retrieved rasmus lerdorf php mailing list post retrieved rfc name next release php phpnet retrieved re name next release php again retrieved php rfcphpng phpnet retrieved december b php phpng phpnet retrieved merge branch 'zendengine3' githubcom retrieved b c php release process retrieved b php rfc exceptions engine for php phpnet retrieved b php rfc uniform variable syntax phpnet retrieved online php shell | 150+ versions + stats + vld + hhvm php rfc fix foreach behavior phpnet retrieved php rfc constructor behaviour internal classes phpnet retrieved php rfc removal dead not yet php7 ported sapis extensions phpnet retrieved php rfc fix list behavior inconsistency phpnet retrieved php rfc remove alternative php tags phpnet retrieved php rfc make defining multiple default cases switch syntax error phpnet retrieved php rfc remove hex support numeric strings phpnet retrieved b php rfc integer semantics phpnet retrieved php rfc zpp failure on overflow phpnet retrieved b c rfc return types phpnet retrieved b c d e f rfc scalar type declarations phpnet retrieved b c d e f g h i j k l m unsupported branches phpnet retrieved b c d php php changelog php group retrieved using php from command line php manual php group retrieved php release announcement php mannual php group retrieved b c php php changelog php group retrieved php manual pdo php group retrieved built-in web server retrieved march php changes phpnet retrieved b supported versions phpnet retrieved migrating from php 55x php 56x phpnet retrieved resetting php there have been books on shelves purporting cover php since at least but march php release not out - fact not even close out recent events suggest that php will not be released before - if indeed released at all php moves full speed ahead recent versions php have been part 5x release series but there will be no php “we’re going skip because years ago we had plans for but those plans were very different from what we’re doing now” gutmans said going right version avoids confusion php rfcsizetandint64next phpnet retrieved december php rfcabstractsyntaxtree phpnet retrieved december php rfcclosureapply phpnet retrieved december php rfcintegersemantics phpnet retrieved december php rfcissetternary phpnet retrieved december rfc unicode codepoint escape syntax retrieved combined comparison spaceship operator phpnet retrieved php rfc generator delegation phpnet retrieved php rfc anonymous classes phpnet retrieved php rfc easy user-land csprng phpnet retrieved php rfc group use declarations phpnet retrieved preparation tasks retrieved july php rfcvoidreturntype phpnet retrieved php rfcclassconstantvisibility phpnet retrieved php rfc nullable types phpnet retrieved php elephpant oct retrieved oct tags - manual phpnet retrieved b php rfcshortags phpnet retrieved php basic syntax php group retrieved basic coding standard php framework interoperability group retrieved echo - manual phpnet retrieved description core phpini directives - manual phpnet retrieved your first php-enabled page php group retrieved bray tim et al november processing instructions extensible markup language xml fifth edition w3c retrieved variables php group retrieved instruction separation php group retrieved comments php group retrieved integers php running with scissors portability mysql performance blog march retrieved b c d e types php group retrieved strings php group retrieved spl – standardphplibrary phpnet march retrieved b user-defined functions php manual phpnet retrieved b variable functions php manual phpnet retrieved createfunction php manual phpnet retrieved anonymous functions php manual phpnet retrieved christian seiler dmitry stogov request for comments lambda functions closures phpnet retrieved b php object references mjtsaicom retrieved classes objects php php group retrieved object cloning php group retrieved visibility php manual theserverpagescom retrieved gervasio alejandro more on private methods with php member visibility devshedcom retrieved november visibility php public private protected aperiplussourceforgenet retrieved how do computer languages work retrieved gilmore p integrating zend optimizer+ into php distribution newsphpnet retrieved alternative php cache phpnet retrieved we are 985% 16% « hiphop virtual machine hhvmcom december retrieved announcement on github removing hphpc support retrieved php license version retrieved gpl-incompatible free software licenses various licenses comments about them free software foundation retrieved php function method listing - manual php group retrieved introduction - manual phpnet retrieved darryl patterson august simplify business logic with php dataobjects - o'reilly media ibmcom retrieved december ibm - united states ibm - united states retrieved december five common php database problems ibmcom retrieved ibm redbooks - developing php applications for ibm data servers redbooksibmcom retrieved december php|architect krill paul october php catching on at enterprises vying with java infoworld archived from original on july cross reference /php54/ext/standard/ phpnet retrieved december developing custom php extensions devnewzcom archived from original on retrieved why zephir zephir-langcom retrieved php credits phpnet retrieved b general installation considerations phpnet retrieved news archive php released phpnet fastcgi process manager fpm phpnet retrieved command line usage introduction phpnet retrieved command line usage differences other sapis phpnet retrieved b general installation considerations phpnet retrieved php apache 2x on microsoft windows phpnet retrieved command line usage introduction phpnet retrieved installing php-gtk phpnet retrieved aws sdk for php awsamazoncom retrieved windows azure sdk for php - interoperability bridges labs center interoperabilitybridgescom retrieved runtime configuration table contents phpnet retrieved phpini directives list phpini directives phpnet retrieved runtime configuration configuration file phpnet retrieved phpini directives list phpini sections phpnet retrieved runtime configuration where configuration setting may be set phpnet retrieved php manual image processing gd phpnet retrieved archived june at wayback machine php mysql university alabama archived from original on retrieved php server-side scripting language indiana university retrieved javaserver pages technology — javaserver pages comparing methods for server-side dynamic content white paper sun microsystems retrieved five simple ways tune your lamp application php php usage stats securityspace retrieved usage server-side programming languages for websites w3techs retrieved usage server-side programming languages for websites w3techs retrieved php perl crashing enterprise party manualinstallation requirementsphp mediawiki retrieved php programming language which mediawiki written what joomla server requirements silverstripe retrieved october silverstripe requires php 532+ about wordpress retrieved wordpress was built on php php drupal drupalorg retrieved about moodleorg retrieved php facebook | facebook blogfacebookcom retrieved php digg o'reilly retrieved php at core extension structure phpnet retrieved php at core counter extension – continuing example phpnet retrieved extension writing part i introduction php zend zend technologies retrieved extension writing part ii parameters arrays zvals zend technologies retrieved extension writing part ii parameters arrays zvals continued zend technologies retrieved extension writing part iii resources zend technologies retrieved wrapping c++ classes php extension zend technologies retrieved extending php with c++ stack overflow retrieved how can i use c++ code interact with php stack overflow retrieved golemon sara extending embedding php isbn 978-0-672-32704-9 bug request multi threading phpnet retrieved pthreads introduction php manual phpnet retrieved pecl package pthreads peclphpnet retrieved ide andy php just grows & grows retrieved national vulnerability database nvd search vulnerabilities retrieved php-related vulnerabilities on national vulnerability database retrieved php taint mode rfc developer meeting notes nov taint mode decision november hardened-php project security using register globals php manual phpnet retrieved magic quotes php manual phpnet retrieved 'engine' configuration directive php runtime configuration phpnet retrieved php security exploit with gif images retrieved php security exploit with gif images php classes blog retrieved passing malicious php through getimagesize retrieved 'enabledl' configuration directive php runtime configuration phpnet retrieved php function reference dl phpnet retrieved my host won't fix their trojan webhosting talk retrieved raz0r simple machines forum nibble security typo3-sa-2010-020 typo3-sa-2010-022 explained ahackru криптостойкость и небезопасное сравнение comparison operators phpnet pawel krawczyk most common attacks on web applications ipsecpl retrieved pawel krawczyk so what are most critical application flaws on new owasp top ipsecpl retrieved further reading paul ford june what code bloomberg businessweek what’s absolute minimum i must know about php external links find more aboutphpat wikipedia's sister projects media from commons textbooks from wikibooks learning resources from wikiversity documentation from mediawiki listen this article info/dl this audio file was created from revision php article dated does not reflect subsequent edits article audio help more spoken articles official website php at dmoz php reference manual php source code repository on github php php symfony structure stability flexibility v t e php people andi gutmans rasmus lerdorf zeev suraski resources accelerator eaccelerator mmcache composer editors libraries pear implementations hhvm hphpc parrot phalanger project zero quercus zend engine web frameworks cakephp codeigniter drupal ez publish fat-free fuelphp horde joomla laravel lithium midgard modx nette framework prado phalcon qcodo silex silverstripe symfony typo3 wordpress xaraya xoops yii zend framework zeta components testing behat phpunit php unit testing framework simpletest lime symfony orms doctrine propel ides aptana codelobster eclipse pdt netbeans phpedit phpstorm radphp zend studio widget toolkit php-gtk php-qt wxphp category commons v t e web interfaces server-side protocols cgi scgi fcgi ajp wsrp websocket server apis c nsapi c asapi c isapi com asp java servlet o container cli owin aspnet handler python wsgi ruby rack javascript jsgi perl psgi lua wsapi portlet o container apache modules modjk modlisp modmono modparrot modperl modphp modproxy modpython modwsgi modruby phusion passenger topics web resource vs web service open api webhook application server o comparison scripting client-side browser apis c npapi o liveconnect o xpconnect c npruntime c ppapi o nacl activex bho xbap webassembly web apis w3c audio canvas cors dom dom events file geolocation indexeddb sse svg video webrtc websocket web messaging web storage web worker xmlhttprequest khronos webcl webgl others gears web sql database formerly w3c topics ajax vs dhtml mashup web idl scripting topics dynamic web page open web platform rich internet application web application v t e programming languages comparison timeline history assembly basic c c++ c cobol fortran go haskell java javascript js lisp lua objective-c pascal perl php python ruby shell smalltalk swift visual basic net vbnet more category comparison lists o alphabetical o categorical o generational o non-english-based v t e free open-source software general alternative terms for free software comparison open-source closed-source software comparison source code hosting facilities free software free software project directories gratis versus libre long-term support open-source software open-source software development outline software packages audio bioinformatics codecs collaboration configuration management device drivers o graphics o wireless geophysics health mathematics operating systems programming languages routing statistics television video games web applications o content management systems o e-commerce word processors android apps ios apps commercial trademarked formerly proprietary community free software movement history open-source software movement organizations events licenses apache apsl artistic beerware boost bsd cc0 cddl epl gnu gpl gnu lgpl isc mit mpl ms-pl/rl wtfpl zlib license types standards comparison free open-source software licenses contributor license agreement copyfree copyleft debian free software guidelines definition free cultural works free license free software definition open source definition open-source license permissive free software licence public domain viral license challenges binary blob digital rights management hardware restrictions license proliferation mozilla software rebranding proprietary software sco/linux controversies secure boot software patents software security trusted computing related topics cathedral bazaar forking microsoft open specification promise revolution os book category commons portal authority control gnd 4546126-0 retrieved from https//enwikipediaorg/w/indexphptitle=php&oldid=751595359 categories class-based programming languages cross-platform software dynamically typed programming languages filename extensions free compilers interpreters high-level programming languages internet terminology object-oriented programming languages php software php procedural programming languages programming languages created scripting languages software using php license text-oriented programming languages hidden categories webarchive template wayback links good articles pages using deprecated image syntax articles containing potentially dated statements from all articles containing potentially dated statements articles containing potentially dated statements from july articles containing potentially dated statements from articles containing potentially dated statements from april articles containing potentially dated statements from october articles containing potentially dated statements from february articles containing potentially dated statements from january spoken articles articles with haudio microformats articles with dmoz links wikipedia articles with gnd identifiers articles with example code navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikibooks wikiversity languages afrikaans alemannisch العربية aragonés azərbaycanca বাংলা bân-lâm-gú беларуская беларуская тарашкевіца‎ български boarisch bosanski brezhoneg català cebuano čeština cymraeg dansk deutsch eesti ελληνικά español esperanto euskara فارسی français galego ગુજરાતી 客家語/hak-kâ-ngî 한국어 հայերեն हिन्दी hrvatski ido bahasa indonesia íslenska italiano עברית basa jawa ಕನ್ನಡ ქართული қазақша kurdî кыргызча latina latviešu lëtzebuergesch lietuvių magyar македонски malagasy മലയാളം मराठी bahasa melayu mìng-dĕ̤ng-ngṳ̄ монгол မြန်မာဘာသာ nederlands नेपाली 日本語 нохчийн norsk bokmål norsk nynorsk occitan oʻzbekcha/ўзбекча ਪੰਜਾਬੀ ភាសាខ្មែរ plattdüütsch polski português română русский саха тыла संस्कृतम् scots shqip සිංහල simple english slovenčina slovenščina کوردیی ناوەندی српски / srpski srpskohrvatski / српскохрватски suomi svenska tagalog தமிழ் taqbaylit తెలుగు ไทย тоҷикӣ türkçe türkmençe українська اردو tiếng việt west-vlams winaray wolof 吴语 ייִדיש 粵語 žemaitėška 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 