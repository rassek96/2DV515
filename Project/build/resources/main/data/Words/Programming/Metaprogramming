metaprogramming from wikipedia free encyclopedia jump navigation search this article about computer programming technique for management technique see charles simonyi programming paradigms action agent-oriented array-oriented automata-based concurrent computing o relativistic programming data-driven declarative contrast imperative o constraint + constraint logic concurrent constraint logic o dataflow + flow-based + cell-oriented spreadsheets + reactive o functional + functional logic + purely functional o logic + abductive logic + answer set + concurrent logic + functional logic + inductive logic dynamic end-user programming event-driven o service-oriented o time-driven expression-oriented feature-oriented function-level contrast value-level generic imperative contrast declarative o literate o procedural inductive programming language-oriented o natural language programming o discipline-specific o domain-specific o grammar-oriented + dialecting o intentional metaprogramming o automatic o reflective + attribute-oriented o homoiconic o template + policy-based non-structured contrast structured o array nondeterministic parallel computing o process-oriented point-free style o concatenative semantic structured contrast non-structured o block-structured o modular contrast monolithic o object-oriented + actor-based + class-based + concurrent + prototype-based + by separation concerns aspect-oriented role-oriented subject-oriented o recursive value-level contrast function-level probabilistic concept v t e this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed august learn how when remove this template message metaprogramming art writing computer programs with ability treat programs their data means that program could be designed read generate analyse transform other programs even modify itself while running some cases this allows programmers minimize number lines code express solution hence reducing development time gives programs greater flexibility efficiently handle new situations without recompilation one types metaprogramming involves only writing their program using generic programming metaprogramming used move computations from run-time compile-time enable self-adapting code generate code using compile time computations language which metaprogram written called metalanguage language programs that are manipulated called object language ability programming language be its own metalanguage called reflection reflexivity reflection valuable language feature facilitate metaprogramming having programming language itself first-class data type lisp prolog snobol rebol also very useful this known homoiconicity generic programming invokes metaprogramming facility within language those languages supporting metaprogramming usually works one three ways first way expose internals run-time engine programming code through application programming interfaces apis like microsoft il emiter second approach dynamic execution expressions that contain programming commands often composed from strings but can also be from other methods using arguments context like javascript thus programs can write programs although both approaches can be used same language most languages tend lean toward one other third way step outside language entirely general purpose program transformation systems such compilers which accept language descriptions can carry out arbitrary transformations on those languages are direct implementations general metaprogramming this allows metaprogramming be applied virtually any target language without regard whether that target language has any metaprogramming abilities its own contents approaches o statically typed functional languages o template metaprogramming o staged meta-programming o macro systems + ibm/360 assembler examples challenges metaprogramming implementations see also notes external links approaches statically typed functional languages usage dependent types allows proving that generated code never invalid template metaprogramming main article template metaprogramming c x macros c++ templates staged meta-programming metaml metaocaml macro systems scheme hygienic macros macroml template haskell ibm/360 assembler ibm/360 derivatives had powerful assembler macro facilities that were often used generate complete programs sections programs for different operating systems for instance macros provided with cics transaction processing system had assembler macros that generated cobol statements pre-processing step 'metaclass' python smalltalk-80 ruby objective c examples simple example metaprogram this posix shell script which example generative programming /bin/sh metaprogram echo '/bin/sh' >program for i $seq do echo echo $i >> program done chmod +x program this script program generates new 993-line program that prints out numbers 1–992 this only illustration how use code write more code not most efficient way print out list numbers nonetheless programmer can write execute this metaprogram less than minute will have generated exactly lines code that amount time quine special kind metaprogram that produces its own source code its output not all metaprogramming involves generative programming if programs are modifiable at runtime if incremental compilation available such c forth frink groovy javascript lisp lua perl php python rebol ruby smalltalk tcl then techniques can be used perform metaprogramming without actually generating source code lisp probably quintessential language with metaprogramming facilities both because its historical precedence because simplicity power its metaprogramming lisp metaprogramming unquote operator typically comma introduces code that evaluated at program definition time rather than at run time see self-evaluating forms quoting lisp metaprogramming language thus identical host programming language existing lisp routines can be directly reused for metaprogramming if desired this approach has been implemented other languages by incorporating interpreter program which works directly with program’s data there are implementations this kind for some common high-level languages such remobjects’ pascal script for object pascal one style metaprogramming employ domain-specific languages dsls fairly common example using dsls involves generative metaprogramming lex yacc two tools used generate lexical analyzers parsers let user describe language using regular expressions context-free grammars embed complex algorithms required efficiently parse language challenges metaprogramming we have seen that metaprogramming can help us give more flexibility configurability at runtime however wrong use metaprogramming can result unwarranted unexpected errors some common problems which can occur due wrong use metaprogramming are inability compiler identify missing configuration parameters invalid incorrect data can result unknown exception different results implementations asf+sdf meta environment dms software reengineering toolkit joose javascript jetbrains mps moose perl nemerle rascal metaprogramming language stratego/xt template haskell see also list program transformation systems see also computer science portal information technology portal aspect weaver comparison code generation tools compile-time reflection genetic programming inferential programming instruction set simulator intentional programming interpreted language machine learning metacompiler metaobject partial evaluation self-interpreter self-modifying code source code generation o source-to-source compilation automated translation from one programming language another template metaprogramming notes course on program analysis transformation by prof harald sondergaardcourse on program analysis transformation retrieved september czarnecki krzysztof eisenecker ulrich w generative programming isbn 0-201-30977-7 for example instanceeval ruby takes string anonymous function rdoc for class basicobject ruby - instanceeval retrieved december chlipala adam june ur statically-typed metaprogramming with type-level record computation pdf acm sigplan notices pldi '10 122–133 doi 101145/18090281806612 retrieved august missing empty |title= help external links c2com wiki metaprogramming article meta programming on program transformation wiki code generation vs metaprogramming solenoid first metaprogramming framework for exist-db art enterprise metaprogramming v t e types programming languages actor-based array aspect-oriented class-based concatenative concurrent data-structured dataflow declarative domain-specific dynamic esoteric event-driven extensible functional imperative logic macro metaprogramming+multi-paradigm object-based object-oriented pipeline procedural prototype-based reflective rule-based scripting synchronous templating assembly compiled interpreted machine low-level high-level very high-level first generation second generation third generation fourth generation fifth generation non-english-based visual retrieved from https//enwikipediaorg/w/indexphptitle=metaprogramming&oldid=752079415 categories programming paradigms metaprogramming hidden categories pages with citations lacking titles pages with citations having bare urls articles needing additional references from august all articles needing additional references all articles with unsourced statements articles with unsourced statements from january articles with unsourced statements from september articles with unsourced statements from august navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages български čeština deutsch eesti ελληνικά español esperanto français 한국어 հայերեն nederlands 日本語 norsk bokmål polski português română русский српски / srpski ไทย українська tiếng việt 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 