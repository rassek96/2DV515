command-line interface from wikipedia free encyclopedia jump navigation search not be confused with text-based user interface this article has multiple issues please help improve discuss these issues on talk page learn how when remove these template messages this article includes list references but its sources remain unclear because has insufficient inline citations please help improve this article by introducing more precise citations january learn how when remove this template message this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed january learn how when remove this template message learn how when remove this template message screenshot sample bash session gnome terminal fedora screenshot windows powershell running on windows vista command-line interface command language interpreter cli also known command-line user interface console user interface character user interface cui means interacting with computer program where user client issues commands program form successive lines text command lines cli was primary means interaction with most computer systems until introduction video display terminal mid-1960s continued be used throughout 1970s 1980s on openvms unix systems personal computer systems including ms-dos cp/m apple dos interface usually implemented with command line shell which program that accepts commands text input converts commands appropriate operating system functions command-line interfaces computer operating systems are less widely used by casual computer users who favor graphical user interfaces alternatives command line include but are not limited text user interface menus see ibm aix smit for example keyboard shortcuts various other desktop metaphors centered on pointer usually controlled with mouse examples this include windows versions os shell that runs dos dosshell mouse systems powerpanel command-line interfaces are often preferred by more advanced computer users they often provide more concise powerful means control program operating system programs with command-line interfaces are generally easier automate via scripting command line interfaces for software other than operating systems include number programming languages such tcl/tk php others well utilities such compression utilities winzip ultimatezip some ftp ssh/telnet clients contents advantages disadvantages operating system command-line interfaces application command-line interfaces o cli software o hybrid software history usage anatomy shell cli o cli resource protection o command prompt o arguments + command-line option abbreviating commands option conventions dos windows os/2 option conventions unix-like systems options conventions other systems o built-in usage help o command description syntax o space character command-line interpreter o early history o modern usage operating system shell scripting other command-line interfaces see also o concepts o uses o misc references external links advantages screenshot apple computer's commandshell a/ux requires fewer resources concise powerful expert-friendly easier automate via scripting disadvantages unintuitive commands not obvious not visually rich beginner-unfriendly operating system command-line interfaces operating system os command line interfaces are usually distinct programs supplied with operating system program that implements such text interface often called command-line interpreter command processor shell examples command-line interpreters include dec's digital command language dcl openvms rsx-11 various unix shells sh ksh csh tcsh bash etc historical cp/m ccp ms-dos/ibm-dos/dr-dos 's commandcom well os/2 windows cmdexe programs latter groups being based heavily on dec's rsx-11 rsts clis under most operating systems possible replace default shell program with alternatives examples include 4dos for dos 4os2 for os/2 4nt take command for windows although term 'shell' often used describe command-line interpreter strictly speaking 'shell' can be any program that constitutes user-interface including fully graphically oriented ones for example default windows gui shell program named explorerexe defined shell=explorerexe line winini configuration file these programs are shells but not clis application command-line interfaces application programs opposed operating systems may also have command line interfaces application program may support none any all these three major types command line interface mechanisms parameters most operating systems support means pass additional information program when launched when program launched from os command line shell additional text provided along with program name passed launched program interactive command line sessions after launch program may provide operator with independent means enter commands form text os inter-process communication most operating systems support means inter-process communication for example standard streams named pipes command lines from client processes may be redirected cli program by one these methods cli software some applications support only cli presenting cli prompt user acting upon command lines they are entered some examples cli-only applications are debug diskpart ed edlin fdisk ping hybrid software some computer programs support both cli gui some cases gui simply wrapper around separate cli executable file other cases program may provide cli optional alternative its gui clis guis often support different functionality for example all features matlab numerical analysis computer program are available via cli whereas matlab gui exposes only subset features early sierra games like first three king's quest games 1984–1986 used commands from internal command line move character around graphic window history command-line interface evolved from form dialog once conducted by humans over teleprinter tty machines which human operators remotely exchanged information usually one line text at time early computer systems often used teleprinter machines means interaction with human operator computer became one end human-to-human teleprinter model so instead human communicating with another human over teleprinter human communicated with computer time actual mechanical teleprinter was replaced by glass tty keyboard screen but emulating teleprinter then by smart terminal where microprocessor terminal could address all screen rather than only print successive lines microcomputer revolution replaced traditional – minicomputer + terminals – time sharing architecture hardware terminals were replaced by terminal emulators — pc software that interpreted terminal signals sent through pc's serial ports these were typically used interface organization's new pc's with their existing mini- mainframe computers connect pc pc some these pcs were running bulletin board system software early operating system clis were implemented part resident monitor programs could not easily be replaced concept implementing shell replaceable component usually attributed multics early microcomputers themselves were based on command-line interface such cp/m ms-dos applesoft basic throughout 1980s 1990s—especially after introduction apple macintosh microsoft windows—command line interfaces were replaced popular usage by graphical user interface command line remains use however by system administrators other advanced users for system administration computer programming batch processing november microsoft released version windows powershell formerly codenamed monad which combined features traditional unix shells with their proprietary object-oriented net framework mingw cygwin are open-source packages for windows that offer unix-like cli microsoft provides mks inc's ksh implementation mks korn shell for windows through their services for unix add-on since macintosh operating system based on variation unix called darwin on these computers users can access unix-like command-line interface called terminal found applications utilities folder this terminal uses bash by default screenshot matlab command-line interface gui usage this section does not cite any sources please help improve this section by adding citations reliable sources unsourced material may be challenged removed april learn how when remove this template message cli used whenever large vocabulary commands queries coupled with wide arbitrary range options can be entered more rapidly text than with pure gui this typically case with operating system command shells clis are also used by systems with insufficient resources support graphical user interface some computer language systems such python forth lisp rexx many dialects basic provide interactive command-line mode allow for rapid evaluation code clis are often used by programmers system administrators engineering scientific environments by technically advanced personal computer users clis are also popular among people with visual disability since commands responses can be displayed using refreshable braille displays anatomy shell cli this section needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed july learn how when remove this template message general pattern os command line interface prompt command param1 param2 param3 paramn prompt - generated by program provide context for client command — provided by client commands are usually one three classes internal — recognized processed by command line interpreter itself not dependent upon any external executable file included — separate executable file generally considered part operating environment always included with os external — external executable files not part basic os but added by other parties for specific purposes applications param1 paramn — optional parameters provided by client format meaning parameters depends upon command issued case included external commands values parameters are delivered program specified by command launched by os parameters may be either arguments options this example delimiters between command line elements are whitespace characters end-of-line delimiter newline delimiter this widely used but not universal convention for command-line interfaces cli can generally be considered consisting syntax semantics syntax grammar that all commands must follow case operating systems os ms-dos unix each define their own set rules that all commands must follow case embedded systems each vendor such nortel juniper networks cisco systems defines their own proprietary set rules that all commands within their cli conform these rules also dictate how user navigates through system commands semantics define what sort operations are possible on what sort data these operations can be performed how grammar represents these operations data—the symbolic meaning syntax two different clis may agree on either syntax semantics but only when they agree on both that they can be considered sufficiently similar allow users use both clis without needing learn anything well enable re-use scripts simple cli will display prompt accept command line typed by user terminated by enter key then execute specified command provide textual display results error messages advanced clis will validate interpret parameter-expand command line before executing specified command optionally capture redirect its output unlike button menu item gui command line typically self-documenting stating exactly what user wants done addition command lines usually include many defaults that can be changed customize results useful command lines can be saved by assigning character string alias represent full command several commands can be grouped perform more complex sequence – for instance compile program install run — creating single entity called command procedure script which itself can be treated command these advantages mean that user must figure out complex command series commands only once because they can be saved be used again commands given cli shell are often one following forms dosomething how tofiles dosomething how sourcefile destinationfile dosomething how outputfile dosomething how | dosomething how | dosomething how > outputfile where dosomething effect verb how adverb for example should command be executed verbosely quietly tofiles object objects typically one more files on which command should act > third example redirection operator telling command-line interpreter send output command not its own standard output screen but named file this will overwrite file using >> will redirect output append file another redirection operator vertical bar | which creates pipeline where output one command becomes input next command cli resource protection one can modify set available commands by modifying which paths appear path environment variable under unix commands also need be marked executable files directories path variable are searched order they are given by re-ordering path one can run eg \os2\mdos\eexe instead \os2\eexe when default opposite renaming executables also works people often rename their favourite editor edit for example command line allows one restrict available commands such access advanced internal commands windows cmdexe does this often shareware programs will limit range commands including printing command 'your administrator has disabled running batch files' from prompt some clis such those network routers have hierarchy modes with different set commands supported each mode set commands are grouped by association with security system interface etc these systems user might traverse through series sub-modes for example if cli had two modes called interface system user might use command interface enter interface mode at this point commands from system mode may not be accessible user exits interface mode enters system mode command prompt command prompt redirects here for windows component named command prompt see cmdexe command prompt just prompt sequence one more characters used command-line interface indicate readiness accept commands its intent literally prompt user take action prompt usually ends with one characters $ % > often includes other information such path current working directory hostname on many unix derivative systems common for prompt end $ % if user normal user but if user superuser root unix terminology common for prompts be modifiable by user depending on environment they may include colors special characters other elements like variables functions for current time user shell number working directory order for instance make prompt more informative visually pleasing distinguish sessions on various machines indicate current level nesting commands on some systems special tokens definition prompt can be used cause external programs be called by command-line interpreter while displaying prompt dos's commandcom windows nt's cmdexe prompt modifiable by issuing prompt command by directly changing value corresponding %prompt% environment variable default most modern systems c\> style obtained for instance with prompt $p$g default older dos systems c> obtained by just prompt although on some systems this produces newer c\> style unless used on floppy drives b on those systems prompt $n$g can be used override automatic default explicitly switch older style on many unix systems $ps1 variable can be used although other variables also may affect prompt depending on what shell being used bash shell prompt form user@host workdir $ could be set by issuing command export ps1=' \u@\h \w $' zsh $rprompt variable controls optional prompt on right hand side display not real prompt that location text entry does not change used display information on same line prompt but right justified risc os command prompt symbol thus oscli commands are often referred star commands also possible access same commands from other command lines such bbc basic command line by preceding command with arguments ms dos command line illustrating parsing into command arguments command-line argument parameter item information provided program when started program can have many command-line arguments that identify sources destinations information that alter operation program when command processor active program typically invoked by typing its name followed by command-line arguments if any for example unix unix-like environments example command-line argument rm files files command-line argument which tells program rm remove file files some programming languages such c c++ java allow program interpret command-line arguments by handling them string parameters main function other languages such python expose these arguments global variables unix-like operating systems single hyphen-minus by itself usually special value specifying that program should handle data coming from standard input send data standard output command-line option command-line option simply option also known flag switch modifies operation command effect determined by command's program options follow command name on command line separated by spaces space before first option not always required for example dir/ dir / have same effect dos list dir command's options whereas dir --help many versions unix does require option be preceded by at least one space case-sensitive format options varies widely between operating systems most cases syntax by convention rather than operating system requirement entire command line simply string passed program which can process any way programmer wants so long interpreter can tell where command name ends its arguments options begin few representative samples command-line options all relating listing files directory illustrate some conventions operating system command valid alternative notes openvms directory/owner dir /owner instruct directory command also display ownership files note directory command name not case sensitive can be abbreviated few letters required remain unique dos dir/q/os d dir /q d /os display ownership files whose names begin with d sorted by size smallest first note spaces around argument d are required unix-like systems ls -ls d ls -s -l d display long format files directories beginning with d but not d sorted by size largest first note spaces are required around all arguments options but some can be run together eg -ls same -l -s data general rdos cli list/e/s 04-26-80/b list /s/e 4-26-80/b list every attribute for files created before april note /b at end date argument local switch that modifies meaning that argument while /s /e are global switches ie apply whole command abbreviating commands multics command-line options subsystem keywords may be abbreviated this idea appears derive from pl/i programming language with its shortened keywords eg strg for stringrange dcl for declare for example multics forum subsystem -longsubject parameter can be abbreviated -lgsj also common for multics commands be abbreviated typically corresponding initial letters words that are strung together with underscores form command names such use did for deleteiacldir some other systems abbreviations are automatic such permitting enough first characters command name uniquely identify such su abbreviation for superuser while others may have some specific abbreviations pre-programmed eg md for mkdir commandcom user-defined via batch scripts aliases eg alias md mkdir tcsh see also tab completion option conventions dos windows os/2 on dos os/2 windows different programs called from their commandcom cmdexe internal their commands may use different syntax within same operating system for example options may be indicated by either switch characters - / either may be allowed see below they may may not be case-sensitive sometimes options their arguments are run together sometimes separated by whitespace sometimes by character typically = thus prog -ffilename prog -f filename prog -ffilename prog -f=filename some programs allow single-character options be combined others do not switch -fa may mean same -f -a may be incorrect may even be valid but different parameter dos os/2 windows forward slash / most prevalent although hyphen-minus also sometimes used many versions dos ms-dos/pc dos 2xx higher all versions dr-dos since well pts-dos embedded dos freedos rxdos switch character sometimes abbreviated switchar switchchar be used defined by value returned from system call int 21h/ah=37h default character returned by this api / but can be changed hyphen-minus on above-mentioned systems except for datalight rom-dos ms-dos/pc dos higher which always return / from this call unless one many available tsrs reenable switchar feature loaded some these systems ms-dos/pc dos 2xx dos plus dr-dos higher pts-dos embedded dos freedos rxdos setting can also be pre-configured by switchar directive configsys embedded dos provides switch command for same purpose whereas 4dos allows setting be changed via setdos /wn under dr-dos if setting has been changed from / first directory separator \ display prompt parameter $g will change forward slash / which also valid directory separator dos flexos os os os/2 windows thereby serving visual clue indicate change some versions dr-dos commandcom also support prompt token $/ display current setting commandcom since dr-dos 4dos also provide pseudo-environment variable named %/% allow portable batchjobs be written several external dr-dos commands additionally support environment variable %switchar% override system setting however many programs are hardwired use / only rather than retrieving switch setting before parsing command line arguments very small number mainly ports from unix-like systems are programmed accept - even if switch character not set for example netstat ping supplied with windows will accept / option list available options yet list will specify - convention option conventions unix-like systems this section does not cite any sources please help improve this section by adding citations reliable sources unsourced material may be challenged removed april learn how when remove this template message unix-like systems ascii hyphen-minus begins options new gnu convention use two hyphens then word eg --create identify option's use while old convention still available option for frequently-used options use one hyphen then one letter eg -c if one hyphen followed by two more letters may mean two options are being specified may mean second subsequent letters are parameter such filename date for first option two hyphen-minus characters without following letters -- may indicate that remaining arguments should not be treated options which useful for example if file name itself begins with hyphen if further arguments are meant for inner command eg sudo double hyphen-minuses are also sometimes used prefix long options where more descriptive option names are used this common feature gnu software getopt function program getopts command are usually used for parsing command-line options unix command names arguments options are case-sensitive except few examples mainly where popular commands from other operating systems have been ported unix options conventions other systems flexos os os use - cp/m typically used this section does not cite any sources please help improve this section by adding citations reliable sources unsourced material may be challenged removed april learn how when remove this template message see also help command one criticisms cli lack cues user available actions contrast guis usually inform user available actions with menus icons other visual cues overcome this limitation many cli programs display brief summary its valid parameters typically when invoked with no arguments one - -h -h / /h /h -help --help however entering program name without parameters hope that will display usage help can be hazardous some programs scripts execute without further notice although desirable at least for help parameter programs may not support all option lead-in characters exemplified above under dos where default command line option character can be changed from / - programs may query switchar api order determine current setting so if program not hard-wired support them all user may need know current setting even be able reliably request help if switchar has been changed - therefore / character accepted alternative path delimiter also at dos command line programs may misinterpret options like /h /h paths rather than help parameters however if given first only parameter most dos programs will by convention accept request for help regardless current switchar setting some cases different levels help can be selected for program some programs supporting this allow give verbosity level optional argument help parameter /h1 /h2 etc they give just short help on help parameters with question mark longer help screen for other help options depending on program additional more specific help on accepted parameters sometimes available by either providing parameter question argument help parameter vice versa /hw /w assuming /w would be another parameter supported by program similar fashion help parameter but much less common some programs provide additional information about themselves like mode status version author license contact information when invoked with about parameter like - / -about --about since characters typically also serve other purposes at command line they may not be available all scenarios therefore they should not be only options access corresponding help information if more detailed help necessary than provided by program's built-in internal help many systems support dedicated external help command command similar which accepts command name calling parameter will invoke external help system dr-dos family typing / /h at commandcom prompt instead command itself will display dynamically generated list available internal commands 4dos ndos support same feature by typing at prompt which also accepted by newer versions dr-dos commandcom internal commands can be individually disabled reenabled via setdos /i addition this some newer versions dr-dos commandcom also accept % command display list available built-in pseudo-environment variables besides their purpose quick help reference this can be used batchjobs query facilities underlying command line processor command description syntax built-in usage help man pages commonly employ small syntax describe valid command form angle brackets for required parameters ping square brackets for optional parameters mkdir ellipses for repeated items cp vertical bars for choice items netstat {-t|-u} notice that these characters have different meanings than when used directly shell angle brackets may be omitted when confusing parameter name with literal string not likely space character many areas computing but particularly command line space character can cause problems has two distinct incompatible functions part command parameter parameter name separator ambiguity can be prevented either by prohibiting embedded spaces file directory names first place for example by substituting them with underscores by enclosing name with embedded spaces between quote characters using escape character before space usually backslash \ for example long path/long program name parameter one parameter two ambiguous program name part program name two parameters however longpath/longprogramname parameterone parametertwo longpath/longprogramname parameterone parametertwo long path/long program name parameter one parameter two long\ path/long\ program\ name parameter\ one parameter\ two are not ambiguous unix-based operating systems minimize use embedded spaces minimize need for quotes microsoft windows one often has use quotes because embedded spaces such directory names are common command-line interpreter see also list command-line interpreters although most users think shell interactive command interpreter really programming language which each statement runs command because must satisfy both interactive programming aspects command execution strange language shaped much by history by design — brian kernighan & rob pike terms command-line interpreter command line shell command language interpreter identical abbreviation cli are applied computer programs designed interpret sequence lines text which may be entered by user read from file another kind data stream context interpretation usually one given operating system programming language command-line interpreters allow users issue various commands very efficient often terse way this requires user know names commands their parameters syntax language that interpreted unix mechanism os/2 extproc command facilitate passing batch files external processors one can use these mechanisms write specific command processors for dedicated uses process external data files which reside batch files many graphical interfaces such os/2 presentation manager early versions microsoft windows use command-lines call helper programs open documents programs commands are stored graphical shell files like registry os/2 os2userini file early history earliest computers did not support interactive input/output devices often relying on sense switches lights communicate with computer operator this was adequate for batch systems that ran one program at time often with programmer acting operator this also had advantage low overhead since lights switches could be tested set with one machine instruction later single system console was added allow operator communicate with system from 1960s onwards user interaction with computers was primarily by means command-line interfaces initially on machines like teletype model asr but then on early crt-based computer terminals such vt52 all these devices were purely text based with no ability display graphic pictures for business application programs text-based menus were used but for more general interaction command line was interface around louis pouzin introduced concept name shell multics building on earlier simpler facilities compatible time-sharing system ctss from early 1970s unix operating system adapted concept powerful command-line environment introduced ability pipe output one command input another unix also had capability save re-run strings commands shell scripts which acted like custom commands command-line was also main interface for early home computers such commodore pet apple ii bbc micro – almost always form basic interpreter when more powerful business oriented microcomputers arrived with cp/m later ms-dos computers such ibm pc command-line began borrow some syntax features unix shells such globbing piping output command-line was first seriously challenged by parc gui approach used apple lisa apple macintosh few computer users used guis such geos windows but majority ibm pc users did not replace their commandcom shell with gui until windows was released modern usage operating system shell while most computer users now use gui almost exclusively more advanced users have access powerful command-line environments default vax/vms command shell using dcl language has been ported windows systems at least three times including pc-dcl acceler8 dcl lite ms-dos has been ported linux type systems unix command shells have been ported vms ms-dos/windows windows nt types operating systems commandcom windows nt cmdexe have been ported windows ce presumably works on microsoft windows nt embedded windows resource kit windows services for unix include korn bourne shells along with perl interpreter services unix contains active state activeperl later versions interix for versions shell compiled by microsoft ibm os/2 has cmdexe processor this copies commandcom commands with extensions rexx different interpreter cmdexe along with commandcom are part windows nt stream operating systems yet another cmdexe stripped-down shell for windows ce ms-dos type interpreter called pocketdos has been ported windows ce machines most recent release almost identical ms-dos can also run windows qbasic other development tools 4nt 4dos latest release includes several shells namely ms-dos pc-dos dr dos others pocketconsole windows nt shell for windows ce that much like 4nt windows users have cli environment named windows command prompt which might use cscript interface alternate programs powershell provides command-line interface but its applets are not written shell script implementations unix shell are also available part posix sub-system cygwin mks toolkit uwin hamilton c shell other software packages available shells for these interoperability tools include csh ksh sh bash rsh tclsh less commonly zsh ysh psh commandcom 4dos windows nt cmdexe 4nt tcc os/2 cmdexe 4os2 others based on them are enhanced shells which can be replacement for native shell means enhancement default shell implementations php have shell for interactive use called php-cli standard tcl/tk has two interactive shells tclsh wish that latter being gui version python ruby lua xlnt other interpreters also have command shells for interactive use freebsd uses tcsh its default interactive shell for superuser apple macos many linux distributions have bash implementation unix shell early versions macos used tcsh default shell embedded linux other embedded unix-like devices often use ash implementation unix shell part busybox android uses mksh shell shell derived from ash older versions with commands from separate toolbox routers with cisco ios junos many others are commonly configured from command line scripting most command-line interpreters support scripting various extents they are after all interpreters interpreted programming language albeit many cases language unique particular command-line interpreter they will interpret scripts variously termed shell scripts batch files written language that they interpret some command-line interpreters also incorporate interpreter engines other languages such rexx addition their own allowing executing scripts those languages directly within command-line interpreter itself conversely scripting programming languages particular those with eval function such rexx perl python ruby jython can be used implement command-line interpreters filters for few operating systems most notably dos such command interpreter provides more flexible command line interface than one supplied other cases such command interpreter can present highly customised user interface employing user interface input/output facilities language other command-line interfaces command line provides interface between programs well user this sense command line alternative dialog box editors data-bases present command line which alternate command processors might run on other hand one might have options on command line which opens dialog box latest version 'take command' has this feature dbase used dialog box construct command lines which could be further edited before use programs like basic diskpart edlin qbasic all provide command-line interfaces some which use system shell basic modeled on default interface for 8-bit intel computers calculators can be run command-line dialog interfaces emacs provides command line interface form its minibuffer commands arguments can be entered using emacs standard text editing support output displayed another buffer there are number pre-mouse games like adventure king's quest 1-3 which relied on user typing commands at bottom screen one controls character by typing commands like 'get ring' 'look' program returns text which describes how character sees makes action happen text adventure hitchhiker's guide galaxy piece interactive fiction based on douglas adam's book same name teletype-style command-line game most notable these interfaces standard streams interface which allows output one command be passed input another text files can serve either purpose well this provides interfaces piping filters redirection under unix devices are files too so normal type file for shell used for stdinstdout stderr tty device file another command-line interface allows shell program launch helper programs either launch documents start program command processed internally by shell then passed on another program launch document graphical interface windows os/2 rely heavily on command-lines passed through other programs – console graphical which then usually process command line without presenting user-console programs like os/2 e editor some other ibm editors can process command-lines normally meant for shell output being placed directly document window web browser's url input field can be used command line can be used launch web apps access browser configuration well perform search google which has been called command line internet will perform domain-specific search when detects search parameters known format this functionality present whether search triggered from browser field one on google's web site see also comparison command shells list command-line interpreters orthodox file manager also known command-based file manager concepts batch processing o batch file console application interpreter directive read-eval-print loop shell computing scripting language o shell script uses clig computer terminal o terminal emulator run command misc graphical user interface § comparison other interfaces beginning was command line natural user interface references text mode programs cui console user interface wine user guide retrieved sep unix shells notion having replaceable command shell rather than monitor tightly integrated with os kernel tends be attributed multics gnu bash reference microsoft windows command shell overview risc os user guide part outside desktop page published by acorn computers limited edition part number issue march conventions for describing commands on unix-like operating systems open group base specifications issue chapter utility argument syntax open group retrieved man-pages7 – linux conventions miscellany manual conventions for describing commands on ms-dos-like operating systems notable difference windows server r2 documentation uses italic letters for information that user must supply while server documentation uses angle brackets italics can not be displayed by internal help command while there no problem with angle brackets command shell overview windows server product help microsoft retrieved command-line syntax key windows server r2 technet library microsoft retrieved brian w kernighan rob pike unix programming environment prentice-hall with exception ascii art pouzin louis origin shell multiciansorg retrieved sep remembering windows 95's launch years later history windows windows posix shell compatibility via finder applications utilities terminal android/platform/external/mksh/ android sh source android toolbox source cisco ios configuration fundamentals configuration guide release cisco october using command-line interface cisco ios command-line interface cli primary user interface software that you use whenever you access router google strange goodness external links roots dos david hunter softalk for ibm personal computer march archived at patersontechcom since v t e operating systems general advocacy comparison forensic engineering history hobbyist development list timeline usage share kernel architectures exokernel hybrid microkernel monolithic rump kernel unikernel components device driver loadable kernel module microkernel user space process management concepts context switch interrupt ipc process process control block thread time-sharing scheduling algorithms computer multitasking fixed-priority preemptive multilevel feedback queue preemptive round-robin shortest job next memory management resource protection bus error general protection fault memory protection paging protection ring segmentation fault virtual memory storage access file systems boot loader defragmentation device file file attribute inode journal partition virtual file system virtual tape library list amigaos android beos bsd chrome os cp/m dos hurd haiku illumos ios linux macintosh o classic mac os o macos minix morphos music/sp nos openvms orvyl os/2 osv pick qnx reactos risc os rsts/e rsx-11 rt-11 solaris tops-10/tops-20 tpf unix visi on vm/cms vs/9 windows xinu z/os miscellaneous concepts api computer network hal live cd live usb os shell o cli o gui o tui o vui pxe retrieved from https//enwikipediaorg/w/indexphptitle=command-lineinterface&oldid=751957638 categories user interfaces user interface techniques software architecture history human–computer interaction computing commands hidden categories articles lacking in-text citations from january all articles lacking in-text citations articles needing additional references from january all articles needing additional references use dmy dates from august all articles lacking reliable references articles lacking reliable references from april articles needing additional references from april articles needing additional references from july all articles with unsourced statements articles with unsourced statements from april wikipedia articles needing clarification from may articles lacking reliable references from september all accuracy disputes articles with disputed statements from september navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages afrikaans العربية azərbaycanca беларуская български català čeština dansk deutsch eesti español فارسی français galego 한국어 bahasa indonesia íslenska italiano עברית қазақша magyar മലയാളം bahasa melayu nederlands 日本語 norsk bokmål polski português română русский slovenčina slovenščina српски / srpski suomi svenska türkçe українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 