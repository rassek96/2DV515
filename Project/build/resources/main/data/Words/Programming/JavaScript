javascript from wikipedia free encyclopedia jump navigation search not be confused with java programming language java software platform javanese script javascript paradigm multi-paradigm scripting object-oriented prototype-based imperative functional event-driven designed by brendan eich developer netscape communications corporation mozilla foundation ecma international first appeared may years ago stable release ecmascript / june months ago typing discipline dynamic duck major implementations v8 javascriptcore spidermonkey chakra influenced by lua scheme perl self java c python awk hypertalk influenced actionscript atscript coffeescript dart jscript net livescript objective-j opa perl qml typescript javascript at wikibooks javascript filename extension js internet media type application/javascript text/javascript obsolete uniform type identifier uti comnetscapejavascript-source type format scripting language part series on javascript javascript syntax javascript library unobtrusive javascript javascript engine lists frameworks libraries ajax frameworks javascript web frameworks comparison javascript frameworks list javascript libraries javascript unit testing frameworks javascript object notation see also ecmascript v t e computing javascript /ˈdʒævəˌskrɪpt/ high-level dynamic untyped interpreted programming language has been standardized ecmascript language specification alongside html css javascript one three core technologies world wide web content production majority websites employ all modern web browsers support without need for plug-ins javascript prototype-based with first-class functions making multi-paradigm language supporting object-oriented imperative functional programming styles has api for working with text arrays dates regular expressions but does not include any i/o such networking storage graphics facilities relying for these upon host environment which embedded although there are strong outward similarities between javascript java including language name syntax respective standard libraries two are distinct languages differ greatly their design javascript was influenced by programming languages such self scheme javascript also used environments that are not web-based such pdf documents site-specific browsers desktop widgets newer faster javascript virtual machines vms platforms built upon them have also increased popularity javascript for server-side web applications on client side developers have traditionally implemented javascript interpreted language but more recent browsers perform just-in-time compilation programmers also use javascript video-game development crafting desktop mobile applications server-side network programming with run-time environments such nodejs contents history o beginnings at netscape o server-side javascript o adoption by microsoft o standardization o later developments trademark features o imperative structured o dynamic o prototype-based object-oriented o functional o delegative o miscellaneous o vendor-specific extensions syntax o simple examples o more advanced example use web pages o example script o compatibility considerations security o cross-site vulnerabilities + misplaced trust client + browser plugin coding errors + sandbox implementation errors uses outside web pages o embedded scripting language o scripting engine o application platform development tools benchmark tools for developers version history related languages features o use intermediate language o javascript java references further reading external links history beginnings at netscape national center for supercomputing applications ncsa unit university illinois at urbana-champaign released ncsa mosaic first popular graphical web browser which played important part expanding growth nascent world wide web company called mosaic communications was founded mountain view california employed many original ncsa mosaic authors create mosaic netscape however intentionally shared no code with ncsa mosaic internal codename for company's browser was mozilla which stood for mosaic killer company's goal was displace ncsa mosaic world's number one web browser first version web browser mosaic netscape was released late within four months had already taken three-quarters browser market became main browser for internet 1990s avoid trademark ownership problems with ncsa browser was subsequently renamed netscape navigator same year company took name netscape communications netscape communications realized that web needed become more dynamic marc andreessen founder company believed that html needed glue language that was easy use by web designers part-time programmers assemble components such images plugins where code could be written directly web page markup company recruited brendan eich with goal embedding scheme programming language into its netscape navigator before he could get started netscape communications collaborated with sun microsystems include netscape navigator sun's more static programming language java order compete with microsoft for user adoption web technologies platforms netscape communications then decided that scripting language they wanted create would complement java should have similar syntax which excluded adopting other languages such perl python tcl scheme defend idea javascript against competing proposals company needed prototype eich wrote one days may although was developed under name mocha language was officially called livescript when first shipped beta releases netscape navigator september but was renamed javascript when was deployed netscape navigator beta december final choice name caused confusion giving impression that language was spin-off java programming language choice has been characterized marketing ploy by netscape give javascript cachet what was then hot new web programming language there common misconception that javascript was influenced by earlier web page scripting language developed by nombas named c-- not be confused with later c-- created brendan eich however had never heard c-- before he created livescript nombas did pitch their embedded web page scripting netscape though web page scripting was not new concept shown by violawww web browser nombas later switched offering javascript instead c-- their scriptease product was part tc39 group that standardized ecmascript server-side javascript netscape introduced implementation language for server-side scripting with netscape enterprise server december soon after releasing javascript for browsers since mid-2000s there has been resurgence server-side javascript implementations such nodejs marklogic adoption by microsoft microsoft script technologies including vbscript jscript were released jscript reverse-engineered implementation netscape's javascript was part internet explorer well being available server-side internet information server internet explorer also included microsoft's first support for css various extensions html but each case implementation was noticeably different that found netscape navigator at time these differences made difficult for designers programmers make single website work well both browsers leading use best viewed netscape best viewed internet explorer logos that characterized these early years browser wars javascript began acquire reputation for being one roadblocks cross-platform standards-driven web some developers took on difficult task trying make their sites work both major browsers but many could not afford time with release internet explorer microsoft introduced concept dynamic html but differences language implementations different proprietary document object models remained were obstacles widespread take-up javascript on web standardization november netscape submitted javascript ecma international carve out standard specification which other browser vendors could then implement based on work done at netscape this led official release language specification ecmascript published first edition ecma-262 standard june with javascript being most well known implementations actionscript jscript are other well-known implementations ecmascript with extensions standards process continued cycles with release ecmascript june which brings some modifications conform iso/iec international standard release ecmascript followed december which baseline for modern day javascript original ecmascript work led by waldemar horwat then at netscape now at google started at first microsoft seemed participate even implemented some proposals their jscript net language over time was clear though that microsoft had no intention cooperating implementing proper javascript internet explorer even though they had no competing proposal they had partial diverged at this point implementation on net server side so by original ecmascript work was mothballed next major event was with two major happenings javascript's history first brendan eich mozilla rejoined ecma international not-for-profit member work started on ecmascript for xml e4x ecma-357 standard which came from ex-microsoft employees at bea systems originally acquired crossgain this led working jointly with macromedia later acquired by adobe systems who were implementing e4x actionscript actionscript was fork original ecmascript so along with macromedia work restarted on ecmascript with goal standardizing what was actionscript this end adobe systems released actionscript virtual machine code named tamarin open source project but tamarin actionscript were too different from web javascript converge was realized by parties alas there was still turmoil between various players douglas crockford—then at yahoo—joined forces with microsoft oppose ecmascript which led ecmascript effort development ecmascript was never completed but that work influenced subsequent versions while all this was happening open source developer communities set work revolutionize what could be done with javascript this community effort was sparked when jesse james garrett released white paper which he coined term ajax described set technologies which javascript was backbone used create web applications where data can be loaded background avoiding need for full page reloads leading more dynamic applications this resulted renaissance period javascript usage spearheaded by open source libraries communities that formed around them with libraries such prototype jquery dojo toolkit mootools others being released july disparate parties on either side came together oslo this led eventual agreement early rename ecmascript ecmascript drive language forward using agenda that known harmony ecmascript was finally released december june ecmascript was released fully align with third edition iso/iec international standard ecmascript was released june current version ecmascript released june later developments javascript has become one most popular programming languages on web initially however many professional programmers denigrated language because among other reasons its target audience consisted web authors other such amateurs advent ajax returned javascript spotlight brought more professional programming attention result was proliferation comprehensive frameworks libraries improved javascript programming practices increased usage javascript outside web browsers seen by proliferation server-side javascript platforms january commonjs project was founded with goal specifying common standard library mainly for javascript development outside browser with rise single-page applications javascript-heavy sites increasingly being used compile target for source-to-source compilers from both dynamic languages static languages trademark javascript trademark oracle corporation used under license for technology invented implemented by netscape communications current entities such mozilla foundation features following features are common all conforming ecmascript implementations unless explicitly specified otherwise imperative structured javascript supports much structured programming syntax from c eg if statements while loops switch statements do while loops etc one partial exception scoping javascript originally had only function scoping with var ecmascript added let keyword for block scoping meaning javascript now has both function block scoping like c javascript makes distinction between expressions statements one syntactic difference from c automatic semicolon insertion which allows semicolons that would normally terminate statements be omitted dynamic typing with most scripting languages javascript dynamically typed type associated with each value rather than just with each expression for example variable that at one time bound number may later be re-bound string javascript supports various ways test type object including duck typing run-time evaluation javascript includes eval function that can execute statements provided strings at run-time prototype-based object-oriented javascript almost entirely object-based javascript object associative array augmented with prototype see below each string key provides name for object property there are two syntactical ways specify such name dot notation objx = bracket notation obj = property may be added rebound deleted at run-time most properties object any property that belongs object's prototype inheritance chain can be enumerated using forin loop javascript has small number built-in objects including function date prototypes javascript uses prototypes where many other object-oriented languages use classes for inheritance possible simulate many class-based features with prototypes javascript functions object constructors functions double object constructors along with their typical role prefixing function call with new will create instance prototype inheriting properties methods from constructor including properties from object prototype ecmascript offers objectcreate method allowing explicit creation instance without automatically inheriting from object prototype older environments can assign prototype null constructor's prototype property determines object used for new object's internal prototype new methods can be added by modifying prototype function used constructor javascript's built-in constructors such array object also have prototypes that can be modified while possible modify object prototype generally considered bad practice because most objects javascript will inherit methods properties from object prototype they may not expect prototype be modified functions methods unlike many object-oriented languages there no distinction between function definition method definition rather distinction occurs during function calling when function called method object function's local this keyword bound that object for that invocation functional function first-class function considered be object such function may have properties methods such call bind nested function function defined within another function created each time outer function invoked addition each nested function forms lexical closure lexical scope outer function including any constant local variable argument value becomes part internal state each inner function object even after execution outer function concludes javascript also supports anonymous functions delegative javascript supports implicit explicit delegation functions roles traits mixins javascript natively supports various function-based implementations role patterns like traits mixins such function defines additional behavior by at least one method bound this keyword within its function body role then has be delegated explicitly via call apply objects that need feature additional behavior that not shared via prototype chain object composition inheritance whereas explicit function-based delegation does cover composition javascript implicit delegation already happens every time prototype chain walked order eg find method that might be related but not directly owned by object once method found gets called within this object's context thus inheritance javascript covered by delegation automatism that bound prototype property constructor functions miscellaneous run-time environment javascript typically relies on run-time environment eg web browser provide objects methods by which scripts can interact with environment eg webpage dom also relies on run-time environment provide ability include/import scripts eg html elements this not language feature per se but common most javascript implementations javascript processes messages from queue one at time upon loading new message javascript calls function associated with that message which creates call stack frame function's arguments local variables call stack shrinks grows based on function's needs upon function completion when stack empty javascript proceeds next message queue this called event loop described run completion because each message fully processed before next message considered however language's concurrency model describes event loop non-blocking program input/output performed using events callback functions this means for instance that javascript can process mouse click while waiting for database query return information variadic functions indefinite number parameters can be passed function function can access them through formal parameters also through local arguments object variadic functions can also be created by using bind method array object literals like many scripting languages arrays objects associative arrays other languages can each be created with succinct shortcut syntax fact these literals form basis json data format regular expressions javascript also supports regular expressions manner similar perl which provide concise powerful syntax for text manipulation that more sophisticated than built-in string functions vendor-specific extensions javascript officially managed by mozilla foundation new language features are added periodically however only some javascript engines support these new features property getter setter functions supported by webkit gecko opera actionscript rhino conditional catch clauses iterator protocol adopted from python shallow generators-coroutines adopted from python array comprehensions generator expressions adopted from python proper block scope via let keyword array object destructuring limited form pattern matching concise function expressions functionargs expr ecmascript for xml e4x extension that adds native xml support ecmascript unsupported firefox since version syntax main article javascript syntax simple examples variables javascript can be defined using var keyword var x // defines variable x assigns special value undefined not be confused with undefined value var y = // defines variable y assigns value note comments example above both which were preceded with two forward slashes there no built-in i/o functionality javascript run-time environment provides that ecmascript specification edition mentions … indeed there are no provisions this specification for input external data output computed results however most runtime environments have console object that can be used print output here minimalist hello world program consoleloghello world simple recursive function function factorialn { if n == { return } return n factorialn - } factorial3 // returns anonymous function lambda function counter { var count = return function { return ++count } } var closure = counter closure // returns closure // returns closure // returns this example shows that javascript function closures captures their non-local variables by reference variadic function demonstration arguments special variable function sum { var x = for var i = i alcm - blcm // sort with this comparative function => shorthand form function called arrow function foreachprintresult function printresultobj { outputobj + gcd = + objgcd + lcm = + objlcm } following output should be displayed browser window lcmcalculator = b = gcd = lcm = lcmcalculator = b = gcd = lcm = lcmcalculator = b = gcd = lcm = lcmcalculator = b = gcd = lcm = use web pages see also dynamic html ajax programming most common use javascript add client-side behavior html pages also known dynamic html dhtml scripts are embedded included from html pages interact with document object model dom page some simple examples this usage are loading new page content submitting data server via ajax without reloading page for example social network might allow user post status updates without leaving page animation page elements fading them out resizing them moving them etc interactive content for example games playing audio video validating input values web form make sure that they are acceptable before being submitted server transmitting information about user's reading habits browsing activities various websites web pages frequently do this for web analytics ad tracking personalization other purposes because javascript code can run locally user's browser rather than on remote server browser can respond user actions quickly making application more responsive furthermore javascript code can detect user actions that html alone cannot such individual keystrokes applications such gmail take advantage this much user-interface logic written javascript javascript dispatches requests for information such content e-mail message server wider trend ajax programming similarly exploits this strength javascript engine also known javascript interpreter javascript implementation interpreter that interprets javascript source code executes script accordingly first javascript engine was created by brendan eich at netscape for netscape navigator web browser engine code-named spidermonkey implemented c has since been updated javascript conform ecmascript rhino engine created primarily by norris boyd formerly at netscape now at google javascript implementation java rhino like spidermonkey ecmascript compliant web browser by far most common host environment for javascript web browsers typically create host objects represent dom javascript web server another common host environment javascript web server would typically expose host objects representing http request response objects which javascript program could then interrogate manipulate dynamically generate web pages because javascript only language that most popular browsers share support for has become target language for many frameworks other languages even though javascript was never intended be such language despite performance limitations inherent its dynamic nature increasing speed javascript engines has made language surprisingly feasible compilation target example script below minimal example standards-conforming web page containing javascript using html syntax dom example hello documentgetelementbyid'hellobutton'onclick = function { alert'hello world' // show dialog var mytextnode = documentcreatetextnode'some new words' documentbodyappendchildmytextnode // append some new words page } compatibility considerations main article web interoperability because javascript runs widely varying environments important part testing debugging test verify that javascript works across multiple browsers dom interfaces for manipulating web pages are not part ecmascript standard javascript itself officially dom interfaces are defined by separate standardization effort by w3c practice browser implementations differ from standards from each other not all browsers execute javascript deal with these differences javascript authors can attempt write standards-compliant code that will also be executed correctly by most browsers failing that they can write code that checks for presence certain browser features behaves differently if they are not available some cases two browsers may both implement feature but with different behavior authors may find practical detect what browser running change their script's behavior match programmers may also use libraries toolkits that take browser differences into account furthermore scripts may not work for some users for example user may use old rare browser with incomplete unusual dom support use pda mobile phone browser that cannot execute javascript have javascript execution disabled security precaution use speech browser due for example visual disability support these users web authors can try create pages that degrade gracefully on user agents browsers that do not support page's javascript particular page should remain usable albeit without extra features that javascript would have added alternative approach that many find preferable first author content using basic technologies that work all browsers then enhance content for users that have javascript enabled this known progressive enhancement security see also browser security javascript dom provide potential for malicious authors deliver scripts run on client computer via web browser authors contain this risk using two restrictions first scripts run sandbox which they can only perform web-related actions not general-purpose programming tasks like creating files second scripts are constrained by same origin policy scripts from one web site do not have access information such usernames passwords cookies sent another site most javascript-related security bugs are breaches either same origin policy sandbox there are subsets general javascript—adsafe secure ecmascript ses—that provide greater level security especially on code created by third parties such advertisements caja another project for safe embedding isolation third-party javascript html content security policy main intended method ensuring that only trusted code executed on web page see also content security policy cross-site vulnerabilities main articles cross-site scripting cross-site request forgery common javascript-related security problem cross-site scripting xss violation same-origin policy xss vulnerabilities occur when attacker able cause target web site such online banking website include malicious script webpage presented victim script this example can then access banking application with privileges victim potentially disclosing secret information transferring money without victim's authorization solution xss vulnerabilities use html escaping whenever displaying untrusted data some browsers include partial protection against reflected xss attacks which attacker provides url including malicious script however even users those browsers are vulnerable other xss attacks such those where malicious code stored database only correct design web applications on server side can fully prevent xss xss vulnerabilities can also occur because implementation mistakes by browser authors another cross-site vulnerability cross-site request forgery csrf csrf code on attacker's site tricks victim's browser into taking actions user didn't intend at target site like transferring money at bank works because if target site relies only on cookies authenticate requests then requests initiated by code on attacker's site will carry same legitimate login credentials requests initiated by user general solution csrf require authentication value hidden form field not only cookies authenticate any request that might have lasting effects checking http referrer header can also help javascript hijacking type csrf attack which tag on attacker's site exploits page on victim's site that returns private information such json javascript possible solutions include requiring authentication token post get parameters for any response that returns private information misplaced trust client developers client-server applications must recognize that untrusted clients may be under control attackers application author cannot assume that his javascript code will run intended at all because any secret embedded code could be extracted by determined adversary some implications are web site authors cannot perfectly conceal how their javascript operates because raw source code must be sent client code can be obfuscated but obfuscation can be reverse-engineered javascript form validation only provides convenience for users not security if site verifies that user agreed its terms service filters invalid characters out fields that should only contain numbers must do so on server not only client scripts can be selectively disabled so javascript can't be relied on prevent operations such right-clicking on image save extremely bad practice embed sensitive information such passwords javascript because can be extracted by attacker browser plugin coding errors javascript provides interface wide range browser capabilities some which may have flaws such buffer overflows these flaws can allow attackers write scripts that would run any code they wish on user's system this code not by any means limited another javascript application for example buffer overrun exploit can allow attacker gain access operating system's api with superuser privileges these flaws have affected major browsers including firefox internet explorer safari plugins such video players adobe flash wide range activex controls enabled by default microsoft internet explorer may also have flaws exploitable via javascript such flaws have been exploited past windows vista microsoft has attempted contain risks bugs such buffer overflows by running internet explorer process with limited privileges google chrome similarly confines its page renderers their own sandbox sandbox implementation errors web browsers are capable running javascript outside sandbox with privileges necessary for example create delete files course such privileges aren't meant be granted code from web incorrectly granting privileges javascript from web has played role vulnerabilities both internet explorer firefox windows xp service pack microsoft demoted jscript's privileges internet explorer microsoft windows allows javascript source files on computer's hard drive be launched general-purpose non-sandboxed programs see windows script host this makes javascript like vbscript theoretically viable vector for trojan horse although javascript trojan horses are uncommon practice uses outside web pages addition web browsers servers javascript interpreters are embedded number tools each these applications provides its own object model that provides access host environment core javascript language remains mostly same each application embedded scripting language google's chrome extensions opera's extensions apple's safari extensions apple's dashboard widgets microsoft's gadgets yahoo widgets google desktop gadgets serence klipfolio are implemented using javascript mongodb database accepts queries written javascript mongodb nodejs are core components mean solution stack for creating web applications using just javascript clusterpoint database accept queries written js/sql which combination sql javascript clusterpoint has built-in computing engine that allows execution javascript code right inside distributed database adobe's acrobat adobe reader support javascript pdf files tools adobe creative suite including photoshop illustrator dreamweaver indesign allow scripting through javascript openofficeorg office application suite well its popular fork libreoffice allows javascript be used scripting language visual programming language max released by cycling '74 offers javascript model its environment for use by developers allows users reduce visual clutter by using object for task rather than many apple's logic pro x digital audio workstation daw software can create custom midi effects plugins using javascript ecmascript was included vrml97 standard for scripting nodes vrml scene description files unity game engine supports modified version javascript for scripting via mono dx studio engine uses spidermonkey implementation javascript for game simulation logic maxwell render rendering software provides ecma standard based scripting engine for tasks automation google apps script google spreadsheets google sites allows users create custom formulas automate repetitive tasks also interact with other google products such gmail many irc clients like chatzilla xchat use javascript for their scripting abilities rpg maker mv uses javascript its scripting language scripting engine microsoft's active scripting technology supports jscript scripting language java introduced javaxscript package version that includes javascript implementation based on mozilla rhino thus java applications can host scripts that access application's variables objects much like web browsers host scripts that access webpage's document object model dom qt c++ toolkit includes qtscript module interpret javascript analogous java's javaxscript package os x yosemite introduced javascript for automation jxa which built upon javascriptcore open scripting architecture features objective-c bridge that enables entire cocoa applications be programmed javascript late night software's javascript osa also known javascript for osa jsosa freeware alternative applescript for os x based on mozilla javascript implementation with addition macos object for interaction with operating system third-party applications application platform actionscript programming language used adobe flash another implementation ecmascript standard adobe integrated runtime javascript runtime that allows developers create desktop applications atom open-source text editor developed by github was implemented using javascript has special api on javascript for packages that are developed for ca inc's autoshell cross-application scripting environment built on spidermonkey javascript engine contains preprocessor-like extensions for command definition well custom classes for various system-related tasks like file i/o operation system command invocation redirection com scripting gnome shell shell for gnome desktop environment made javascript its default programming language mozilla platform which underlies firefox thunderbird some other web browsers uses javascript implement graphical user interface gui its various products qt quick's markup language available since qt uses javascript for its application logic its declarative syntax also similar javascript typescript programming language based on javascript that adds support for optional type annotations some other language extensions such classes interfaces modules ts-script compiles into plain javascript can be executed any js host supporting ecmascript higher compiler itself written typescript ubuntu touch provides javascript api for its unified usability interface webos uses webkit implementation javascript its sdk allow developers create stand-alone applications solely javascript winjs provides special windows library for javascript functionality windows that enables development modern style formerly metro style applications html5 javascript development tools within javascript access debugger becomes invaluable when developing large non-trivial programs because there can be implementation differences between various browsers particularly within dom useful have access debugger for each browsers that web application targets script debuggers are integrated within internet explorer firefox safari google chrome opera nodejs addition native internet explorer developer tools three debuggers are available for internet explorer microsoft visual studio richest three closely followed by microsoft script editor component microsoft office finally free microsoft script debugger that far more basic than other two free microsoft visual web developer express provides limited version javascript debugging functionality microsoft visual studio internet explorer has included developer tools since version comparison internet explorer firefox has more comprehensive set developer tools which include debugger well old versions firefox without these tools used firefox addon called firebug older venkman debugger also webkit's web inspector includes javascript debugger which used safari modified version called blink devtools used google chrome nodejs has node inspector interactive debugger that integrates with blink devtools available google chrome opera includes set tools called dragonfly addition native computer software there are online javascript ides debugging aids that are themselves written javascript built run on web example program jslint developed by douglas crockford who has written extensively on language jslint scans javascript code for conformance set standards guidelines many libraries for javascript such threejs provide links demonstration code that can be edited by users they are also used pedagogical tool by institutions such khan academy allow students experience writing code environment where they can see output their programs without needing any setup beyond web browser benchmark tools for developers since javascript getting more important for web development frontend overtakes many aspects which were done backend before there also more consideration done about performance especially mobile devices could have problems with rendering processing unoptimized complex logic library for doing benchmarks benchmarkjs benchmarking library that supports high-resolution timers returns statistically significant results another tool online javascript benchmarking tool where code snippets can be tested against each other version history see also ecmascript § versions ecmascript § version correspondence javascript was initially developed for use netscape navigator web browser same year microsoft released implementation for internet explorer this implementation was called jscript due trademark issues first standardized version language was released under name ecmascript first edition ecma-252 standard explicit versioning opt-in language features was mozilla-specific has been removed firefox was last version which referred javascript version with new editions ecma-262 standard javascript language features are now often mentioned with their initial definition ecma-262 editions following table based on information from multiple sources version release date equivalent netscape navigator mozilla firefox internet explorer opera safari google chrome old version no longer supported march old version no longer supported august old version no longer supported june 40-405 old version no longer supported october ecma-262 1st + 2nd edition 406-47x old version no longer supported netscape server old version no longer supported november ecma-262 3rd edition jscript jscript jscript jscript 30-5 10-100666 old version no longer supported november + array extras + array string generics + e4x old version no longer supported october + pythonic generators + iterators + let old version no longer supported june + generator expressions + expression closures old version no longer supported + native json support + minor updates old version no longer supported june + minor updates old version no longer supported july + new features for ecma-262 5th edition compliance related languages features json javascript object notation general-purpose data interchange format that defined subset javascript's object literal syntax like much javascript regexps anonymous functions 1st class elements closures flexible classes 'use strict' json except for replacing perl's key-value operator '=>' by rfc inspired '' syntactically pure perl jquery popular javascript library designed simplify dom-oriented client-side html scripting along with offering cross-browser compatibility because various browsers respond differently certain vanilla javascript code underscorejs utility javascript library for data manipulation that used both client-side server-side network applications angularjs web application framework use for developing single-page applications also cross-platform mobile apps react javascript library open-source javascript library providing views that rendered using components specified custom html tags mozilla browsers currently support liveconnect feature that allows javascript java intercommunicate on web however mozilla-specific support for liveconnect scheduled be phased out future favor passing on liveconnect handling via npapi java 16+ plug-in not yet supported on mac march most browser inspection tools such firebug firefox include javascript interpreters that can act on visible page's dom asmjs subset javascript that can be run any javascript engine run faster ahead-of-time aot compiling engine jsfuck esoteric programming language programs are written using only six different characters but are still valid javascript code p5js object oriented javascript library designed for artists designers based on ideas processing project but for web online javascript benchmarking tool where different code snippets can be tested against each other use intermediate language javascript most widely supported client-side language that can run within web browser has become intermediate language for other languages target this has included both newly created languages ports existing languages some these include oberonscript full implementation oberon programming language that compiles high-level javascript objective-j superset javascript that compiles standard javascript adds traditional inheritance smalltalk/ objective-c style dynamic dispatch optional pseudo-static typing javascript processingjs javascript port processing programming language designed write visualizations images interactive content allows web browsers display animations visual applications games other graphical rich content without need for java applet flash plugin coffeescript alternate syntax for javascript intended be more concise readable adds features like array comprehensions also available javascript since version pattern matching like objective-j compiles javascript ruby python have been cited influential on coffeescript syntax google web toolkit translates subset java javascript scala object-oriented functional programming language has scala-to-javascript compiler pyjamas port google web toolkit python translates subset python javascript dart open-source programming language developed by google can be compiled javascript whalesong racket-to-javascript compiler emscripten llvm-backend for porting native libraries javascript fantom programming language that runs on jvm net javascript typescript free open-source programming language developed by microsoft superset javascript essentially adds optional static typing class-based object-oriented programming language haxe open-source high-level multiplatform programming language compiler that can produce applications source code for many different platforms including javascript clojurescript compiler for clojure that targets javascript designed emit javascript code that compatible with advanced compilation mode google closure optimizing compiler kotlin statically-typed language that also compiles java byte code squeakjs virtual machine dom environment for open-source squeak implementation smalltalk programming language javascript has unusual limitations – such no separate integer type using floating point – languages that compile javascript commonly have slightly different behavior than other environments javascript java common misconception that javascript similar closely related java true that both have c-like syntax c language being their most immediate common ancestor language they also are both typically sandboxed when used inside browser javascript was designed with java's syntax standard library mind particular all java keywords were reserved original javascript javascript's standard library follows java's naming conventions javascript's math date objects are based on classes from java but similarities end there java javascript both first appeared on may but java was developed by james gosling sun microsystems javascript by brendan eich netscape communications differences between two languages are more prominent than their similarities java has static typing while javascript's typing dynamic java loaded from compiled bytecode while javascript loaded human-readable source code java's objects are class-based while javascript's are prototype-based finally java did not support functional programming until java while javascript has done so from beginning being influenced by scheme references flanagan pp 1–2 standard ecma-262 ecma international rfc appsietforg archived from original on retrieved february system-declared uniform type identifiers mac os x reference library apple inc retrieved javascript collins english dictionary – complete & unabridged digital edition william collins sons & co retrieved august b c flanagan p b flanagan p ecmascript language specification pdf ecmascript language overview pdf p retrieved severance charles february javascript designing language days computer ieee computer society 7–8 doi 101109/mc201257 retrieved march press release announcing javascript netscape sun announce javascript pr newswire december techvision innovators net brendan eich javascript webarchiveorg archived from original on history programming languages oreillycom o'reilly media retrieved july what javascript pdf wileycom wiley retrieved july noorda brent september brent noorda's answers on ecma quoracom retrieved july noorda brent june history nombas brent-noordacom retrieved july eich brendan june new javascript engine module owner brendaneichcom retrieved july server-side javascript guide oraclecom netscape communications corporation december retrieved july server-side javascript back with vengeance readwritecom december retrieved july server-side javascript for developers marklogiccom january retrieved august b c champeon steve april javascript how did we get here oreillycom retrieved july microsoft internet explorer beta now available microsoftcom microsoft may retrieved july mccracken harry september unwelcome return best viewed with internet explorer technologizercom retrieved july documentation ecmascriptorg retrieved july standard ecma-262 ecmascript® language specification ecma-internationalorg june retrieved july crockford douglas javascript world's most misunderstood programming language crockfordcom retrieved july kowal kris december commonjs effort sets javascript on path for world domination arstechnicacom retrieved july uspto copyright entry uspto sun trademarks sun microsystems archived from original on may retrieved flanagan p javascript data types data structures flanagan pp 176–178 inheritance prototype chain mozilla developer network mozilla retrieved april herman david effective javascript addison-wesley p isbn 978-0-321-81218-6 haverbeke marijn eloquent javascript no starch press pp 95–97 isbn 978-1-59327-282-1 katz yehuda understanding prototypes javascript retrieved april herman david effective javascript addison-wesley pp 125–127 isbn 978-0-321-81218-6 properties function object es5githubcom retrieved flanagan p many talents javascript for generalizing role-oriented programming approaches like traits mixins april traits for javascript cocktailjs – annotations traits talents april angus croll fresh look at javascript mixins published may concurrency model event loop mozilla developer network retrieved haverbeke marijn eloquent javascript no starch press pp 139–149 isbn 978-1-59327-282-1 robert nyman getters setters with javascript – code samples demos published may accessed january john resig javascript getters setters july accessed january e4x – archive obsolete content | mdn mozilla developer network mozilla foundation feb retrieved july var – javascript – mdn mozilla developer network retrieved december ecmascript language specification – ecma-262 edition ecma international retrieved december console mozilla developer network mozilla retrieved april arguments mozilla developer network mozilla retrieved april javascript tracking – piwik piwik retrieved march hamilton naomi a-z programming languages javascript computerworldcomau peter-paul koch object detection peter-paul koch mission impossible – mouse position peter-paul koch browser detect making javascript safe for advertising adsafe retrieved secure ecma script ses codegooglecom retrieved mozillazine mozilla cross-site scripting vulnerability reported fixed right-click protection forget about issn 1797-1993 retrieved mozilla corporation buffer overflow cryptosigntext festa paul august buffer-overflow bug ie cnet securitytrackercom apple safari javascript buffer overflow lets remote users execute arbitrary code http redirect bug lets remote users access files securityfocus microsoft webviewfoldericon activex control buffer overflow vulnerability fusion authority macromedia flash activex buffer overflow mike friedman protected mode vista ie7 us cert vulnerability note vu713878 microsoft internet explorer does not properly validate source redirected frame mozilla foundation mozilla foundation security advisory 2005–41 privilege escalation via dom property overrides microsoft corporation changes functionality microsoft windows xp service pack part enhanced browsing security for one example rare javascript trojan horse see symantec corporation jsseekerk javascript for acrobat retrieved unity scripting unity3dcom retrieved technical specification dxstudiocom retrieved think maxwell render resourcer center scripting references google apps script google apps script chatzilla frequently asked questions – how do i write scripts chatzillahacksruscom retrieved february xcdscript retrieved february rpg maker mv | rpg maker | make your own games retrieved august version information javascript msdnmicrosoftcom retrieved javaxscript release notes javasuncom retrieved flanagan pp et seq nokia corporation qtscript module open scripting architecture behind scenes with owen taylor gnome journal archived from original on retrieved answering question how do i develop app for gnome advanced debugging with javascript alistapartcom retrieved javascript debugging console javascriptaboutcom retrieved splinetech javascript debugger – independent standalone javascript debugger javascript-debuggercom retrieved debugging with node inspector docsstrongloopcom retrieved jscript development microsoft office ms infopath introducing drosera – surfin' safari webkitorg retrieved opera dragonfly opera software khan academy computer science retrieved sep new javascript developermozillaorg retrieved javascript – jscript – ecmascript version history webmasterworldcom retrieved john resig versions javascript ejohnorg retrieved history opera web browserversion what version javascript rfc release notes for next-generation java™ plug-in technology introduced java se update javasuncom retrieved on frequently asked questions asmjs retrieved p5js ralph sommerer oberon script lightweight compiler runtime system for web researchmicrosoftcom retrieved new javascript developermozillaorg retrieved sébastien doeraene scalajs lampwwwepflch retrieved whalesong racket javascript compiler hashcollisionorg retrieved clojure/clojurescript · github githubcom retrieved brendan eich april popularity retrieved further reading bhangal sham jankowski tomasz foundation web design essential html javascript css photoshop fireworks flash apress l p isbn 1-59059-152-6 burns joe growney andree s javascript goodies pearson education isbn 0-7897-2612-2 duffy scott how do everything with javascript osborne isbn 0-07-222887-3 zakas nicholas c professional javascript for web developers 3rd ed wrox isbn 978-1-118-02669-4 flanagan david javascript definitive guide 5th ed o'reilly & associates isbn 0-596-10199-6 flanagan david javascript definitive guide 6th ed o'reilly & associates isbn 978-0-596-80552-4 goodman danny eich brendan javascript bible john wiley & sons isbn 0-7645-3342-8 goodman danny markel scott javascript dhtml cookbook o'reilly & associates isbn 0-596-00467-2 harris andy javascript programming for absolute beginner premier press isbn 0-7615-3410-5 haverbeke marijn eloquent javascript no starch press isbn 978-1-59327-282-1 heinle nick koman richard designing with javascript o'reilly & associates isbn 1-56592-300-6 husted robert kuslich jj server-side javascript developing integrated web applications 1st ed addison-wesley isbn 0-201-43329-x mcduffie tina spain javascript concepts & techniques programming interactive web sites franklin beedle & associates isbn 1-887902-69-4 mcfarlane nigel rapid application development with mozilla prentice hall professional technical references isbn 0-13-142343-6 powell thomas schneider fritz javascript complete reference mcgraw-hill companies isbn 0-07-219127-9 shelly gary b cashman thomas j dorin william j quasney jeffrey j javascript complete concepts techniques cambridge course technology isbn 0-7895-6233-2 vander veer emily javascript for dummies 4th ed wiley pub isbn 0-7645-7659-3 watt andrew h watt jonathan simon jinjer l teach yourself javascript days pearson education isbn 0-672-32297-8 external links computer programming portal find more aboutjavascriptat wikipedia's sister projects definitions from wiktionary media from commons textbooks from wikibooks learning resources from wikiversity documentation from mediawiki listen this article info/dl this audio file was created from revision javascript article dated does not reflect subsequent edits article audio help more spoken articles douglas crockford's video lectures on javascript douglas crockford's survey javascript programming language javascript at dmoz list languages that compile js v t e javascript code analysis jshint jslint compilers coffeescript dart emscripten google closure compiler google web toolkit morfik typescript atscript opa haxe clojurescript concepts ajax client-side dynamic html javascript library javascript syntax unobtrusive javascript debuggers firebug komodo ide microsoft script debugger microsoft script editor opera dragonfly venkman visual studio o visual studio express visual studio code web inspector doc generators jsdoc editors comparison ace atom cloud9 ide codemirror codenvy koding light table orion visual studio o visual studio express visual studio code visual studio online engines comparison layout engines list ecmascript engines list javascript engines frameworks comparison javascript frameworks list javascript libraries related technologies cascading style sheets document object model html json webassembly package managers npm nuget bower yarn server-side active server pages commonjs jsgi nodejs wakanda unit testing jasmine mocha jsunit qunit list javascript unit testing frameworks people douglas crockford brendan eich john resig v t e programming languages comparison timeline history assembly basic c c++ c cobol fortran go haskell java javascript js lisp lua objective-c pascal perl php python ruby shell smalltalk swift visual basic net vbnet more category comparison lists o alphabetical o categorical o generational o non-english-based v t e ecmascript dialects actionscript caja javascript o engines o asmjs jscript jscript net qtscript typescript wmlscript engines comparison carakan futhark inscript javascriptcore o squirrelfish jscript kjs linear b narcissus qtscript rhino spidermonkey o tracemonkey o jägermonkey tamarin v8 chakra javascript engine jscript net nashorn frameworks client-side ample sdk chaplinjs dojo echo ext js google web toolkit jquery lively kernel midori mochikit mootools prototype pyjamas qooxdoo rialto rico scriptaculous smartclient sproutcore spry wakanda framework yui library server-side appjet jaxer nodejs wakandadb multiple cappuccino o objective-j puremvc libraries backbonejs swfobject swfaddress underscorejs people brendan eich douglas crockford john resig scott isaacs other dhtml ecma international jsdoc jsgi jshint jslint json jsss sputnik sunspider asynchronous module definition commonjs lists javascript libraries ajax frameworks comparisons javascript frameworks server-side javascript v t e web browsers comparison history list o for unix timeline usage share features ad filtering augmented browsing bookmarks o bookmarklet o live bookmark o smart bookmarks browser extension browser security browser synchronizer o comparison cookies download manager favicon incremental search plug-in privacy mode tabs universal edit button web standards acid tests cascading style sheets html html5 javascript mathml ocsp svg webgl xhtml related topics browserchoiceeu crl http https iloo internet suite man-in-the-browser mobile web offline reader pac pwn2own rich internet application site-specific browser spdy ssl/tls websocket widget world wide web wpad xml desktop blink-based chromium o brave o chrome o dragon o opera o sleipnir o slimjet o srware iron o uc browser o vivaldi o yandexbrowser o sputnik webkit-based arora avant dooble epic flock fluid icab konqueror lunascape maxthon midori omniweb origyn web browser otter browser qtweb qupzilla rekonq safari shiira slimboat surf torch uzbl web webpositive xombrero trident-based aol explorer avant deepnet explorer greenbrowser internet explorer lunascape maxthon mediabrowser menubox neoplanet netcaptor slimbrowser spacetime ultrabrowser webbie zac browser gecko-based at&t pogo avant camino firefox o conkeror o gnu icecat o icedragon o swiftfox o swiftweasel o tenfourfox o timberwolf o tor browser o waterfox o xb browser galeon ghostzilla k-meleon kazehakase kirix strata lotus symphony lunascape mozilla o beonex communicator o classilla o netscape o seamonkey text-based elinks emacs/w3 line mode browser links lynx w3m other abaco amaya arachne arena charon dillo eww gazelle hotjava ibm home page reader ibrowse kidzui microsoft edge mosaic mothra netpositive netsurf pale moon mobile blink-based android browser chromium o brave o chrome o opera mobile o silk webkit-based bolt dolphin browser firefox for ios maxthon mercury browser nokia browser for symbian rockmelt safari steel trident-based maxthon gecko-based firefox for android microb minimo presto-based opera mini other blazer cm browser deepfish ibisbrowser internet explorer mobile iris browser konqueror embedded microsoft edge netfront nokia xpress skweezer skyfire teashark thunderhawk uc browser vision winwap television video game console webkit-based google tv nintendo 3ds internet browser nintendo ds & dsi browser netfront steam overlay wii u internet browser gecko-based kylo presto-based internet channel other msn tv software no longer development shown italics category commons internet portal software portal v t e nodejs platform nodejs npm v8 commonjs frameworks mean o mongodb o expressjs o angularjs meen substituted with emberjs backbonejs meteor libraries lodash underscorejs reactjs languages javascript coffeescript typescript hosts joyent nodejitsu openshift linode digitalocean authority control gnd 4420180-1 retrieved from https//enwikipediaorg/w/indexphptitle=javascript&oldid=751295019 categories introductions american inventions articles with example javascript code cross-platform software dynamically typed programming languages functional languages javascript object-based programming languages programming languages created programming languages with iso standard prototype-based programming languages scripting languages web programming hidden categories all articles with dead external links articles with dead external links from august all articles with unsourced statements articles with unsourced statements from march articles with unsourced statements from november articles containing potentially dated statements from march all articles containing potentially dated statements spoken articles articles with haudio microformats articles with dmoz links wikipedia articles with gnd identifiers navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikibooks wikiversity languages afrikaans العربية azərbaycanca বাংলা беларуская беларуская тарашкевіца‎ български català чӑвашла čeština dansk deutsch eesti ελληνικά español esperanto euskara فارسی français galego 客家語/hak-kâ-ngî 한국어 հայերեն हिन्दी hrvatski bahasa indonesia interlingua íslenska italiano עברית basa jawa ქართული қазақша кыргызча latviešu lietuvių magyar македонски മലയാളം मराठी مازِرونی bahasa melayu mìng-dĕ̤ng-ngṳ̄ монгол မြန်မာဘာသာ nederlands नेपाली 日本語 norsk bokmål ភាសាខ្មែរ polski português română русский саха тыла scots shqip සිංහල simple english slovenčina slovenščina српски / srpski srpskohrvatski / српскохрватски suomi svenska tagalog தமிழ் татарча/tatarça తెలుగు tetun ไทย тоҷикӣ türkçe türkmençe ᨅᨔ ᨕᨘᨁᨗ українська اردو tiếng việt 粵語 žemaitėška 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 