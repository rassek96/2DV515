basic from wikipedia free encyclopedia jump navigation search basic screenshot atari basic one basic implementations used by small simple home computers early 1980s paradigm unstructured later procedural later object-oriented designed by john george kemeny thomas eugene kurtz first appeared may years ago major implementations dartmouth basic apple basic atari basic sinclair basic commodore basic bbc basic ti-basic casio basic microsoft basic just basic liberty basic visual basic freebasic powerbasic purebasic influenced by algol fortran ii joss influenced comal visual basic visual basic net realbasic grass autoit autohotkey basic acronym for beginner's all-purpose symbolic instruction code family general-purpose high-level programming languages whose design philosophy emphasizes ease use john g kemeny thomas e kurtz designed original basic language at dartmouth college us state new hampshire they wanted enable students fields other than science mathematics use computers at time nearly all use computers required writing custom software which was something only scientists mathematicians tended learn versions basic became widespread on microcomputers mid-1970s 1980s microcomputers usually shipped with basic often machine's firmware having easy-to-learn language on these early personal computers allowed small business owners professionals hobbyists consultants develop custom software on computers they could afford 2010s basic remains popular many computing dialects new languages influenced by basic such microsoft's visual basic contents history o origin o spread on minicomputers o explosive growth home computer era o ibm pc compatibles o visual basic o post-1990 versions dialects o calculators o windows command line o other o nostalgia syntax o typical basic keywords o data types variables o examples + unstructured basic + structured basic + basic with object-oriented features standards see also references o notes o citations o bibliography external links history before mid-1960s only computers were huge mainframe computers users submitted jobs calculations other requests on punched cards similar media specialist computer operators computer stored these then used batch processing system run this queue jobs one after another allowing very high levels utilization these expensive machines performance computing hardware rose through 1960s multi-processing was developed this allowed mix batch jobs be run together but real revolution was development time-sharing time-sharing allowed multiple remote interactive users share use computer interacting with computer from computer terminals with keyboards teletype printers later display screens much same way desktop computers personal computers would be used later origin main article dartmouth basic original basic language was released on may by john kemeny thomas kurtz implemented under their direction by team dartmouth college students acronym basic comes from name unpublished paper by thomas kurtz basic was designed allow students write mainframe computer programs for dartmouth time-sharing system was intended specifically for less technical users who did not have want mathematical background previously expected being able use computer support teaching research was quite novel at time language was based on fortran ii with some influences from algol with additions make suitable for timesharing initially basic concentrated on supporting straightforward mathematical work with matrix arithmetic support from its initial implementation batch language character string functionality being added by wanting use language become widespread its designers made compiler available free charge 1960s software became chargeable commodity until then was provided without charge service with very expensive computers usually available only lease they also made available high schools hanover area put considerable effort into promoting language following years other dialects basic appeared kemeny kurtz's original basic dialect became known dartmouth basic spread on minicomputers train basic every day — reads poster bottom center russian school ca 1985–1986 knowledge relatively simple basic became widespread for computer language was implemented by number manufacturers becoming fairly popular on newer minicomputers such dec pdp series where basic-plus was extended dialect for use on rsts/e time-sharing operating system basic language was available for data general nova also central hp time-shared basic system late 1960s early 1970s where language was implemented interpreter version was core part pick operating system from onward where compiler renders into bytecode able be interpreted by virtual machine during this period number simple computer games were written basic most notably mike mayfield's star trek number these were collected by dec employee david h ahl published newsletter he compiled he later collected number these into book form basic computer games published during same period ahl was involved creation small computer for education use early personal computer when management refused support concept ahl left dec found seminal computer magazine creative computing book remained popular was re-published on several occasions explosive growth home computer era commodore basic v20 on commodore msx basic version introduction first microcomputers mid-1970s was start explosive growth for basic had advantage that was fairly well known young designers computer hobbyists who took interest microcomputers despite dijkstra's famous judgement practically impossible teach good programming students that have had prior exposure basic potential programmers they are mentally mutilated beyond hope regeneration basic was one few languages that was both high-level enough be usable by those without training small enough fit into microcomputers day making de facto standard programming language on early microcomputers one first basics appear was tiny basic simple basic variant designed by dennis allison at urging bob albrecht homebrew computer club he had seen basic on minicomputers felt would be perfect match for new machines like mits altair how design implement stripped-down version interpreter for basic language was covered articles by allison first three quarterly issues people's computer company newsletter published implementations with source code published dr dobb's journal tiny basic calisthenics & orthodontia running light without overbyte versions were written by li-chen wang tom pittman mits released altair basic developed by bill gates paul allen company micro-soft which eventually grew into corporate giant microsoft first altair version was co-written by gates allen monte davidoff almost universally home computers 1980s had rom-resident basic interpreter which machines booted directly into when apple ii pet trs-80 were all released all three had basic their primary programming language operating environment upon boot basic interpreter immediate mode was presented not command line interface used on systems running cp/m ms-dos commodore business machines included version microsoft basic apple ii trs-80 each had two versions basic smaller introductory version introduced with initial releases machines more advanced version developed interest platforms increased new companies entered field additional versions were added that subtly changed basic family atari 8-bit family had its own atari basic that was modified order fit on kb rom cartridge bbc published bbc basic developed by acorn computers ltd incorporating many extra structured programming keywords advanced floating-point operation features popularity basic grew this period computer magazines published complete source code basic for video games utilities other programs given basic's straightforward nature was simple matter type code from magazine execute program different magazines were published featuring programs for specific computers though some basic programs were considered universal could be used machines running any variant basic sometimes with minor adaptations many books type-in programs were also available particular ahl published versions original basic games converted into microsoft dialect published from creative computing basic computer games this book its sequels provided hundreds ready-to-go programs that could be easily converted practically any basic-running platform book reached stores just home computer market was starting off became first million-selling computer book later packages such learn program basic would also have gaming introductory focus on business-focused cp/m computers which soon became widespread small business environments microsoft basic mbasic was one leading applications ibm pc compatibles ibm cassette basic when ibm was designing ibm pc they followed paradigm existing home computers wanting have built-in basic they sourced this from microsoft - ibm cassette basic - but microsoft also produced several other versions basic for ms-dos/pc dos including ibm disk basic basic d ibm basica basic gw-basic basica-compatible version that did not need ibm's rom qbasic all typically bundled with machine addition they produced microsoft basic compiler aimed at professional programmers turbo pascal-publisher borland published turbo basic successor versions are still being marketed by original author under name powerbasic microsoft wrote windowing-based amigabasic that was supplied with version pre-emptive multitasking gui amiga computers late / early although product unusually did not bear any microsoft marks these languages introduced many extensions original home-computer basic such improved string manipulation graphics support access file system additional data types more important were facilities for structured programming including additional control structures proper subroutines supporting local variables however by latter half 1980s users were increasingly using pre-made applications written by others rather than learning programming themselves while professional programmers now had wide range more advanced languages available on small computers c later c++ became languages choice for professional shrink wrap application development visual basic basic's fortunes reversed once again with introduction visual basic vb by microsoft this was evolutionary development quickbasic included constructs from other languages such block structured control statements including with for each parameterized subroutines optional static typing full object oriented language but language retained considerable links its past such dim statement for declarations gosub/return statements even line numbers which were still needed report errors properly important driver for development visual basic was new macro language for microsoft excel spreadsheet program ironically given origin basic beginner's language apparently even surprise many at microsoft who still initially marketed language for hobbyists language had come into widespread use for small custom business applications shortly after release vb version which widely considered first relatively stable version while many advanced programmers still scoffed at its use vb met needs small businesses efficiently wherever processing speed was less concern than ease development by that time computers running windows had become fast enough that many business-related processes could be completed blink eye even using slow language long large amounts data were not involved many small business owners found they could create their own small yet useful applications few evenings meet their own specialized needs eventually during lengthy lifetime vb3 knowledge visual basic had become marketable job skill microsoft also produced vbscript visual basic net latter has essentially same power c java but with syntax that reflects original basic language three modern basic variants mono basic openofficeorg basic gambas post-1990 versions dialects many other basic dialects have also sprung up since including open source qb64 freebasic inspired by qbasic visual basic-styled rapidq basic for qt gambas modern commercial incarnations include purebasic powerbasic xojo monkey x true basic direct successor dartmouth basic from company controlled by kurtz several web-based simple basic interpreters also now exist including quite basic microsoft's small basic educational software versions basic have been showing up for use on smartphones tablets apple app store contains such implementations basic programming language smart basic basic hotpaw basic basic-ii techbasic others android devices feature such implementations basic rfo basic mintoris basic applications for some mobile computers with proprietary os cipherlab can be built with programming environment based on basic application for nintendo 3ds nintendo dsi called petit computer allows for programming slightly modified version basic with ds button support 3ds sequel was released japan november calculators variants basic are available on graphing otherwise programmable calculators made by texas instruments hp casio others windows command line qbasic version microsoft quickbasic without linker make exe files present windows nt dos-windows streams operating systems can be obtained for more recent releases like windows which do not have them prior dos basic interpreter was gw-basic quickbasic part series three languages issued by microsoft for home office power user small scale professional development quickc quickpascal are other two for windows which do not have qbasic installed by default they can be copied from installation disc which will have set directories for old optional software other missing commands like exe2bin others are these same directories other basic came some video game systems like nintendo famicom various microsoft lotus corel office suites related products are programmable with visual basic one form another including lotusscript which very similar vba host explorer terminal emulator uses wwb macro language more recently programme suite which contained programmable in-house basic variant known hummingbird basic vbscript variant used for programming web content outlook internet explorer windows script host wsh also has visual basic for applicationsvba engine installed third default engines along with vbscript jscript numerous proprietary open source engines which can be installed like perlscript couple rexx-based engines python ruby tcl delphi xlnt php others meaning that two versions basic can be used along with other mentioned languages well lotusscript wsf file through component object model other wsh vba constructions vbscript one languages that can be accessed by 4dos 4nt take command enhanced shells saxbasic wwb are also very similar visual basic line basic implementations pre-office macro language for microsoft word known wordbasic excel use visual basic itself macro language many linux distributions include chipmunk basic old school interpreter similar basics 1970s chipmunk basic also available for microsoft windows os x nostalgia ubiquity basic interpreters on personal computers was such that textbooks once included simple try basic exercises that encouraged students experiment with mathematical computational concepts on classroom home computers popular computer magazines day typically included type-in programs futurist sci-fi writer david brin mourned loss ubiquitous basic salon article have others who first used computers during this era turn article prompted microsoft develop release small basic dartmouth held 50th anniversary celebration for basic on may did other organisations at least one organisation vba programmers organised 35th anniversary observance syntax typical basic keywords data manipulation let assigns value which may be result expression variable data holds list values which are assigned sequentially using read command program flow control if then else used perform comparisons make decisions for {step} next repeat section code given number times variable that acts counter available within loop while wend repeat until repeat section code while specified condition true condition may be evaluated before each iteration loop after do loop {while} {until} repeat section code forever while/until specified condition true condition may be evaluated before each iteration loop after goto jumps numbered labelled line program gosub jumps numbered labelled line executes code finds there until reaches return command on which jumps back operator following gosub - either after colon on next line this used implement subroutines on goto/gosub chooses where jump based on specified conditions see switch statement for other forms def fn pair keywords introduced early 1960s define functions original basic functions were modelled on fortran single-line functions basic functions were one expression with variable arguments rather than subroutines with syntax on model def fndx = xx at beginning program function names were originally restricted fn+one letter input output list displays all inputted code print displays message on screen other output device input asks user enter value variable statement may include prompt message tab at sets position where next character will be shown on screen printed on paper miscellaneous rem holds programmer's comment remark often used give title program help identify purpose given section code usr transfers program control machine language subroutine usually entered alphanumeric string list data statements tron turns on visual screen representation flow basic commands by displaying number each command line run tron command largely obsolete now stood for trace on this meant that command line numbers were displayed program ran so that command lines could be traced this command allowed easier debugging correcting command lines that caused problems program problems included program terminating without providing desired result program providing obviously erroneous result program running non-terminating loop program otherwise having non-obvious error troff turns off display number each command line command lines run after command tron has been used data types variables minimal versions basic had only integer variables one- two-letter variable names which minimized requirements limited expensive memory ram more powerful versions had floating-point arithmetic variables could be labelled with names six more characters long there were some problems restrictions early implementations for example applesoft allowed variable names be several characters long but only first two were significant thus was possible inadvertently write program with variables loss loan which would be treated being same assigning value loan would silently overwrite value intended loss keywords could not be used variables many early basics score would be interpreted sc e where was keyword string variables are usually distinguished many microcomputer dialects by having $ suffixed their name values are often identified strings by being delimited by double quotation marks arrays basic could contain integers floating point string variables some dialects basic supported matrices matrix operations useful for solution sets simultaneous linear algebraic equations these dialects would directly support matrix operations such assignment addition multiplication compatible matrix types evaluation determinant many microcomputer basics did not support this data type matrix operations were still possible but had be programmed explicitly on array elements examples unstructured basic original dartmouth basic was unusual having matrix keyword mat although dropped by most later microprocessor derivatives used this example from manual which averages numbers that are input let s = mat input v let n = num if n = then for i = n let s = s + vi next i print s/n go end new basic programmers on home computer might start with simple program perhaps using language's print statement display message on screen well-known often-replicated example kernighan ritchie 's hello world program print hello world end infinite loop could be used fill display with message most first-generation basic versions such msx basic gw-basic supported simple data types loop cycles arrays following example written for gw-basic but will work most versions basic with minimal changes input what your name u$ print hello u$ input how many stars do you want n s$ = for i = n s$ = s$ + next i print s$ input do you want more stars a$ if lena$ = then goto a$ = left$a$ if a$ = y a$ = y then goto print goodbye u$ end resulting dialog might resemble what your name mike hello mike how many stars do you want do you want more stars yes how many stars do you want do you want more stars no goodbye mike structured basic second-generation basics for example vax basic superbasic true basic quickbasic bbc basic pick basic powerbasic introduced number features into language primarily related structured procedure-oriented programming usually line numbering omitted from language replaced with labels for goto procedures encourage easier more flexible design addition keywords structures support repetition selection procedures with local variables were introduced following example quickbasic declare sub printsomestars starcount rem quickbasic example input what your name username$ print hello username$ do input how many stars do you want numstars call printsomestarsnumstars do input do you want more stars answer$ loop until answer$ answer$ = left$answer$ loop while ucase$answer$ = y print goodbye username$ end sub printsomestars starcount rem this procedure uses local variable called stars$ stars$ = string$starcount print stars$ end sub basic with object-oriented features third-generation basic dialects such visual basic xojo staroffice basic blitzmax introduced features support object-oriented event-driven programming paradigm most built-in procedures functions are now represented methods standard objects rather than operators also operating system became more more available basic language following example visual basic net public class starsprogram public shared sub main dim username answer stars string numstars integer consolewritewhat your name username = consolereadline consolewritelinehello {0} username do consolewritehow many stars do you want numstars = cintconsolereadline stars = new string numstars consolewritelinestars do consolewritedo you want more stars answer = consolereadline loop until answer answer = answersubstring0 loop while answertoupper = y consolewritelinegoodbye {0} username end sub end class standards ansi/iso/iec standard for minimal basic o ansi x360-1978 for minimal basic o iso/iec data processing — programming languages — minimal basic ecma-55 minimal basic withdrawn similar ansi x360-1978 ansi/iso/iec standard for full basic o ansi x3113-1987 programming languages full basic o incits/iso/iec 10279-1991 r2005 information technology - programming languages - full basic ansi/iso/iec addendum defining modules o ansi x3113 interpretations-1992 basic technical information bulletin interpretations ansi 03113-1987 o iso/iec 102791991/ amd modules single character input enhancement ecma-116 basic withdrawn similar ansi x3113-1987 see also list basic dialects list computers with on-board basic references notes probably only exception was jupiter ace which instead used forth from version onwards citations manual for basic elementary algebraic language designed for use with dartmouth time sharing system thomas e kurtz - history programming languages archived october at wayback machine basic programming language nearing 50th anniversary spreadsheet vol no february pp basic jargon file archived december at wayback machine david h ahl basic computer games p xi archived february at wayback machine david h ahl basic computer games dec david h ahl computer games infoworld may p dijkstra edsger june how do we tell truths that might hurt pdf selected writings on computing personal perspective springer-verlag published pp 129–131 isbn 0-387-90652-5 you had pay $5 up front get tom pittman's site archived october at wayback machine we have basic new mexico museum natural history science archived from original on retrieved table contents basic computer games archived february at wayback machine table contents more basic computer games archived february at wayback machine table contents big computer games archived march at wayback machine osborne oldcomputersnet archived from original on june retrieved may class java gne c programming language during 1980s c compilers spread widely c became extremely popular language glue languages hummingbird windows script host 4nt why johnny can't code by david brin sept salon technology archived september at wayback machine small basic small basic archived march at wayback machine https//wwwgooglecom/searchnum=100&safe=off&site=&source=hp&q=50th+anniversary+of+basic&oq=50th+anniversary+of+basic&gsl=hp33049603154140316040412700004864864-11001c164hp41000g5mfxskyey8 basic 4th edition page differences between gw-basic qbasic archived from original on retrieved bibliography manual for basic elementary algebraic language designed for use with dartmouth time sharing system pdf dartmouth college computation center archived from original pdf on john g kemeny thomas e kurtz basic 4th edition sammet jean e programming languages history fundamentals englewood cliffs nj prentice-hall kurtz thomas e basic richard wexelblatt ed history programming languages i acm pp 515–537 isbn 0-12-745040-8 kemeny john g kurtz thomas e back basic history corruption future language addison-wesley pp pp isbn 978-0-201-13433-9 lien david basic handbook encyclopedia basic computer language 3rd ed compusoft publishing isbn 978-0-932760-33-3 external links wikibooks has book on topic programmingbasic basic at dmoz basic — beginners all-purpose symbolic instruction code encyclopedia computer languages murdoch university v t e programming languages comparison timeline history assembly basic c c++ c cobol fortran go haskell java javascript js lisp lua objective-c pascal perl php python ruby shell smalltalk swift visual basic net vbnet more category comparison lists o alphabetical o categorical o generational o non-english-based v t e dialects basic programming language list classic altair basic applesoft basic atari basic atari microsoft basic atari st basic basica basic a+ basic programming basic xe basic xl casio basic chipmunk basic color basic commodore basic extended color basic dartmouth basic disk extended color basic family basic gfa basic gw-basic hp basic for openvms hp time-shared basic ibm basic integer basic locomotive basic mallard basic microsoft basic msx basic pure basic rocky mountain basic s'-basic tandy casio sharp pocket computers scriptbasic sinclair basic southampton basic system stos basic ti basic ti 99/4a ti-basic calculators ti extended basic aka xbasic tiny basic turbo-basic xl tymshare super basic ubasic vilnius basic xbasic procedure-oriented amigabasic amos basic asic bbc basic beta basic darkbasic freebasic futurebasic gfa basic glbasic liberty basic microsoft small basic powerbasic purebasic qbasic qb64 quickbasic smallbasic superbasic thinbasic true basic turbo basic xbasic xblite basic4ppc visual test with object extensions autoit basic for qt blitzmax chipmunk basic freebasic gambas glbasic monkey x openoffice basic powerbasic providex rapidq realbasic run basic visual basic visual basic net xojo for mobile devices basic4android basic4ppc glbasic ns basic microsoft microsoft basic o mbasic o ibm basic/basica o gw-basic o quickbasic o qbasic vbscript visual basic vba visual basic net embedded visual basic vb for microsoft excel o vsto o vsta wordbasic trs-80 basics level i level ii level iii microsoft small basic third-party vb-like hummingbird basic lotusscript winwrapbasic authority control gnd 4004624-2 retrieved from https//enwikipediaorg/w/indexphptitle=basic&oldid=750507489 categories basic programming language family american inventions programming languages programming languages created programming languages with iso standard hidden categories webarchive template wayback links pages using deprecated image syntax articles with dmoz links wikipedia articles with gnd identifiers articles with example basic code pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikibooks wikiquote languages afrikaans አማርኛ العربية azərbaycanca বাংলা bân-lâm-gú беларуская беларуская тарашкевіца‎ български bosanski català čeština dansk deutsch eesti ελληνικά español esperanto euskara فارسی français gaeilge galego 한국어 hrvatski bahasa indonesia interlingua íslenska italiano עברית ಕನ್ನಡ қазақша кыргызча latina latviešu lietuvių magyar മലയാളം मराठी bahasa melayu монгол nederlands नेपाल भाषा 日本語 norsk bokmål norsk nynorsk oʻzbekcha/ўзбекча پنجابی polski português română русский саха тыла shqip simple english slovenčina slovenščina کوردیی ناوەندی српски / srpski srpskohrvatski / српскохрватски suomi svenska tagalog தமிழ் taqbaylit తెలుగు ไทย тоҷикӣ türkçe українська tiếng việt 粵語 žemaitėška 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 