lua programming language from wikipedia free encyclopedia jump navigation search for use lua programming language wikipedia see wikipedialua for other uses see lua disambiguation lua paradigm multi-paradigm scripting imperative procedural prototype-based object-oriented functional designed by roberto ierusalimschy waldemar celes luiz henrique de figueiredo first appeared years ago stable release / june preview release rc3 / may typing discipline dynamic strong duck implementation language ansi c os cross-platform license mit license filename extensions lua website wwwluaorg major implementations lua luajit llvm-lua dialects metalua idle gsl shell influenced by c++ clu modula scheme snobol influenced falcon gamemonkey io javascript julia minid red ruby squirrel moonscript lua /ˈluːə/ loo-ə from portuguese lua meaning moon lightweight multi-paradigm programming language designed primarily for embedded systems clients lua cross-platform since written ansi c has relatively simple c api lua was originally designed language for extending software applications meet increasing demand for customization at time provided basic facilities most procedural programming languages but more complicated domain-specific features were not included rather included mechanisms for extending language allowing programmers implement such features lua was intended be general embeddable extension language designers lua focused on improving its speed portability extensibility ease-of-use development contents history features o example code o loops o functions o tables + record + namespace + array o metatables o object-oriented programming internals c api o stack o example o special tables o extension binding applications o video games o other see also references further reading o books o articles external links history lua was created by roberto ierusalimschy luiz henrique de figueiredo waldemar celes members computer graphics technology group tecgraf at pontifical catholic university rio de janeiro brazil from until brazil had policy strong trade barriers called market reserve for computer hardware software that atmosphere tecgraf's clients could not afford either politically financially buy customized software from abroad those reasons led tecgraf implement basic tools needed from scratch lua's historical father mother were data-description/configuration languages sol simple object language del data-entry language they had been independently developed at tecgraf 1992–1993 add some flexibility into two different projects both were interactive graphical programs for engineering applications at petrobras company there was lack any flow-control structures sol del petrobras felt growing need add full programming power them language's authors wrote evolution lua only real contender was tcl which had been explicitly designed be embedded into applications however tcl had unfamiliar syntax did not offer good support for data description ran only on unix platforms we did not consider lisp scheme because their unfriendly syntax python was still its infancy free do-it-yourself atmosphere that then reigned tecgraf was quite natural that we should try develop our own scripting language because many potential users language were not professional programmers language should avoid cryptic syntax semantics implementation new language should be highly portable because tecgraf's clients had very diverse collection computer platforms finally since we expected that other tecgraf products would also need embed scripting language new language should follow example sol be provided library with c api lua was designed such way that its object constructors being then slightly different from current light flexible style incorporated data-description syntax sol hence name lua – sol portuguese for sun lua moon lua syntax for control structures was mostly borrowed from modula if while repeat/until but also had taken influence from clu multiple assignments multiple returns from function calls simpler alternative reference parameters explicit pointers c++ neat idea allowing local variable be declared only where we need snobol awk associative arrays article published dr dobb's journal lua's creators also state that lisp scheme with their single ubiquitous data structure mechanism list were major influence on their decision develop table primary data structure lua lua semantics have been increasingly influenced by scheme over time especially with introduction anonymous functions full lexical scoping versions lua prior version were released under license similar bsd license from version onwards lua has been licensed under mit license both are permissive free software licences are almost identical features lua commonly described multi-paradigm language providing small set general features that can be extended fit different problem types rather than providing more complex rigid specification match single paradigm lua for instance does not contain explicit support for inheritance but allows be implemented with metatables similarly lua allows programmers implement namespaces classes other related features using its single table implementation first-class functions allow employment many techniques from functional programming full lexical scoping allows fine-grained information hiding enforce principle least privilege general lua strives provide flexible meta-features that can be extended needed rather than supply feature-set specific one programming paradigm result base language light – full reference interpreter only about kb compiled – easily adaptable broad range applications lua dynamically typed language intended for use extension scripting language compact enough fit on variety host platforms supports only small number atomic data structures such boolean values numbers double-precision floating point by default strings typical data structures such arrays sets lists records can be represented using lua's single native data structure table which essentially heterogeneous associative array lua implements small set advanced features such first-class functions garbage collection closures proper tail calls coercion automatic conversion between string number values at run time coroutines cooperative multitasking dynamic module loading by including only minimum set data types lua attempts strike balance between power size example code classic hello world program can be written follows printhello world can also be written iowrite'hello world\n' example given on lua website iowritehello world from version \n comments use following syntax similar that ada eiffel haskell sql vhdl -- comment lua starts with double-hyphen runs end line --] --] nested ]=] factorial function implemented function this example function factorialn local x = for i = n do x = x i end return x end loops lua has four types loops while loop repeat loop similar do while loop numeric for loop generic for loop --condition = true while condition do --statements end repeat --statements until condition for i = firstlastdelta do --delta may be negative allowing for loop count down up --statements --example printi end generic for loop for key value pairsg do printkey value end would iterate over table g using standard iterator function pairs until returns nil functions lua's treatment functions first-class values shown following example where print function's behavior modified do local oldprint = print -- store current print function oldprint function prints --] oldprints == foo bar s end end any future calls print will now be routed through new function because lua's lexical scoping old print function will only be accessible by new modified print lua also supports closures demonstrated below function addtox -- return new function that adds x argument return functiony --=] return x + y end end fourplus = addto4 printfourplus3 -- prints --this can also be achieved by calling function following way printaddto43 --] new closure for variable x created every time addto called so that each new anonymous function returned will always access its own x parameter closure managed by lua's garbage collector just like any other object tables tables are most important data structures by design only built-in composite data type lua are foundation all user-created types they are conceptually similar associative arrays php dictionaries python hashes ruby perl table collection key data pairs where data referenced by key other words it's hashed heterogeneous associative array key index can be any value but nil nan numeric key considered distinct from string key tables are created using {} constructor syntax atable = {} -- creates new empty table tables are always passed by reference see call by sharing atable = {x = 10} -- creates new table with one entry mapping x number printatable -- prints value associated with string key this case btable = atable btable = -- value table has been changed printbtable -- prints printatable -- also prints because atable btable both refer same table record table often used structure record by using strings keys because such use very common lua features special syntax for accessing such fields example point = { x = y = } -- create new table printpoint -- prints printpointx -- has exactly same meaning line above easier-to-read -- dot notation just syntactic sugar quoting lua reference manual syntax varname just syntactic sugar for var namespace by using table store related functions can act namespace point = {} pointnew = functionx y return {x = x y = y} -- return { = x = y} end pointsetx = functionpoint x pointx = x -- point = x end array by using numerical key table resembles array data type lua arrays are 1-based first index rather than for many other programming languages though explicit index allowed simple array strings array = { b c d } -- indices are assigned automatically printarray -- prints b automatic indexing lua starts at printarray -- prints length operator for tables strings array = z -- zero legal index printarray -- still prints lua arrays are 1-based length table t defined be any integer index n such that t not nil t nil moreover if t nil n can be zero for regular array with non-nil values from given n its length exactly that n index its last value if array has holes that nil values between other non-nil values then t can be any indices that directly precedes nil value that may consider any such nil value end array two dimensional table exampletable = { {1234} {5678} } printexampletable -- prints printexampletable -- prints array objects function pointx y -- point object constructor return { x = x y = y } -- creates returns new object table end array = { point10 point30 point50 } -- creates array points -- array = { { x = y = } { x = y = } { x = y = } } printarrayy -- prints using hash map emulate array normally slower than using actual array however lua tables are optimized for use arrays help avoid this issue metatables extensible semantics key feature lua metatable concept allows lua's tables be customized powerful ways following example demonstrates infinite table for any n {\displaystyle n} fibs will give n {\displaystyle n} th fibonacci number using dynamic programming memoization fibs = { } -- initial values for fibs fibs setmetatablefibs { index = functionvalues n --] values = values + values -- calculate memoize fibs return values end } object-oriented programming although lua does not have built-in concept classes they can be implemented using two language features first-class functions tables by placing functions related data into table object formed inheritance both single multiple can be implemented via metatable mechanism telling object look up nonexistent methods fields parent objects there no such concept class with these techniques rather prototypes are used programming languages self javascript new objects are created either with factory method that constructs new objects from scratch by cloning existing object lua provides some syntactic sugar facilitate object orientation declare member functions inside prototype table one can use function tablefuncargs which equivalent function tablefuncself args calling class methods also makes use colon objectfuncargs equivalent objectfuncobject args creating basic vector object local vector = {} vectorindex = vector function vectornewx y z -- constructor return setmetatable{x = x y = y z = z} vector end function vectormagnitude -- another method -- reference implicit object using self return mathsqrtselfx^2 + selfy^2 + selfz^2 end local vec = vectornew0 -- create vector printvecmagnitude -- call method output printvecx -- access member variable output internals lua programs are not interpreted directly from textual lua file but are compiled into bytecode which then run on lua virtual machine compilation process typically invisible user performed during run-time but can be done offline order increase loading performance reduce memory footprint host environment by leaving out compiler lua bytecode can also be produced executed from within lua using dump function from string library load/loadstring/loadfile functions lua version implemented approximately lines c code like most cpus unlike most virtual machines which are stack-based lua vm register-based therefore more closely resembles actual hardware design register architecture both avoids excessive copying values reduces total number instructions per function virtual machine lua one first register-based pure vms have wide use perl's parrot android's dalvik are two other well-known register-based vms this example bytecode listing factorial function defined above shown by luac compiler function instructions bytes at 0x8063c60 param slots upvalues locals constants functions loadk loadk move loadk forprep mul forloop return return c api lua intended be embedded into other applications provides c api for this purpose api divided into two parts lua core lua auxiliary library lua api's design eliminates need for manual reference management c code unlike python's api api like language minimalistic advanced functionality provided by auxiliary library which consists largely preprocessor macros which assist with complex table operations stack lua c api stack based lua provides functions push pop most simple c data types integers floats etc from stack well functions for manipulating tables through stack lua stack somewhat different from traditional stack stack can be indexed directly for example negative indices indicate offsets from top stack for example −1 top most recently pushed value while positive indices indicate offsets from bottom oldest value marshalling data between c lua functions also done using stack call lua function arguments are pushed onto stack then luacall used call actual function when writing c function be directly called from lua arguments are read from stack example here example calling lua function from c include include //lua main library lua include //lua auxiliary library lual int mainvoid { //create lua state luastate l = lualnewstate //load execute string if lualdostringl function foo xy return x+y end { luaclosel return } //push value global foo function defined above //to stack followed by integers luagetgloball foo luapushintegerl luapushintegerl luacalll //call function with two arguments one return value printfresult %d\n luatointegerl //print integer value item at stack top luaclosel //close lua state return } running this example gives $ cc -o example examplec -llua $ /example result special tables c api also provides some special tables located at various pseudo-indices lua stack at luaglobalsindex prior lua globals table g from within lua which main namespace there also registry located at luaregistryindex where c programs can store lua values for later retrieval extension binding possible write extension modules using lua api extension modules are shared objects which can be used extend functionality interpreter by providing native facilities lua scripts from lua side such module appears namespace table holding its functions variables lua scripts may load extension modules using require just like modules written lua itself growing collection modules known rocks are available through package management system called luarocks spirit cpan rubygems python eggs other modules can be found through lua addons directory wiki prewritten lua bindings exist for most popular programming languages including other scripting languages for c++ there are number template-based approaches some automatic binding generators applications video games main category lua-scripted video games video game development lua widely used scripting language by game programmers perhaps due its perceived easiness embed fast execution short learning curve poll conducted by gamedevnet showed lua most popular scripting language for game programming on january lua was announced winner front line award from magazine game developer category programming tools other this section needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed february learn how when remove this template message other applications using lua include 3dmlw plugin uses lua scripting for animating handling different events adobe photoshop lightroom uses lua for its user interface aerospike database uses lua its internal scripting language for its 'udf' user defined function capabilities – similar procedures apache http server can use lua anywhere request process since version via core modlua module artweaver graphics editor uses lua for scripting filters autodesk stingray game engine which uses lua for developing video games awesome window manager written partly lua also using its configuration file format bozohttpd default webserver shipped with netbsd has integrated lua support for dynamic content creation canon hack development kit chdk open source firmware for canon cameras uses lua one two scripting languages celestia astronomy educational program uses lua its scripting language cheat engine memory editor/debugger enables lua scripts be embedded its cheat table files even includes gui designer cisco uses lua implement dynamic access policies within adaptive security appliance conky linux system monitoring app uses lua for advanced graphics cocos2d uses lua build games with their cocos code ide codea lua editor native ios operating-system custom applications for creative technology zen x-fi2 portable media player can be created lua damn small linux uses lua provide desktop-friendly interfaces for command-line utilities without sacrificing lots disk space darktable open-source photography workflow application scriptable with lua dolphin computer access uses lua scripting make inaccessible applications accessible for visually impaired computer users with their screen reader – supernova eyeon's fusion compositor uses embedded lua luajit for internal external scripts also plugin prototyping fork nes emulator fce ultra called fceux allows for extensions modifications games via lua scripts flame large highly sophisticated piece malware being used for cyber espionage foldit science-oriented game protein folding uses lua for user scripts some those scripts have been aim article pnas freepops extensible mail proxy uses lua power its web front-end freeswitch open-source telephony platform designed facilitate creation voice chat driven products which lua can be used scripting language for call control call flow among other things geany code editor has lua plugin geanylua ginga middleware for brazilian digital television system sbtvd isdb-t uses lua script language its declarative environment ginga-ncl ginga-ncl lua integrated media objects called nclua inside ncl nested context language documents grafx2 pixel-art editor can run lua scripts for simple picture processing generative illustration haproxy reverse proxying software may be extended with lua starting from version iclone real-time animation studio create animation movies uses lua controls its new physics simulation drawing editor ipe mainly used for producing figures with latex labeling uses lua for its functionality script extensions lego mindstorms nxt nxt can be scripted with lua using third-party software lighttpd web server uses lua for hook scripts well modern replacement for cache meta language version profile management software for logitech's g15 gaming keyboard uses lua its scripting language luakit aims be fast lightweight webkit-based browser framework extensible by lua luatex designated successor pdftex allows extensions be written lua luci default web interface for openwrt written primarily lua mediawiki uses lua new templating language which used on wikipedia other wikis moonbridge network server for lua applications combination with webmcp web development framework allows complex web applications be written lua used by liquidfeedback mysql workbench uses lua for its extensions add-ons netbsd has lua driver that can create control lua states inside kernel this allows lua be used for packet filtering creating device drivers nginx has powerful embedded lua module that provides api for accessing nginx facilities like socket handling for example nmap network security scanner uses lua basis for its scripting language called nse nodemcu uses lua hardware nodemcu open source hardware platform which can run lua directly on esp8266 wi-fi soc sierra wireless airlink aleos gsm / cdma / lte gateways allow user applications be written lua perimeta session border controller from metaswitch networks uses lua scripting language manipulate sdp data on fly powerdns offers extensive lua scripting for serving changing dns answers fixing up broken servers dos protection project dogwaffle professional offers lua scripting make filters through doglua filter lua filters can be shared between project dogwaffle gimp pixarra twistedbrush artweaver prosody cross-platform jabber/xmpp server written lua qsc audio products supports lua scripting for control external devices other advanced functionality within q-sys designer quartz composer visual programming tool by apple can be scripted lua via free plugin produced by boinx software reaper digital audio workstation supports lua scripting extend functionality reason digital audio workstation lua used describe remote codecs redis open source key-value database which lua can be used starting with version write complex functions that run server itself thus extending its functionality renoise audio tracker which lua scripting used extend functionality retroshare encrypted filesharing serverless email instant messaging online chat bbs software based on friend-to-friend network has lua plugin for automation control rockbox open-source digital audio player firmware supports plugins written lua rpm software package management system primarily developed for red hat linux new versions scite editor can be extended using lua sas integrates lua with proc lua statement snort intrusion detection system includes lua interpreter since beta release squeezebox music players from logitech support plugins written lua on recent models controller radio touch tarantool uses lua stored procedure language for its nosql database management system acts lua application server teamspeak has lua scripting plugin for modifications ti-nspire calculators contain applications written lua since ti added lua scripting support with calculator-specific api os 3+ torch open source deep learning library for lua transformice independent multiplayer free-to-play online platform browser game that uses lua code minigames varnish can execute lua scripts request process by extending vcl through lua vmod varnish module vim has lua scripting support starting with version vlc media player uses lua provide scripting support weechat irc client allows scripts be written lua wingate proxy server allows event processing policy execute lua scripts with access internal wingate objects wireshark network packet analyzer allows protocol dissectors post-dissector taps be written lua zerobrane studio lua ide written lua uses lua for its plugins see also free software portal computer programming portal comparison programming languages references b ierusalimschy roberto de figueiredo luiz henrique filho waldemar celes june lua—an extensible extension language software practice experience 635–652 doi 101002/sici1097-024x19960626630co2-p retrieved october b c about lua luaorg retrieved yuri takhteyev april from brazil wikipedia foreign affairs retrieved april b c d ierusalimschy r figueiredo l h celes w evolution lua pdf proc acm hopl iii pp 2–1–2–26 doi101145/12388441238846 isbn 978-1-59593-766-7 evolution extension language history lua retrieved figueiredo l h ierusalimschy r celes w december lua extensible embedded language few metamechanisms replace host features dr dobb's journal pp 26–33 lua reference manual retrieved lua reference manual retrieved lua source code retrieved ierusalimschy r figueiredo l h celes w implementation lua j universal comp sci 1159–1176 kein-hong man no-frills introduction lua vm instructions pdf b lua reference manual luaorg retrieved changes api – lua reference manual luaorg retrieved luarocks luarocks wiki retrieved lua addons lua-users wiki retrieved binding code lua lua-users wiki retrieved why lua considered game language at wayback machine archived august poll results at wayback machine archived december front line award winners announced at wayback machine archived june how setup web server wikinetbsdorg retrieved bozohttpd - netbsd manual pages netbsdgwcom retrieved using lua with darktable zetter kim may meet 'flame' massive spy malware infiltrating iranian computers wired news algorithm discovery by protein folding game players pblua scriptable operating systems with lua luatex luatexorg retrieved april luci retrieved july technology report wikipedia signpost january public software group e v – liquidfeedback frontend public-software-grouporg public software group retrieved april lua4 man page netbsdgwcom retrieved npf scripting with lua eurobsdcon pdf scriptable operating systems with lua pdf dynamic languages symposium httpluamodule wikinginxorg retrieved nmap scripting engine retrieved huang r nodemcu devkit github retrieved april know your sbcs pdf retrieved redis lua scripting lua for rpm lua snort retrieved vmod lua for varnish retrieved vim documentation iflua retrieved lua wireshark retrieved further reading books gutschmidt t game programming with python lua ruby course technology ptr isbn 1-59200-077-0 schuytema p manyen m game development with lua charles river media isbn 1-58450-404-8 jung k brown beginning lua programming wrox press isbn 0-470-06917-1 figueiredo l h celes w ierusalimschy r eds lua programming gems luaorg isbn 978-85-903798-4-3 takhteyev yuri coding places software practice south american city mit press isbn 0-262-01807-1 chapters are dedicated lua while others look at software brazil more broadly varma jayant learn lua for ios game development apress isbn 1-4302-4662-6 ierusalimschy r programming lua 3rd ed luaorg isbn 85-903798-5-x 1st ed available online articles matheson ash april introduction lua gamedevnet retrieved january fieldhouse keith february introducing lua onlampcom o'reilly media streicher martin april embeddable scripting with lua developerworks ibm quigley joseph june look at lua linux journal hamilton naomi september a-z programming languages lua computerworld idg interview with roberto ierusalimschy ierusalimschy roberto de figueiredo luiz henrique celes waldemar may passing language through eye needle acm queue acm how embeddability lua impacted its design lua papers theses external links find more aboutluaat wikipedia's sister projects news from wikinews textbooks from wikibooks learning resources from wikiversity official website lua users community elua embedded lua projects lua squilu squirrel modified with lua libraries ravi derivative lua with limited optional static typing llvm based jit compiler v t e lua programming language interpreters compilers frameworks libraries ports distributions ides applications lua parrot iup kepler plua lua player corona decoda scite comparison lua ides prosody lua wikipedia v t e free open-source software general alternative terms for free software comparison open-source closed-source software comparison source code hosting facilities free software free software project directories gratis versus libre long-term support open-source software open-source software development outline software packages audio bioinformatics codecs collaboration configuration management device drivers o graphics o wireless geophysics health mathematics operating systems programming languages routing statistics television video games web applications o content management systems o e-commerce word processors android apps ios apps commercial trademarked formerly proprietary community free software movement history open-source software movement organizations events licenses apache apsl artistic beerware boost bsd cc0 cddl epl gnu gpl gnu lgpl isc mit mpl ms-pl/rl wtfpl zlib license types standards comparison free open-source software licenses contributor license agreement copyfree copyleft debian free software guidelines definition free cultural works free license free software definition open source definition open-source license permissive free software licence public domain viral license challenges binary blob digital rights management hardware restrictions license proliferation mozilla software rebranding proprietary software sco/linux controversies secure boot software patents software security trusted computing related topics cathedral bazaar forking microsoft open specification promise revolution os book category commons portal retrieved from https//enwikipediaorg/w/indexphptitle=luaprogramminglanguage&oldid=751639813 categories brazilian inventions cross-platform free software cross-platform software dynamically typed programming languages embedded systems free compilers interpreters free computer libraries free software programmed c lua programming language object-oriented programming languages pontifical catholic university rio de janeiro programming languages created prototype-based programming languages register-based virtual machines scripting languages software using mit license hidden categories webarchive template wayback links use dmy dates from august pages using deprecated image syntax articles containing portuguese-language text articles needing additional references from february all articles needing additional references official website different wikidata wikipedia navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons mediawiki meta-wiki wikibooks wikiversity languages العربية azərbaycanca বাংলা bân-lâm-gú bosanski català čeština dansk deutsch ελληνικά español esperanto euskara فارسی français galego 한국어 հայերեն हिन्दी bahasa indonesia interlingua íslenska italiano עברית ქართული latviešu magyar മലയാളം bahasa melayu nederlands 日本語 norsk bokmål ଓଡ଼ିଆ ਪੰਜਾਬੀ ភាសាខ្មែរ polski português română русский scots simple english slovenščina српски / srpski suomi svenska தமிழ் тоҷикӣ українська اردو tiếng việt zazaki 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 