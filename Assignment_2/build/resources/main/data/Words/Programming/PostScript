postscript from wikipedia free encyclopedia jump navigation search for other uses see postscript disambiguation this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed june learn how when remove this template message postscript paradigm multi-paradigm stack-based procedural designed by john warnock chuck geschke doug brotz ed taft bill paxton developer adobe systems first appeared years ago stable release postscript / years ago typing discipline dynamic strong major implementations adobe postscript trueimage ghostscript influenced by interpress lisp influenced pdf postscript filename extension ps internet media type application/postscript uniform type identifier uti comadobepostscript magic number % developed by adobe systems type format printing file format extended encapsulated postscript postscript ps computer language for creating vector graphics dynamically typed concatenative programming language was created at adobe systems by john warnock charles geschke doug brotz ed taft bill paxton from used page description language electronic publishing desktop publishing contents history o postscript level o postscript level o postscript use printing o before postscript o postscript printing o font handling o other implementations use display system language o hello world o units length see also notes references external links history concepts postscript language were seeded when john warnock was working at evans & sutherland computer graphics company at that time john warnock was developing interpreter for large three-dimensional graphics database new york harbor warnock conceived design system language process graphics concurrently researchers at xerox parc had developed first laser printer had recognized need for standard means defining page images 1975-76 bob sproull william newman developed press format which was eventually used xerox star system drive laser printers but press data format rather than language lacked flexibility parc mounted interpress effort create successor evans & sutherland asked warnock move from san francisco bay area their main headquarters utah but he was not interested moving he then joined xerox parc work with martin newell they rewrote design system create j & m for john martin which was used for vlsi design investigation type graphics printing this work later evolved expanded into interpress language warnock left with chuck geschke founded adobe systems december they together with doug brotz ed taft bill paxton created simpler language similar interpress called postscript which went on market at about this time they were visited by steve jobs who urged them adapt postscript be used language for driving laser printers march apple laserwriter was first printer ship with postscript sparking desktop publishing dtp revolution mid-1980s combination technical merits widespread availability made postscript language choice for graphical output for printing applications for time interpreter sometimes referred rip for raster image processor for postscript language was common component laser printers into 1990s however cost implementation was high computers output raw ps code that would be interpreted by printer into raster image at printer's natural resolution this required high performance microprocessors ample memory laserwriter used mhz motorola making faster than any macintosh computers which attached when laser printer engines themselves cost over thousand dollars added cost ps was marginal but printer mechanisms fell price cost implementing ps became too great fraction overall printer cost addition with desktop computers becoming more powerful no longer made sense offload rasterisation work onto resource-constrained printer by few lower-end printer models came with support for postscript largely due growing competition from much cheaper non-postscript ink jet printers new software-based methods render postscript images on computer making them suitable for any printer pdf descendant postscript provides one such method has largely replaced postscript de facto standard for electronic document distribution on high-end printers postscript processors remain common their use can dramatically reduce cpu work involved printing documents transferring work rendering postscript images from computer printer postscript level first version postscript language was released market term level was added when level was introduced postscript level postscript level was introduced included several improvements improved speed reliability support for in-rip separations image decompression for example jpeg images could be rendered by postscript program support for composite fonts form mechanism for caching reusable content postscript postscript adobe dropped level terminology favor simple versioning came at end along with many new dictionary-based versions older operators introduced better color handling new filters which allow in-program compression/decompression program chunking advanced error-handling postscript was significant terms replacing existing proprietary color electronic prepress systems then widely used for magazine production through introduction smooth shading operations with up shades grey rather than available postscript level well devicen color space that allowed addition additional ink colors called spot colors into composite color pages use printing before postscript prior introduction postscript printers were designed print character output given text—typically ascii—as input there were number technologies for this task but most shared property that glyphs were physically difficult change they were stamped onto typewriter keys bands metal optical plates this changed some degree with increasing popularity dot matrix printers characters on these systems were drawn series dots defined by font table inside printer they grew sophistication dot matrix printers started including several built-in fonts from which user could select some models allowed users upload their own custom glyphs into printer dot matrix printers also introduced ability print raster graphics graphics were interpreted by computer sent series dots printer using series escape sequences these printer control languages varied from printer printer requiring program authors create numerous drivers vector graphics printing was left special-purpose devices called plotters almost all plotters did share common command language hpgl but were limited use for anything other than printing graphics addition they tended be expensive slow thus rare postscript printing laser printers combine best features both printers plotters like plotters laser printers offer high quality line art like dot-matrix printers they are able generate pages text raster graphics unlike either printers plotters however laser printer makes possible position high-quality graphics text on same page postscript made possible fully exploit these characteristics by offering single control language that could be used on any brand printer postscript went beyond typical printer control language was complete programming language its own many applications can transform document into postscript program whose execution will result original document this program can be sent interpreter printer which results printed document one inside another application which will display document on-screen since document-program same regardless its destination called device-independent postscript noteworthy for implementing on-the fly rasterization everything even text specified terms straight lines cubic bézier curves previously found only cad applications which allows arbitrary scaling rotating other transformations when postscript program interpreted interpreter converts these instructions into dots needed form output for this reason postscript interpreters are occasionally called postscript raster image processors rips font handling main article postscript fonts almost complex postscript itself its handling fonts font system uses ps graphics primitives draw glyphs line art which can then be rendered at any resolution number typographic issues had be considered with this approach one issue that fonts do not actually scale linearly at small sizes features glyphs will become proportionally too large small they start look wrong postscript avoided this problem with inclusion font hinting which additional information provided horizontal vertical bands help identify features each letter that are important for rasterizer maintain result was significantly better-looking fonts even at low resolution had formerly been believed that hand-tuned bitmap fonts were required for this task at time technology for including these hints fonts was carefully guarded hinted fonts were compressed encrypted into what adobe called type font also known postscript type font ps1 t1 adobe type type was effectively simplification ps system store outline information only opposed being complete language pdf similar this regard adobe would then sell licenses type technology those wanting add hints their own fonts those who did not license technology were left with type font also known postscript type font ps3 t3 type fonts allowed for all sophistication postscript language but without standardized approach hinting type font format was designed be used with compact font format cff charstrings was implemented reduce overall font file size cff/type2 format later became basis for handling postscript outlines opentype fonts cid-keyed font format was also designed solve problems ocf/type fonts for addressing complex asian-language cjk encoding very large character set issues cid-keyed font format can be used with type font format for standard cid-keyed fonts type for cid-keyed opentype fonts compete with adobe's system apple designed their own system truetype around immediately following announcement truetype adobe published specification for type font format retail tools such altsys fontographer acquired by macromedia january owned by fontlab since may added ability create type fonts since then many free type fonts have been released for instance fonts used with tex typesetting system are available this format early 1990s there were several other systems for storing outline-based fonts developed by bitstream metafont for instance but none included general-purpose printing solution they were therefore not widely used late 1990s adobe joined microsoft developing opentype essentially functional superset type truetype formats when printed postscript output device unneeded parts opentype font are omitted what sent device by driver same would be for truetype type font depending on which kind outlines were present opentype font other implementations 1980s adobe drew most its revenue from licensing fees for their implementation postscript for printers known raster image processor rip number new risc-based platforms became available mid-1980s some found adobe's support new machines be lacking this issues cost led third-party implementations postscript becoming common particularly low-cost printers where licensing fee was sticking point high-end typesetting equipment where quest for speed demanded support for new platforms faster than adobe could provide at one point microsoft licensed apple postscript-compatible interpreter had bought called trueimage apple licensing microsoft its new font format truetype apple ended up reaching accord with adobe licensed genuine postscript for its printers but truetype became standard outline font technology for both windows macintosh today third-party postscript-compatible interpreters are widely used printers multifunction peripherals mfps for example csr plc's ips ps3 interpreter formerly known phoenixpage standard many printers mfps including those developed by hewlett-packard sold under laserjet color laserjet lines other third-party postscript solutions used by print mfp manufacturers include jaws harlequin rip both by global graphics free software version with several other applications ghostscript several compatible interpreters are listed on undocumented printing wiki some basic inexpensive laser printers do not support postscript instead coming with drivers that simply rasterize platform's native graphics formats rather than converting them postscript first when postscript support needed for such printer ghostscript can be used there are also number commercial postscript interpreters such teletype co's t-script use display system main articles display postscript news postscript became commercially successful due introduction graphical user interface allowing designers directly lay out pages for eventual output on laser printers however gui's own graphics systems were generally much less sophisticated than postscript apple's quickdraw for instance supported only basic lines arcs not complex b-splines advanced region filling options postscript order take full advantage postscript printing applications on computers had re-implement those features using host platform's own graphics system this led numerous issues where on-screen layout would not exactly match printed output due differences implementation these features computer power grew became possible host ps system computer rather than printer this led natural evolution ps from printing system one that could also be used host's own graphics language there were numerous advantages this approach not only did help eliminate possibility different output on screen printer but also provided powerful graphics system for computer allowed printers be dumb at time when cost laser engines was falling production setting using postscript display system meant that host computer could render low-resolution screen higher resolution printer simply send ps code smart printer for offboard printing however postscript was written with printing mind had numerous features that made unsuitable for direct use interactive display system particular ps was based on idea collecting up ps commands until showpage command was seen at which point all commands read up that point were interpreted output interactive system this was clearly not appropriate nor did ps have any sort interactivity built for example supporting hit detection for mouse interactivity obviously did not apply when ps was being used on printer when steve jobs left apple started next he pitched adobe on idea using ps display system for his new workstation computers result was display postscript dps dps added basic functionality improve performance by changing many string lookups into bit integers adding support for direct output with every command adding functions allow gui inspect diagram additionally set bindings was provided allow ps code be called directly from c programming language next used these bindings their nextstep system provide object oriented graphics system although dps was written conjunction with next adobe sold commercially was common feature most unix workstations 1990s sun microsystems took another approach creating news instead dps's concept allowing ps interact with c programs news instead extended ps into language suitable for running entire gui computer sun added number new commands for timers mouse control interrupts other systems needed for interactivity added data structures language elements allow be completely object oriented internally complete gui three fact were written news provided for time on their workstations however ongoing efforts standardize x11 system led its introduction widespread use on sun systems news never became widely used language postscript turing-complete programming language belonging concatenative group typically postscript programs are not produced by humans but by other programs however possible write computer programs postscript just like any other programming language postscript interpreted stack-based language similar forth but with strong dynamic typing data structures inspired by those found lisp scoped memory since language level garbage collection language syntax uses reverse polish notation which makes order operations unambiguous but reading program requires some practice because one has keep layout stack mind most operators what other languages term functions take their arguments from stack place their results onto stack literals for example numbers have effect placing copy themselves on stack sophisticated data structures can be built on array dictionary types but cannot be declared type system which sees them all only arrays dictionaries so any further typing discipline be applied such user-defined types left code that implements them character % used introduce comments postscript programs general convention every postscript program should start with characters %ps interpreter directive so that all devices will properly interpret postscript hello world hello world program customary way show small example complete program given language might look like this postscript level %ps /courier % name desired font selectfont % choose size points establish % font current one moveto % position current point at % coordinates origin at % lower-left corner page hello world show % stroke text parentheses showpage % print all on page if output device has console %ps hello world = units length postscript uses point its unit length however unlike some other versions point postscript uses exactly points inch thus point = 1/72 inch = 127/360 mm = micrometer for example order draw vertical line cm length sufficient type moveto lineto stroke more readably idiomatically one might use following equivalent which demonstrates simple procedure definition use mathematical operators mul div /mm {360 mul div} def moveto mm lineto stroke most implementations postscript use single-precision reals 24-bit mantissa so not meaningful use more than decimal digits specify real number performing calculations may produce unacceptable round-off errors see also document structuring conventions vector graphics typeface computer font encapsulated postscript reverse polish notation postscript printer description ppd interpress pcl tex latex notes ips ps3 csr jaws global graphics page description languages postscript formats wiki undocumented printing postscript library don lancaster's guru's lair references this article based on material taken from free on-line dictionary computing prior november incorporated under relicensing terms gfdl version later external links wikibooks has book on topic postscript faq postscript language reference pdf third ed adobe plr3 plus its supplement pdf de facto defining work known red book on account its covers first edition covered postscript level second edition covered greatly expanded language known postscript level includes documentation for display postscript well third edition covers postscript with this version adobe dropped level from name but no longer includes dps postscript language tutorial cookbook zip adobe corresponding introductory text known blue book on account its covers postscript language program design zip adobe green book postscript vs pdf adobe official introductory comparison ps eps vs pdf type font format pdf adobe black book first guide postscript tail recursive casselman william ‘bill’ mathematical illustrations manual geometry postscript book ca ubc ——— mathematical illustrations manual geometry postscript pdf book reid glenn thinking postscript pdf co usa addison-wesley — thorough tutorial available online courtesy author v t e adobe systems software suites creative cloud creative suite elearning suite technical communication suite desktop animate acrobat after effects brackets edge code edge reflow digital editions director dreamweaver framemaker freehand flash player flex builder golive illustrator indesign media encoder media player muse pagemaker photoshop photoshop lightroom premiere pro reader shockwave player server livecycle flash media server blazeds coldfusion jrun phonegap build technologies adobe air adobe flash adobe flex adobe shockwave adobe font folio digital negative dng authorware flashpaper portable document format pdf postscript web services acrobatcom adobe solutions network adobe photoshop express adobe premiere express adobe spark adobe stock acquisitions aldus macromedia scene7 omniture behance fotolia people bruce chizen charles geschke shantanu narayen john warnock del yocam category commons v t e graphics file formats raster ani anim apng art bmp bpg bsave cal cin cpc cpt dds dpx ecw exr fits flic flif fpx gif hdri hevc icer icns ico / cur ics ilbm jbig jbig2 jng jpeg jpeg jpeg-ls jpeg xr kra mng miff nrrd ora pam pbm / pgm / ppm / pnm pcx pgf pictor png psd / psb psp qtvr ras rbe o jpeg-hdr o logluv tiff sgi tga tiff o tiff/ep o tiff/it ufo/ ufp wbmp webp xbm xcf xpm xwd raw ciff dng vector ai cdr cgm dxf eva emf gerber hvif iges pgml svg vml wmf xar compound cdf djvu eps pdf pict ps swf xaml related exchangeable image file format exif extensible metadata platform xmp category comparison retrieved from https//enwikipediaorg/w/indexphptitle=postscript&oldid=747133814 categories introductions adobe systems computer printing concatenative programming languages digital press digital typography dynamically typed programming languages office document file formats page description languages postscript stack-based virtual machines stack-oriented programming languages technical communication vector graphics open formats hidden categories articles needing additional references from june all articles needing additional references all articles with unsourced statements articles with unsourced statements from july navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages العربية български català čeština dansk deutsch eesti español esperanto فارسی français 한국어 hrvatski bahasa indonesia italiano עברית lietuvių magyar bahasa melayu nederlands 日本語 norsk bokmål polski português română русский simple english slovenčina suomi svenska тоҷикӣ türkçe українська vèneto žemaitėška 中文 edit links this page was last modified on october at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 