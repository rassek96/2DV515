algol from wikipedia free encyclopedia jump navigation search this article about programming language for other uses see algol disambiguation algol paradigm procedural imperative structured designed by backus bauer green katz mccarthy naur perlis rutishauser samelson van wijngaarden vauquois wegstein woodger first appeared influenced by algol influenced most subsequent imperative languages so-called algol-like languages eg simula cpl pascal ada c algol short for algorithmic language member algol family computer programming languages followed on from algol which had introduced code blocks begin end pairs for delimiting them algol was first language implementing nested function definitions with lexical scope gave rise many other programming languages including cpl simula bcpl b pascal c niklaus wirth based his own algol w on algol before moving develop pascal algol-w was intended be next generation algol but algol committee decided on design that was more complex advanced rather than cleaned simplified algol official algol versions are named after year they were first published algol substantially different from algol was criticised partially for being so so that general algol refers dialects algol contents standardization history o algol implementations timeline properties o algol reserved words restricted identifiers + standard operators examples portability issues o code sample comparisons + algol + algol family see also references further reading external links standardization algol — with cobol — were first languages seek standardization iso programming languages — algol stabilized iso/tr hardware representation algol basic symbols now withdrawn history algol was used mostly by research computer scientists united states europe its use commercial applications was hindered by absence standard input/output facilities its description lack interest language by large computer vendors algol did however become standard for publication algorithms had profound effect on future language development john backus developed backus normal form method describing programming languages specifically for algol was revised expanded by peter naur for algol at donald knuth's suggestion renamed backus–naur form peter naur editor algol bulletin i was drawn into international discussions language was selected be member european language design group november this capacity i was editor algol report produced result algol meeting paris january following people attended meeting paris from january friedrich l bauer peter naur heinz rutishauser klaus samelson bernard vauquois adriaan van wijngaarden michael woodger from europe john w backus julien green charles katz john mccarthy alan j perlis joseph henry wegstein from usa alan perlis gave vivid description meeting meetings were exhausting interminable exhilarating one became aggravated when one's good ideas were discarded along with bad ones others nevertheless diligence persisted during entire period chemistry was excellent language originally did not include recursion was inserted into specification at last minute against wishes some committee algol inspired many languages that followed tony hoare remarked here language so far ahead its time that was not only improvement on its predecessors but also on nearly all its successors scheme programming language variant lisp that adopted block structure lexical scope algol also adopted wording revised report on algorithmic language scheme for its standards documents homage algol algol implementations timeline date there have been at least augmentations extensions derivations sublanguages algol name year author state description target cpu x1 algol august edsger w dijkstra jaap zonneveld netherlands first implementation algol electrologica x1 algol edgar t irons usa algol cdc burroughs algol several variants burroughs corporation with participation by hoare dijkstra others usa basis burroughs now unisys mcp based computers burroughs large systems their midrange well case algol usa simula was originally contracted simulation extension case algol univac gogol william mckeeman usa for odin time-sharing system pdp-1 dask algol peter naur jørn jensen denmark algol dask at regnecentralen smil algol torgil ekman carl-erik fröberg sweden algol smil at lund university gier algol peter naur jørn jensen denmark algol gier at regnecentralen dartmouth algol thomas eugene kurtz et al usa lgp-30 uss algol l petrone italy elliott algol c r hoare uk discussed his turing award lecture elliott & elliott algol translator g van der mey wl van der poel netherlands staatsbedrijf der posterijen telegrafie en telefonie zebra kidsgrove algol f g duncan uk english electric company kdf9 valgol val schorre usa test meta ii compiler compiler fp6000 algol roger moore canada written for saskatchewan power corp fp6000 whetstone brian randell lawford john russell uk atomic power division english electric company precursor ferranti pegasus national physical laboratories ace english electric deuce implementations english electric company kdf9 nu algol norway univac algek ussr minsk-22 алгэк based on algol-60 cobol support for economical tasks malgol publ viil m kotli & m rakhendi estonian ssr minsk-22 algams gams group гамс группа автоматизации программирования для машин среднего класса cooperation comecon academies science comecon minsk-22 later es evm besm algol/zam poland polish zam computer chinese algol china chinese characters expressed via symbol system dg/l usa dg eclipse family computers nase erik schoenfelder germany interpreter linux ms windows marst andrew makhorin russia algol-60 c translator all cpus supported by gnu compiler collection marst part gnu project burroughs dialects included special system programming dialects such espol newp properties algol officially defined had no i/o facilities implementations defined their own ways that were rarely compatible with each other contrast algol offered extensive library transput algol parlance for input/output facilities algol allowed for two evaluation strategies for parameter passing common call-by-value call-by-name call-by-name has certain effects contrast call-by-reference for example without specifying parameters value reference impossible develop procedure that will swap values two parameters if actual parameters that are passed are integer variable array that indexed by that same integer variable think passing pointer swapi function now that every time swap referenced it's reevaluated say i = = so every time swap referenced it'll return other combination values so on similar situation occurs with random function passed actual argument call-by-name known by many compiler designers for interesting thunks that are used implement donald knuth devised man boy test separate compilers that correctly implemented recursion non-local references this test contains example call-by-name algol reserved words restricted identifiers there are such reserved words standard burroughs large systems sub-language alpha array begin boolean comment continue direct do double else end event false file for format go if integer label list long own pointer procedure real step switch task then true until value while zip there are such restricted identifiers standard burroughs large systems sub-language accept attach by call case cause close deallocate define detach disable display div dump enable eql eqv exchange external fill forward geq gtr imp interrupt lb leq liberate line lock lss merge mod monitor mux neq no not on open out picture process procure programdump rb read release replace reset resize rewind run scan seek set skip sort space swap thru times wait when with write also names all intrinsic functions standard operators priority operator first arithmetic first ↑ power second × / real ÷ integer third + - second ≠ third ¬ not fourth ∧ fifth ∨ sixth ⊃ implication seventh ≡ equivalence examples portability issues code sample comparisons algol procedure absmaxa sizen m resulty subscriptsi k value n m array integer n m i k real y comment absolute greatest element matrix size n by m transferred y subscripts this element i k begin integer p q y = i = k = for p = step until n do for q = step until m do if absa > y then begin y = absa i = p k = q end end absmax implementations differ how text bold must be written word 'integer' including quotation marks must be used some implementations place integer above thereby designating special keyword following example how produce table using elliott algol floating point algol test' begin real abcd' read d' for a= step d until do begin print punch3££l' b = sina' c = cosa' print punch3samelinealigned16abc' end' end' algol family since algol had no i/o facilities there no portable hello world program algol following program could still will compile run on algol implementation for unisys a-series mainframe straightforward simplification code taken from language guide at university michigan-dearborn computer information science department hello world algol example program page begin file fkind=remote ebcdic array e replace e by hello world writef e end simpler program using inline format begin file fkind=remote writef end even simpler program using display statement begin displayhello world end alternative example using elliott algol i/o follows elliott algol used different characters for open-string-quote close-string-quote represented here by ‘ ’ program hifolks begin print ‘hello world’ end here's version for elliott algol a104 standard elliott used hole paper tape thus only had upper case code lacked any quote characters so £ uk pound sign was used for open quote question mark for close quote special sequences were placed double quotes eg ££l produced new line on teleprinter hifolks' begin print £hello world£l' end' ict series algol i/o version allowed input from paper tape punched card paper tape 'full' mode allowed lower case output was line printer note use '''' % 'program' hello 'begin' 'comment' open quote '' close '' printable space has be written % because spaces are ignored write text''hello%world'' 'end' 'finish' see also abc algol algol algol algol n algol algol w algol x atlas autocode coral edinburgh imp jensen's device iswim jovial neliac simula s-algol scheme programming language references knuth donald e december backus normal form vs backus naur form comm acm 735–6 doi101145/355588365140 acm award citation / peter naur hoare car december hints on programming language design pdf p this statement sometimes erroneously attributed edsger w dijkstra also involved implementing first algol compiler abelson hal dybvig r k et al rees jonathan clinger william eds revised3 report on algorithmic language scheme dedicated memory algol retrieved encyclopedia computer languages archived september at wayback machine daylight e g dijkstra's rallying cry for generalization advent recursive procedure late 1950s — early 1960s computer journal doi101093/comjnl/bxr002 kruseman aretz fej june dijkstra-zonneveld algol compiler for electrologica x1 software engineering pdf history computer science kruislaan sj amsterdam centrum wiskunde & informatica irons edgar t syntax directed compiler for algol communications acm vol p jan aho alfred v ravi sethi jeffrey d ullman compilers principles techniques tools 1st ed addison-wesley isbn 0-201-10194-7 section references therein algol manual for elliott algol icl series algol language icl technical publication further reading dijkstra edsger w algol translation algol translator for x1 making translator for algol pdf technical report amsterdam mathematisch centrum randell brian russell lawford john algol implementation translation use algol programs on computer academic press oclc design whetstone compiler one early published descriptions implementing compiler see related papers whetstone algol revisited whetstone kdf9 algol translator by brian randell external links revised report on algorithmic language algol by peter naur et al algol definition bnf syntax summary algol emperor's old clothes – hoare's acm turing award speech which discusses algol history his involvement marst free algol-to-c translator implementation algol for fp6000 discussion some implementation issues naur peter august european side last phase development algol acm sigplan notices 15–44 doi101145/960118808370 edinburgh university wrote compilers for algol60 later updated for algol60m based on their atlas autocode compilers initially bootstrapped from atlas kdf-9 edinburgh compilers generated code for icl1900 icl4/75 ibm360 clone icl2900 here bnf for algol60 icl2900 compiler source library documentation considerable test suite including brian wichmann's tests also there rather superficial algol60 atlas autocode source-level translator eric s raymond's retrocomputing museum among others link nase algol-60 interpreter written c nase interpreter stories b5000 people who were there dedicated algol computer hermann bottenbruch structure use algol doi 102172/4020495 numal library numerical procedures algol developed at stichting centrum wiskunde & informatica legal successor stichting mathematisch centrum legal owner algol resources translators documentation programs v t e iso standards by standard number list iso standards / iso romanizations / iec standards 1–9999 o o o o o o o o o o o o o o o o o o o 1073-1 o o o 8820-5 o o o o o o o o o -8-i o o o o o o o o 9000/9001 10000–19999 10118-3 o o o o o tr 12234-2 o o 13406-2 o o o o o o o o o o o wip 16612-2 ts 19775-1 19794-5 20000+ series 29199-2 o o o category authority control gnd 4141870-0 retrieved from https//enwikipediaorg/w/indexphptitle=algol60&oldid=749365236 categories algol algol programming language family academic programming languages procedural programming languages structured programming languages systems programming languages programming languages created computer science programming languages with iso standard hidden categories webarchive template wayback links wikipedia articles with gnd identifiers articles with example algol code navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages deutsch eesti فارسی galego 한국어 nederlands norsk bokmål ਪੰਜਾਬੀ português slovenčina türkçe 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 