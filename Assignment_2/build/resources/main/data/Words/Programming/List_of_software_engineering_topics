outline software engineering from wikipedia free encyclopedia   redirected from list software engineering topics jump navigation search see also index software engineering articles following outline provided overview topical guide software engineering software engineering – application systematic disciplined quantifiable approach development operation maintenance software that application engineering software contents technologies practices o software applications o software engineering topics + programming paradigm based on programming language technology + databases + graphical user interfaces + programming tools + libraries + design languages + patterns document many common programming project management techniques + processes methodologies + platforms + other practices + other tools o computer science topics o mathematics topics o life cycle phases o deliverables o business roles o management topics o business topics software engineering profession history software engineering o pioneers o disasters notable publications software engineering different languages related fields see also references external links technologies practices skilled software engineers use technologies practices from variety fields improve their productivity creating software improve quality delivered product software applications software engineers build software applications operating systems system software that people use applications influence software engineering by pressuring developers solve problems new ways for example consumer software emphasizes low cost medical software emphasizes high quality internet commerce software emphasizes rapid development business software o accounting software analytics o data mining closely related database o decision support systems airline reservations banking o automated teller machines o cheque processing o credit cards commerce o trade o auctions eg ebay o reverse auctions procurement o bar code scanners compilers o parsers o compiler optimization o interpreters o linkers o loaders communication o e-mail o instant messengers o voip o calendars — scheduling coordinating o contact managers computer graphics o animation o special effects for video film o editing o post-processing cryptography databases support almost every field embedded systems both software engineers traditional engineers write software control systems for embedded products o automotive software o avionics software o heating ventilating air conditioning hvac software o medical device software o telephony o telemetry engineering all traditional engineering branches use software extensively engineers use spreadsheets more than they ever used calculators engineers use custom software tools design analyze simulate their own projects like bridges power lines these projects resemble software many respects because work exists electronic documents goes through analysis design implementation testing phases software tools for engineers use tenets computer science well tenets calculus physics chemistry o computer aided design cad o electronic design automation eda o numerical analysis o simulation file o ftp o file sharing o file synchronization finance o bond market o futures market o stock market games o poker o multiuser dungeons o video games information systems support almost every field o lis management laboratory data o mis management financial personnel data logistics o supply chain management manufacturing o computer aided manufacturing cam o distributed control systems dcs music o music sequencers o sound effects o music synthesis network management o network management system o element management system o operations support system o business support systems networks internet o domain name system o protocols o routers office suites o word processors o spreadsheets o presentations operating systems o embedded o graphical o multitasking o real-time robotics signal processing encoding interpreting signals o image processing encoding interpreting visual information o speech processing o text recognition o handwriting recognition simulation supports almost every field o engineering software simulation can be cheaper build more flexible change than physical engineering model o sciences sciences o genomics traffic control o air traffic control o ship traffic control o road traffic control training o drill o simulation o testing visualization supports almost every field o architecture o engineering o sciences voting world wide web o browsers o servers software engineering topics many technologies practices are mostly confined software engineering though many these are shared with computer science programming languages ada apl b cobol pascal c c++ c clojure common lisp d coldfusion delphi dylan eiffel erlang fortran f groovy java lasso ml ocaml perl php pl/sql prolog haskell python ruby scala scheme smalltalk tcl t-sql verilog vhdl visual basic visual basic net assembly language • • • scripting language • • • list programming languages programming paradigm based on programming language technology object-oriented programming aspect-oriented programming functional decomposition structured programming rule-based programming databases hierarchical object relational sql/xml sql mysql nosql graphical user interfaces gtk+ gimp toolkit wxwidgets ultimate++ qt toolkit fltk programming tools configuration management source code management o cvs o subversion o git o mercurial o rcs o gnu arch o libresource synchronizer o team foundation server o visual studio team services build tools o make o rake o cabal o ant o cades o nant o maven o final builder o gradle o team foundation server o visual studio team services o visual build pro editors o integrated development environments ides o text editors o word processors parser creation tools o yacc/bison static code analysis tools libraries component-based software engineering design languages unified modeling language uml patterns document many common programming project management techniques anti-patterns patterns processes methodologies agile o agile software development o crystal clear o extreme programming o lean software development o rapid application development rad o rational unified process o scrum management heavyweight o cleanroom o iso/iec — software life cycle processes o iso iso process models o cmm cmmi/scampi o iso spice metamodels o iso/iec o spem platforms platform combines computer hardware operating system platforms grow more powerful less costly applications tools grow more widely available brew cray supercomputers dec minicomputers ibm mainframes linux pcs classic mac os macos pcs microsoft net palm pdas sun microsystems solaris windows pcs wintel symbian os other practices communication method engineering pair programming performance engineering programming productivity refactoring software inspections/code reviews software reuse systems integration teamwork other tools decision tables feature user stories use cases computer science topics skilled software engineers know lot computer science including what possible impossible what easy hard for software algorithms well-defined methods for solving specific problems o searching o sorting o parsing o numerical analysis compiler theory o yacc/bison data structures well-defined methods for storing retrieving data o lists o trees o hash tables computability some problems cannot be solved at all o list unsolved problems computer science o halting problem complexity some problems are solvable principle yet unsolvable practice o np completeness o computational complexity theory formal methods o proof correctness o program synthesis adaptive systems o neural networks o evolutionary algorithms mathematics topics discrete mathematics key foundation software engineering number representation set computer science bags graphs o sequences o trees o graph data structure logic o deduction o first-order logic o higher-order logic o combinatory logic induction combinatorics other domain knowledge statistics decision theory type theory life cycle phases development life cycle phase o requirements gathering / analysis o software architecture o computer programming o testing detects bugs + black box testing + white box testing o quality assurance ensures compliance with process product life cycle phase project lifecycle o inception o first development o major release o minor release o bug fix release o maintenance o obsolescence release development stage near end release cycle o alpha o beta o gold master o software development lifecycle o waterfall model — structured programming stepwise refinement o ssadm o spiral model — iterative development o v-model o agile software development o dsdm o chaos model — chaos strategy deliverables deliverables must be developed for many se projects software engineers rarely make all these deliverables themselves they usually cooperate with writers trainers installers marketers technical support people others who make many these deliverables application software — software database — schemas data documentation online and/or print faq readme release notes help for each role o user o administrator o manager o buyer administration maintenance policy what should be backed-up checked configured installers migration o upgrade from previous installations o upgrade from competitor's installations training materials for each role o user o administrator o manager o buyer support info for computer support groups marketing sales materials o white papers explain technologies used applications business roles operations o users o administrators o managers o buyers development o analysts o programmers o testers o managers business o consulting — customization installation applications o sales o marketing o legal — contracts intellectual property rights o privacy privacy engineering o support — helping customers use applications o personnel — hiring training qualified personnel o finance — funding new development academe o educators o researchers management topics leadership o coaching o communication o listening o motivation o vision ses are good at this o example everyone follows good example best human resource management o hiring getting people into organization o training o evaluation project management o goal setting o customer interaction rethink o estimation o risk management o change management process management o software development processes o metrics business topics quality programs o malcolm baldrige national quality award o six sigma o total quality management tqm software engineering profession software engineering demographics software engineering economics ccse history software engineering software engineering professionalism o ethics o licensing legal o intellectual property o consumer protection history software engineering history software engineering pioneers many people made important contributions se technologies practices applications john backus fortran first optimizing compiler bnf vic basili experience factory fl bauer stack principle popularized term software engineering kent beck refactoring extreme programming pair programming test-driven development tim berners-lee world wide web barry boehm se economics cocomo spiral model grady booch object-oriented design uml fred brooks managed system os wrote mythical man-month no silver bullet larry constantine structured design coupling cohesion edsger dijkstra wrote notes on structured programming discipline programming go statement considered harmful algorithms formal methods pedagogy michael fagan software inspection tom gilb software metrics software inspection evolutionary delivery evo grace hopper first compiler mark cobol nanoseconds watts humphrey capability maturity model personal software process fellow software engineering institute jean ichbiah ada michael jackson jackson structured programming jackson system development bill joy berkeley unix vi java brian kernighan c unix donald knuth wrote art computer programming tex algorithms literate programming bertrand meyer design by contract eiffel programming language peter g neumann risks digest acm sigsoft david parnas module design social responsibility professionalism david pearson computer scientist developed icl cades software engineering system jef raskin developed original macintosh gui authored humane interface dennis ritchie c unix winston w royce waterfall model mary shaw software architecture richard stallman founder free software foundation linus torvalds linux kernel free software / open source development will tracz reuse acm software engineering notes gerald weinberg wrote psychology computer programming jeanette wing formal specifications ed yourdon structured programming wrote decline fall american programmer see also list programmers list computer scientists list software moguls disasters software has played role many high-profile disasters ariane flight mars probe denver international airport taurus — uk share settlement system dematerialised central share depository therac-25 — radiation therapy machine responsible for six overdoses due faulty software airbus a320 — airbus a320 while was controversial software engineering circles being first civilian fly-by-wire aircraft airbus flight control systems computer has final say on all decisions meaning safety passengers depends upon accuracy software specification competence engineering teams producing multiple independent software stacks strasbourg a320 crash jan partially related software that poor user interface design was contributing factor failure at dharan — patriot missile clock issue notable publications about face essentials user interface design by alan cooper about user interface design isbn 0-7645-2641-3 capability maturity model by watts humphrey written for software engineering institute emphasizing management process see managing software process isbn 0-201-18095-2 cathedral bazaar by eric raymond about open source development decline fall american programmer by ed yourdon predicts end software development us isbn 0-13-191958-x design patterns by erich gamma richard helm ralph johnson john vlissides isbn 0-201-63361-2 extreme programming explained by kent beck isbn 0-321-27865-8 go statement considered harmful by edsger dijkstra internet innovation open sourceactors network — first monday article by ilkka tuomi source mythical man-month by fred brooks about project management isbn 0-201-83595-9 object-oriented analysis design by grady booch isbn 0-8053-5340-2 peopleware by tom demarco tim lister isbn 0-932633-43-9 pragmatic engineer versus scientific designer by e w dijkstra principles software engineering management by tom gilb about evolutionary processes isbn 0-201-19246-2 psychology computer programming by gerald weinberg written independent consultant partly about his years at ibm isbn 0-932633-42-0 refactoring improving design existing code by martin fowler kent beck john brant william opdyke don roberts isbn 0-201-48567-2 pragmatic programmer from journeyman master by andrew hunt david thomas isbn 0-201-61622-x see also important publications software engineering cs software engineering different languages arabic software engineering called handast albrmjeyat هندسة البرمجيات catalan software engineering called enginyeria del software chinese software engineering called ruǎnjiàn gōngchéng软件工程 danish software engineering called software ingeniør dutch software engineering called software ontwikkeling french software engineering called génie logiciel persian software engineering called mohandesi-e narm afzar مهندسی نرم افزار german software engineering called softwaretechnik hebrew software engineering called הנדסת תוכנה icelandic software engineering called hugbúnaðarverkfræði italian software engineering called ingegneria del software korean software engineering called 소프트웨어 공학 malay software engineering called kejuruteraan perisian norwegian software engineering called programvareutvikling polish software engineering called inżynieria oprogramowania portuguese software engineering called engenharia de software spanish software engineering called ingeniería de software turkish software engineering called yazılım mühendisliği urdu software engineering called سافٹ ویئر انجینئرنگ greek software engineering called τεχνολογία λογισμικού related fields computer science information technology traditional engineering o computer engineering o electrical engineering software engineering o domain engineering o information engineering o knowledge engineering o user interface engineering o web engineering arts sciences o mathematics o computer science o information science application software o information systems programming systems engineering see also search-based software engineering swebok software engineering body knowledge ccse computing curriculum for software engineering computer terms etymology origins computer terms complexity scaling software brittleness problem second system syndrome optimization source code escrow feature interaction problem certification software engineering references pierre bourque robert dupuis eds guide software engineering body knowledge - version ieee computer society pp 1–1 isbn 0-7695-2330-7 cs1 maint uses editors parameter link external links find more aboutsoftware engineeringat wikipedia's sister projects definitions from wiktionary media from commons news from wikinews quotations from wikiquote texts from wikisource textbooks from wikibooks learning resources from wikiversity this outline displayed mindmap at wikimindmapcom guide software engineering body knowledge swebok professional organizations british computer society association for computing machinery ieee computer society professionalism se code ethics professional licensing texas education ccse undergraduate curriculum standards ieee software engineering standards internet engineering task force iso government organizations european software institute software engineering institute agile organization promote agile software development test driven development extreme programming other organizations online community for software engineers software engineering society demographics us bureau labor statistics on se surveys david redmiles page from university california site other full text pdf from nato conference garmisch computer risks peter g neumann's risks column v t e outlines general reference culture arts geography places health fitness history events mathematics logic natural physical sciences people self philosophy thinking religion belief systems society social sciences technology applied sciences retrieved from https//enwikipediaorg/w/indexphptitle=outlineofsoftwareengineering&oldid=747134933 categories wikipedia outlines software engineering computing-related lists hidden categories cs1 maint uses editors parameter all articles with unsourced statements articles with unsourced statements from february pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages bahasa melayu 中文 edit links this page was last modified on october at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 