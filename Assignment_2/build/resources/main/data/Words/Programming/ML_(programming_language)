ml programming language from wikipedia free encyclopedia jump navigation search this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed may learn how when remove this template message ml paradigm multi-paradigm imperative functional designed by robin milner & others at university edinburgh first appeared years ago typing discipline static strong inferred safe dialects standard ml caml influenced by iswim influenced clojure coq cyclone c++ elm f haskell idris miranda nemerle opa erlang rust scala ml general-purpose functional programming language developed by robin milner others early 1970s at university edinburgh whose syntax inspired by iswim has roots lisp language has been characterized lisp with types historically ml stands for metalanguage was conceived develop proof tactics lcf theorem prover whose language pplambda combination first-order predicate calculus simply-typed polymorphic lambda calculus had ml its metalanguage known for its use hindley–milner type system whose type inference algorithm can automatically assign types most expressions without requiring explicit type annotations additionally use this algorithm ensures type safety—there formal proof that well-typed ml program does not cause runtime type errors contents overview examples o factorial o list reverse see also references books external links overview features ml include call-by-value evaluation strategy first-class functions automatic memory management through garbage collection parametric polymorphism static typing type inference algebraic data types pattern matching exception handling ml uses static scoping rules ml can be referred impure functional language because although encourages functional programming does allow side-effects like languages such lisp but unlike purely functional language such haskell like most programming languages ml uses eager evaluation meaning that all subexpressions are always evaluated though lazy evaluation can be achieved through use closures thus one can create use infinite streams haskell but their expression indirect today there are several languages ml family two major dialects are standard ml sml caml but others exist including f — language that microsoft supports for their net platform ideas from ml have influenced numerous other languages like haskell cyclone nemerle ats elm ml's strengths are mostly applied language design manipulation compilers analyzers theorem provers but general-purpose language also used bioinformatics financial systems applications including genealogical database peer-to-peer client/server program etc examples following examples use syntax standard ml other most widely used ml dialect ocaml differs various insubstantial ways factorial factorial function expressed pure ml fun fac int int = | fac n int int = n fac n - this describes factorial recursive function with single terminating base case similar descriptions factorials found mathematics textbooks much ml code similar mathematics facility syntax part definition shown optional describes types this function notation e t can be read expression e has type t for instance argument n assigned type integer int fac n int result applying fac integer n also has type integer function fac whole then has type function from integer integer int -> int that fac accepts integer argument returns integer result thanks type inference type annotations can be omitted will be derived by compiler rewritten without type annotations example looks like fun fac = | fac n = n fac n - function also relies on pattern matching important part ml programming note that parameters function are not necessarily parentheses but separated by spaces when function's argument zero will return integer one for all other cases second line tried this recursion executes function again until base case reached this implementation factorial function not guaranteed terminate since negative argument causes infinite descending chain recursive calls more robust implementation would check for nonnegative argument before recursing follows fun fact n = let fun fac = | fac n = n fac n - if n retrieved robin milner theory type polymorphism programming journal computer system sciences – tate bruce daoud fred dees ian moffitt jack elm seven more languages seven weeks book version p10-november ed pragmatic programmers llc pp isbn 978-1-941222-15-7 on page elm creator evan czaplicki says 'i tend say “elm ml-family language” get at shared heritage all these languages' books definition standard ml robin milner mads tofte robert harper mit press revised edition adds author david macqueen mit press isbn 0-262-63181-4 commentary on standard ml robin milner mads tofte mit press isbn 0-262-63137-7 ml for working programmer lawrence paulson cambridge university press isbn 0-521-57050-6 harper robert programming standard ml pdf carnegie mellon university elements ml programming jeffrey d ullman prentice-hall isbn 0-13-790387-1 external links standard ml new jersey another popular implementation f ml implementation using microsoft net framework mlton whole-program optimizing standard ml compiler sml successor ml cakeml read-eval-print loop version ml with formally verified runtime translation assembler retrieved from https//enwikipediaorg/w/indexphptitle=mlprogramminglanguage&oldid=750216930 categories academic programming languages functional languages procedural programming languages ml programming language family pattern matching programming languages statically typed programming languages programming languages created hidden categories articles needing additional references from may all articles needing additional references all articles with unsourced statements articles with unsourced statements from may articles with unsourced statements from august articles with unsourced statements from april pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages aragonés català deutsch ελληνικά español فارسی français 한국어 hrvatski italiano עברית nederlands 日本語 polski português русский српски / srpski srpskohrvatski / српскохрватски suomi svenska тоҷикӣ українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 