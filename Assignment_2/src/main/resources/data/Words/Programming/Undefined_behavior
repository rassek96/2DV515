undefined behavior from wikipedia free encyclopedia jump navigation search not be confused with undefined value unspecified behavior this article includes list references but its sources remain unclear because has insufficient inline citations please help improve this article by introducing more precise citations october learn how when remove this template message computer programming undefined behavior ub result executing computer code behaviour which not prescribed by language specification which code adheres for current state program eg memory this happens when translator source code makes certain assumptions but these assumptions are not satisfied during execution behavior some programming languages - most famously c c++ - undefined some cases standards for these languages semantics certain operations undefined implementation allowed assume that such operations never occur standard-conforming program code implementation will be considered correct whatever does such cases analogous don't-care terms digital logic this assumption can make various program transformations valid simplify their proof correctness giving flexibility implementation result compiler can often make more optimizations responsibility programmer write code that never invokes undefined behavior although compiler implementations are allowed issue diagnostics when this happens undefined behavior often unpredictable frequent cause software bugs c community undefined behavior may be humorously referred nasal demons after compstdc post that explained undefined behavior allowing compiler do anything chooses even make demons fly out your nose under some circumstances there can be specific restrictions on undefined behavior for example instruction set specifications cpu might leave behavior some forms instruction undefined but if cpu supports memory protection then specification will probably include blanket rule stating that no user-accessible instruction may cause hole operating system's security so actual cpu would be permitted corrupt user registers response such instruction but would not be allowed for example switch into supervisor mode contents benefits from undefined behavior risks undefined behavior examples c c++ see also references further reading external links benefits from undefined behavior documenting operation undefined behavior allows compilers assume that this operation will never happen conforming program this gives compiler more information about code this information can lead more optimization opportunities example for c language int foounsigned x { int value = value += x if value = thus if call function bar can be ignored by compiler since if has no side effects its condition will never be satisfied code above therefore semantically equivalent int foounsigned x { int value = value += x return value } had compiler been forced assume that signed integer overflow has wraparound behavior then transformation above would not have been legal such optimizations become hard spot by humans when code more complex other optimizations like inlining take place another benefit from allowing signed integer overflow be undefined that makes possible store manipulate variable's value processor register that larger than size variable source code for example if type variable specified source code narrower than native register width such int on 64-bit machine common scenario then compiler can safely use signed 64-bit integer for variable machine code produces without changing defined behaviour code if behaviour 32-bit integer under overflow conditions was depended upon by program then compiler would have insert additional logic when compiling for 64-bit machine because overflow behaviour most machine code instructions depends on register width risks undefined behavior c c++ standards are littered with undefined behavior throughout which offer increased liberty compiler implementations at expense limiting what users language can do particular there entire appendix section dedicated non-exhaustive listing common sources undefined behavior c moreoever compilers are not required diagnose code that relies on undefined behavior hence common for programmers even experienced ones unintentionally rely on undefined behavior either by mistake simply because they are not well-versed rules language that can span over hundreds pages this can result bugs that occur when optimizations are enabled on compiler when compiler different vendor version used scenarios where security critical undefined behavior can lead security vulnerabilities software when gcc's developers changed their compiler such that omitted certain overflow checks that relied on undefined behavior cert issued warning against newer versions compiler linux weekly news pointed out that same behavior was observed pathscale c microsoft visual c++ several other compilers warning was later amended warn about various compilers html versions earlier left error handling undefined over time pages started relying on unspecified error-recovery implemented popular browsers this caused difficulties for vendors less-popular browsers who were forced reverse-engineer implement bug compatible error recovery this has led de facto standard ie html5 that was much more complicated than could have been if this behavior was specified from start examples c c++ c use any automatic variable before has been initialized yields undefined behavior does integer division by zero indexing array outside its defined bounds see buffer overflow general any instance undefined behavior leaves abstract execution machine unknown state any subsequent behavior also undefined if not required that compiler diagnose undefined behavior programs invoking undefined behavior may compile run producing correct results incorrect results have any other behavior because this undefined behavior can create errors that are difficult detect attempting modify string literal causes undefined behavior char p = wikipedia // valid c ill-formed c++11 deprecated c++98/c++03 p = 'w' // undefined behavior integer division by zero results undefined behavior int x = return x / // undefined behavior certain pointer operations may result undefined behavior int arr = {0 3} int p = arr + // undefined behavior reaching end value-returning function other than main without return statement results undefined behavior if value function call used by caller int f { } / undefined behavior if value function call used/ modifying object between two sequence points more than once produces undefined behavior worth mentioning that there are considerable changes what causes undefined behavior relation sequence points c++11 following example will however cause undefined behavior both c++ c i = i++ + // undefined behavior when modifying object between two sequence points reading value object for any other purpose than determining value be stored also undefined behavior = i++ // undefined behavior printf%d %d\n ++n power2 n // also undefined behavior see also implementation-defined behavior halt catch fire references lattner chris may what every c programmer should know about undefined behavior llvm project blog llvmorg retrieved may nasal demons jargon file retrieved june iso/iec §j2 vulnerability note vu162289 — gcc silently discards some wraparound checks vulnerability notes database cert april archived from original on april jonathan corbet april gcc pointer overflows linux weekly news vulnerability note vu162289 — c compilers may silently discard some wraparound checks vulnerability notes database cert october iso/iec iso/iec 148822003e programming languages - c++ §2134 string literals para iso/iec iso/iec 148822003e programming languages - c++ §56 multiplicative operators para iso/iec iso/iec 148822003e programming languages - c++ §57 additive operators para iso/iec iso/iec 98992007e programming languages - c §69 external definitions para ansi x3159-1989 programming language c footnote order evaluation - cppreferencecom encppreferencecom retrieved iso/iec iso/iec 98991999e programming languages - c §65 expressions para further reading peter van der linden expert c programming isbn 0-13-177429-8 ub canaries april john regehr university utah usa external links corrected version c99 standard look at section for pragma retrieved from https//enwikipediaorg/w/indexphptitle=undefinedbehavior&oldid=747817560 categories programming language implementation c programming language c++ hidden categories articles lacking in-text citations from october all articles lacking in-text citations all articles with unsourced statements articles with unsourced statements from june articles with example c++ code pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages deutsch español فارسی norsk bokmål português русский српски / srpski українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 