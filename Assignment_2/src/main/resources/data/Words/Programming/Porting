porting from wikipedia free encyclopedia jump navigation search this article about moving software different system for engine tuning see porting engine for porting telephone numbers see local number portability this article has multiple issues please help improve discuss these issues on talk page learn how when remove these template messages this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed october learn how when remove this template message has been suggested that this article be merged with software portability discuss proposed since december learn how when remove this template message software engineering porting process adapting software so that executable program can be created for computing environment that different from one for which was originally designed eg different cpu operating system third party library term also used when software/hardware changed make them usable different environments software portable when cost porting new platform significantly less than cost writing from scratch lower cost porting software relative its implementation cost more portable said be contents etymology history porting compilers porting video games see also notes references etymology term port derived from latin portare meaning carry when code not compatible with particular operating system architecture code must be carried new system term not generally applied process adapting software run with less memory on same cpu operating system nor applied rewriting source code different language ie language conversion translation software developers often claim that software they write portable meaning that little effort needed adapt new environment amount effort actually needed depends on several factors including extent which original environment source platform differs from new environment target platform experience original authors knowing which programming language constructs third party library calls are unlikely be portable amount effort invested by original authors only using portable constructs platform specific constructs often provide cheaper solution history number significantly different cpus operating systems used on desktop today much smaller than past dominance x86 architecture means that most desktop software never ported different cpu that same market choice operating systems has effectively been reduced three microsoft windows os x bsd unix/ linux however embedded systems mobile markets portability remains significant issue with arm being widely used alternative international standards such those promulgated by iso greatly facilitate porting by specifying details computing environment way that helps reduce differences between different standards-conforming platforms writing software that stays within bounds specified by these standards represents practical although nontrivial effort porting such program between two standards-compliant platforms such posix1 can be just matter loading source code recompiling on new platform however practitioners often find that various minor corrections are required due subtle platform differences most standards suffer from gray areas where differences interpretation standards lead small variations from platform platform there also exists ever-increasing number tools facilitate porting such gnu compiler collection which provides consistent programming languages on different platforms autotools which automates detection minor variations environment adapts software accordingly before compilation compilers for some high-level programming languages eg eiffel esterel gain portability by outputting source code another high level intermediate language such c for which compilers for many platforms are generally available two activities related but distinct from porting are emulating cross-compiling porting compilers instead translating directly into machine code modern compilers translate machine independent intermediate code order enhance portability compiler minimize design efforts intermediate language defines virtual machine that can execute all programs written intermediate language machine defined by its language vice versa intermediate code instructions are translated into equivalent machine code sequences by code generator create executable code also possible skip generation machine code by actually implementing interpreter jit for virtual machine use intermediate code enhances portability compiler because only machine dependent code interpreter code generator compiler itself needs be ported target machine remainder compiler can be imported intermediate code then further processed by ported code generator interpreter thus producing compiler software directly executing intermediate code on interpreter machine independent part can be developed tested on another machine host machine this greatly reduces design efforts because machine independent part needs be developed only once create portable intermediate code interpreter less complex therefore easier port than code generator because not able do code optimizations due its limited view program code only sees one instruction at time you need sequence do optimization some interpreters are extremely easy port because they only make minimal assumptions about instruction set underlying hardware result virtual machine even simpler than target cpu writing compiler sources entirely programming language compiler supposed translate makes following approach better known compiler bootstrapping feasible on target machine port interpreter this needs be coded assembly code using already present assembler on target adapt source code generator new machine execute adapted source using interpreter with code generator source input this will generate machine code for code generator difficult part coding optimization routines done using high-level language instead assembly language target according designers bcpl language interpreted code bcpl case more compact than machine code typically by factor two one interpreted code however runs about ten times slower than compiled code on same machine designers java programming language try take advantage compactness interpreted code because java program may need be transmitted over internet before execution can start on target's java virtual machine porting video games port video gaming porting video games redirect here for other uses see video game port porting also term used when video game designed run on one platform be arcade video game console personal computer converted run on different platform earlier video game ports were often not true ports but rather reworked versions games however many 21st century video games are developed using software often c++ that can output code for one more consoles well for pc without need for actual porting instead relying on common porting individual component libraries many early ports suffered significant gameplay quality issues because computers greatly differed lord british stated that origin systems developed computer games for apple ii series first then ported them commodore atari because latter machines' sprites other sophisticated features made porting from them apple far more difficult perhaps even impossible apple version will never get done reviews complained atari ports games like crush crumble chomp castle wolfenstein that retained apple's lousy sound black-white-green-purple graphics others worked differently ozark softscape for example wrote mule for atari first because preferred develop for most advanced computers removing altering features necessary during porting such policy was not always feasible dani bunten stated that mule can't be done for apple when game referred being arcade perfect this means that game has been ported from arcade version another platform such console computer without any alterations game's workings this means that graphics sound gameplay along with game's other characteristics including bugs are identical arcade version console port game that was originally made for console such wii xbox before identical version created which can be played on personal computer any other console this term has been widely used by gaming community process porting game from console pc often regarded negatively due higher levels performance that computers generally have been underutilized partially due console hardware being fixed throughout their run with games being developed for console specs while pcs become more powerful hardware evolves but also due ported games sometimes being poorly optimized for pcs lazily ported whilst broadly similar architectural differences may exist such use unified memory on console see also software portability language binding console emulator list system quality attributes source port write once compile anywhere poshlib cross-platform program transformation notes tanenbaum section - languageslevels virtual machines p describes terms their relations tanenbaum chapter - introduction p explains translation interpretation richardswhitby-strevens section - introduction p explains compiler portability using intermediate code richardswhitby-strevens section - bootstrapping process intcode p explains role intcode interpreter richardswhitby-strevens section - example p gives example translation bcpl program into intcode for interpreter b bunten dan december dispatches / insights from strategy game design front computer gaming world p |access-date= requires |url= help cgw computer game conference computer gaming world panel discussion october p |access-date= requires |url= help stanton jeffrey wells robert p rochowansky sandra mellid michael eds addison-wesley book atari software addison-wesley pp isbn 0-201-16454-x bernstein harvey may beyond castle wolfenstein antic p retrieved january references martin richards colin whitby-strevens bcpl language its compiler isbn 0-521-28681-6 andrew s tanenbaum structured computer organization 10th print isbn 0-13-854605-3 retrieved from https//enwikipediaorg/w/indexphptitle=porting&oldid=749648903 categories source code hidden categories pages using citations with accessdate no url articles needing additional references from october all articles needing additional references articles be merged from december all articles be merged all articles with unsourced statements articles with unsourced statements from april pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages العربية deutsch فارسی français 한국어 hrvatski bahasa indonesia italiano עברית bahasa melayu nederlands 日本語 norsk bokmål polski português русский slovenčina српски / srpski svenska türkçe українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 