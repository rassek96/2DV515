c++ from wikipedia free encyclopedia jump navigation search c++ paradigm multi-paradigm procedural functional object-oriented generic designed by bjarne stroustrup first appeared years ago stable release iso/iec / december months ago typing discipline static nominative partially inferred implementation language c++ os cross-platform filename extensions cc cpp cxx c c++ h hh hpp hxx h++ website isocpporg major implementations llvm clang gcc microsoft visual c++ embarcadero c++builder intel c++ compiler ibm xl c++ influenced by c simula algol ada clu ml influenced ada c99 c chapel d java lua rust python perl php c++ programming at wikibooks c++ pronounced cee plus plus /ˈsiː plʌs plʌs/ general-purpose programming language has imperative object-oriented generic programming features while also providing facilities for low-level memory manipulation was designed with bias toward system programming embedded resource-constrained large systems with performance efficiency flexibility use its design highlights c++ has also been found useful many other contexts with key strengths being software infrastructure resource-constrained applications including desktop applications servers eg e-commerce web search sql servers performance-critical applications eg telephone switches space probes c++ compiled language with implementations available on many platforms provided by various organizations including free software foundation fsf's gcc llvm microsoft intel ibm c++ standardized by international organization for standardization iso with latest standard version ratified published by iso december iso/iec informally known c++14 c++ programming language was initially standardized iso/iec which was then amended by c++03 iso/iec standard current c++14 standard supersedes these c++11 with new features enlarged standard library before initial standardization c++ was developed by bjarne stroustrup at bell labs since extension c language he wanted efficient flexible language similar c which also provided high-level features for program organization many other programming languages have been influenced by c++ including c d java newer versions c after contents history o etymology o philosophy o standardization language o object storage + static storage duration objects + thread storage duration objects + automatic storage duration objects + dynamic storage duration objects o templates o objects + encapsulation + inheritance o operators operator overloading o polymorphism + static polymorphism + dynamic polymorphism inheritance virtual member functions o lambda expressions o exception handling standard library compatibility o with c criticism see also references further reading external links history bjarne stroustrup creator c++ bjarne stroustrup danish computer scientist began work on predecessor c++ c with classes motivation for creating new language originated from stroustrup's experience programming for his phd thesis stroustrup found that simula had features that were very helpful for large software development but language was too slow for practical use while bcpl was fast but too low-level be suitable for large software development when stroustrup started working at&t bell labs he had problem analyzing unix kernel with respect distributed computing remembering his phd experience stroustrup set out enhance c language with simula-like features c was chosen because was general-purpose fast portable widely used well c simula's influences other languages also influenced c++ including algol ada clu ml initially stroustrup's c with classes added features c compiler cpre including classes derived classes strong typing inlining default arguments c with classes was renamed c++ ++ being increment operator c adding new features that included virtual functions function name operator overloading references constants type-safe free-store memory allocation new/delete improved type checking bcpl style single-line comments with two forward slashes // furthermore included development standalone compiler for c++ cfront first edition c++ programming language was released which became definitive reference for language there was not yet official standard first commercial implementation c++ was released october same year c++ was released followed by updated second edition c++ programming language new features included multiple inheritance abstract classes static member functions const member functions protected members annotated c++ reference manual was published this work became basis for future standard later feature additions included templates exceptions namespaces new casts boolean type after update c++ evolved relatively slowly until c++11 standard was released adding numerous new features enlarging standard library further providing more facilities c++ programmers after minor c++14 update released december various new additions are planned for etymology according stroustrup name signifies evolutionary nature changes from c this name credited rick mascitti mid-1983 was first used december when mascitti was questioned informally about naming he indicated that was given tongue-in-cheek spirit name comes from c's ++ operator which increments value variable common naming convention using + indicate enhanced computer program during c++'s development period language had been referred new c c with classes before acquiring its final name philosophy throughout c++'s life its development evolution has been informally governed by set rules that its evolution should follow must be driven by actual problems its features should be useful immediately real world programs every feature should be implementable with reasonably obvious way do so programmers should be free pick their own programming style that style should be fully supported by c++ allowing useful feature more important than preventing every possible misuse c++ should provide facilities for organising programs into well-defined separate parts provide facilities for combining separately developed parts no implicit violations type system but allow explicit violations that those explicitly requested by programmer user-created types need have same support performance built-in types unused features should not negatively impact created executables eg lower performance there should be no language beneath c++ except assembly language c++ should work alongside other existing programming languages rather than fostering its own separate incompatible programming environment if programmer's intent unknown allow programmer specify by providing manual control standardization year c++ standard informal name iso/iec c++98 iso/iec c++03 iso/iec c++11 iso/iec c++14 be determined c++17 be determined c++20 c++ standardized by iso working group known jtc1/sc22/wg21 so far has published four revisions c++ standard currently working on next revision c++17 iso working group standardized c++ for first time iso/iec which informally known c++98 published new version c++ standard called iso/iec which fixed problems identified c++98 next major revision standard was informally referred c++0x but was not released until c++11 included many additions both core language standard library c++14 also known c++1y was released small extension c++11 featuring mainly bug fixes small improvements draft international standard ballot procedures completed mid-august after c++14 major revision informally known c++17 c++1z planned for which almost feature-complete part standardization process iso also publishes technical reports specifications iso/iec tr on use c++ embedded systems on performance implications c++ language library features iso/iec tr also known c++ technical report on library extensions mostly integrated into c++11 iso/iec tr on special mathematical functions iso/iec tr on decimal floating point arithmetic iso/iec ts on standard filesystem library iso/iec ts on parallel versions standard library algorithms iso/iec ts on software transactional memory iso/iec ts on new set library extensions some which are already integrated into c++17 iso/iec ts on c++ concepts more technical specifications are development pending approval including concurrency library extensions networking standard library ranges modules language c++ language has two main components direct mapping hardware features provided primarily by c subset zero-overhead abstractions based on those mappings stroustrup describes c++ light-weight abstraction programming language for building using efficient elegant abstractions offering both hardware access abstraction basis c++ doing efficiently what distinguishes from other languages c++ inherits most c's syntax following bjarne stroustrup's version hello world program that uses c++ standard library stream facility write message standard output include int main { stdcout returntype { functionbody } list supports definition closures such lambda expressions are defined standard syntactic sugar for unnamed function object example lambda function may be defined follows int x int y -> int { return x + y } exception handling exception handling used communicate existence runtime problem error from where was detected where issue can be handled permits this be done uniform manner separately from main code while detecting all errors should error occur exception thrown raised which then caught by nearest suitable exception handler exception causes current scope be exited also each outer scope propagation until suitable handler found calling turn destructors any objects these exited scopes at same time exception presented object carrying data about detected problem exception-causing code placed inside try block exceptions are handled separate catch blocks handlers each try block can have multiple exception handlers visible example below include include include int main { try { stdvector vec{3431} int i{vecat4} // throws exception stdoutofrange indexing for vec from 0-3 not 1-4 } // exception handler catches stdoutofrange which thrown by vecat4 catch stdoutofrange& e { stdcerr bjarne stroustrup c++ standard library comparison programming languages international organization for standardization list c++ compilers outline c++ c++ programming language references stroustrup bjarne c++ programming language third ed isbn 0-201-88954-4 oclc naugler david may c for c++ java programmer conference workshop journal computing sciences colleges although c has been strongly influenced by java has also been strongly influenced by c++ best viewed descendant both c++ java chapel spec acknowledgements pdf cray inc retrieved harry h chaudhary july cracking java programming interview 2000+ java interview que/ans retrieved may b c stroustrup b may lecturethe essence c++ university edinburgh retrieved june stroustrup bjarne february c++ applications stroustrupcom retrieved may b c iso/iec international organization for standardization b stroustrup bjarne march bjarne stroustrup's faq when was c++ invented stroustrupcom retrieved september b stroustrup bjarne evolving language for real world c++ 1991-2006 pdf b c stroustrup bjarne history c ++ 1979− pdf stroustrup bjarne c++ programming language first ed retrieved september stroustrup bjarne c++ programming language second ed retrieved september b next standard after c++17 will be c++20 bjarne stroustrup's faq – where did name c++ come from retrieved january c for c++ programmers northeastern university retrieved september iso/iec international organization for standardization iso/iec international organization for standardization iso/iec international organization for standardization we have international standard c++0x unanimously approved sutter's mill b future c++ we have c++14 standard c++ recent milestones c++17 nearly feature-complete second round tses now under development iso/iec tr international organization for standardization iso/iec tr international organization for standardization iso/iec tr international organization for standardization iso/iec tr international organization for standardization iso/iec ts international organization for standardization iso/iec ts international organization for standardization iso/iec ts international organization for standardization iso/iec ts international organization for standardization iso/iec ts international organization for standardization see list at visited january b stroustrup interviewed by sergio de simone april stroustrup thoughts on c++17 - interview retrieved july stroustrup bjarne c++ programming language special ed addison-wesley p isbn 0-201-70073-5 stroustrup bjarne open issues for c++ programming language 3rd edition this code copied directly from bjarne stroustrup's errata page p he addresses use '\n' rather than stdendl also see can i write void main for explanation implicit return main function this implicit return not available other functions iso/iec iso/iec 148822003e programming languages – c++ §663 return statement para iso/iec iso/iec 148822003e programming languages – c++ §361 main function para iso/iec programming languages – c++11 draft n3797 §37 storage duration iso/iec programming languages – c++11 draft n3797 §371 static storage duration iso/iec programming languages – c++11 draft n3797 §372 thread storage duration iso/iec programming languages – c++11 draft n3797 §373 automatic storage duration iso/iec programming languages – c++11 draft n3797 §374 dynamic storage duration basicstcdynamic b nobody understands c++ part template code bloat emptycrate software travel stuff may retrieved march on occasion you will read hear someone talking about c++ templates causing code bloat i was thinking about other day thought myself self if code does exactly same thing then compiled code cannot really be any bigger can what about compiled code size each were compiled with command g++ cpp -o3 non-template version bytes template version bytes sutter herb alexandrescu andrei c++ coding standards rules guidelines best practices addison-wesley henricson mats nyquist erik industrial strength c++ prentice hall isbn 0-13-120965-5 stroustrup bjarne c++ programming language special ed addison-wesley p isbn 0-201-70073-5 virtual member function sometimes called method mycroft alan c c++ exceptions | templates pdf cambridge computer laboratory - course materials 2013-14 retrieved august stroustrup bjarne c++ programming language addison wesley p isbn stroustrup bjarne c++ programming language addison wesley pp 363–365 isbn stroustrup bjarne c++ programming language addison wesley pp isbn stroustrup bjarne c++ programming language addison wesley pp isbn stroustrup bjarne c++ programming language addison wesley p isbn graziano lo russo interview with stepanov stlportorg retrieved c++ abi summary march retrieved may bjarne stroustrup's faq – c subset c++ retrieved may c9x – new c standard retrieved december c++0x support gcc retrieved october c++0x core language features vc10 table retrieved october clang - c++98 c++11 c++14 status clangllvmorg may retrieved june re convert builin-mailinfoc use better string library mailing list september retrieved march re efforts attract more users mailing list july retrieved march andrew binstock may dr dobb's interview with ken thompson retrieved february pike rob less exponentially more kreinin yossi october defective c++ retrieved february new languages why we need them mit technology review new native languages | dr dobb's further reading abrahams david gurtovoy aleksey c++ template metaprogramming concepts tools techniques from boost beyond addison-wesley isbn 0-321-22725-5 alexandrescu andrei modern c++ design generic programming design patterns applied addison-wesley isbn 0-201-70431-5 alexandrescu andrei sutter herb c++ design coding standards rules guidelines for writing programs addison-wesley isbn 0-321-11358-6 becker pete c++ standard library extensions tutorial reference addison-wesley isbn 0-321-41299-0 brokken frank c++ annotations university groningen isbn 90-367-0470-7 coplien james o advanced c++ programming styles idioms isbn 0-201-54855-0 dewhurst stephen c c++ common knowledge essential intermediate programming addison-wesley isbn 0-321-32192-8 information technology industry council october programming languages – c++ second ed geneva iso/iec 148822003e josuttis nicolai m c++ standard library tutorial reference second ed addison-wesley isbn 0-321-62321-5 koenig andrew moo barbara e accelerated c++ – practical programming by example addison-wesley isbn 0-201-70353-x lippman stanley b lajoie josée moo barbara e c++ primer fifth ed addison-wesley isbn 0-321-71411-3 lippman stanley b inside c++ object model addison-wesley isbn 0-201-83454-5 meyers scott effective c++ third ed addison-wesley isbn 0-321-33487-6 stroustrup bjarne c++ programming language fourth ed addison-wesley isbn 978-0-321-56384-2 stroustrup bjarne design evolution c++ addison-wesley isbn 0-201-54330-3 stroustrup bjarne programming principles practice using c++ second ed addison-wesley isbn 978-0-321-99278-9 sutter herb more exceptional c++ new engineering puzzles programming problems solutions addison-wesley isbn 0-201-70434-x sutter herb exceptional c++ style addison-wesley isbn 0-201-76042-8 vandevoorde david josuttis nicolai m c++ templates complete guide addison-wesley isbn 0-201-73484-2 external links find more aboutc++at wikipedia's sister projects definitions from wiktionary media from commons quotations from wikiquote textbooks from wikibooks learning resources from wikiversity wikibooks has book on topic more c++ idioms jtc1/sc22/wg21 – iso/iec c++ standard working group o n3242pdf – last publicly available committee draft iso/iec – programming languages – c++ february o n3337pdf – first draft after c++11 standard contains c++11 standard plus minor editorial changes standard c++ foundation – non-profit organization that promotes use understanding standard c++ bjarne stroustrup director organization paper by stroustrup showing timeline c++ evolution 1991–2006 bjarne stroustrup's c++ style technique faq c++ faq lite by marshall cline hamilton naomi june a-z programming languages c++ computerworld – interview with bjarne stroustrup kalev danny august state language interview with bjarne stroustrup devx quinstreet inc katdare kaustubh february dr bjarne stroustrup – inventor c++ crazyengineers stroustrup bjarne april computer history museum oral history bjarne stroustrup code practices for not breaking binary compatibility between releases c++ libraries from kde techbase optimizing software c++ – optimization guide for windows linux mac platforms by agner fog v t e iso standards by standard number list iso standards / iso romanizations / iec standards 1–9999 o o o o o o o o o o o o o o o o o o o 1073-1 o o o 8820-5 o o o o o o o o o -8-i o o o o o o o o 9000/9001 10000–19999 10118-3 o o o o o tr 12234-2 o o 13406-2 o o o o o o o o o o o wip 16612-2 ts 19775-1 19794-5 20000+ series 29199-2 o o o category v t e programming languages comparison timeline history assembly basic c c++ c cobol fortran go haskell java javascript js lisp lua objective-c pascal perl php python ruby shell smalltalk swift visual basic net vbnet more category comparison lists o alphabetical o categorical o generational o non-english-based v t e c++ c++ c++98 c++03 c++11 c++14 c++17 features classes exception handling function overloading new delete operator overloading operators templates standard library i/o streams smart pointers stl strings compilers comparison c++ compilers borland c++ borland turbo c++ c++builder clang gcc intel c++ compiler oracle solaris studio visual c++ watcom c/c++ ides comparison c ides anjuta codeblocks codelite eclipse geany microsoft visual studio netbeans kdevelop relative other languages compatibility c c++ comparison java c++ comparison algol c++ comparison programming languages category authority control gnd 4193909-8 retrieved from https//enwikipediaorg/w/indexphptitle=c%2b%2b&oldid=752096701 categories algol programming language family c++ c++ programming language family class-based programming languages cross-platform software object-oriented programming languages programming languages created programming languages with iso standard statically typed programming languages hidden categories wikipedia pages move-protected due vandalism use dmy dates from january wikipedia articles with gnd identifiers navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons wikibooks wikiquote wikiversity languages afrikaans العربية aragonés azərbaycanca تۆرکجه বাংলা bân-lâm-gú беларуская беларуская тарашкевіца‎ български bosanski brezhoneg català чӑвашла čeština dansk deutsch eesti ελληνικά español esperanto euskara فارسی français gaeilge galego 贛語 ગુજરાતી 한국어 հայերեն हिन्दी hrvatski bahasa indonesia interlingua íslenska italiano עברית basa jawa ქართული қазақша кыргызча latina latviešu lëtzebuergesch lietuvių magyar македонски മലയാളം मराठी مصرى bahasa melayu монгол မြန်မာဘာသာ nederlands नेपाल भाषा 日本語 norsk bokmål norsk nynorsk occitan oʻzbekcha/ўзбекча ਪੰਜਾਬੀ pälzisch پنجابی polski português qaraqalpaqsha română русский саха тыла scots shqip සිංහල simple english slovenčina slovenščina српски / srpski srpskohrvatski / српскохрватски suomi svenska தமிழ் తెలుగు ไทย тоҷикӣ türkçe türkmençe ᨅᨔ ᨕᨘᨁᨗ українська tiếng việt winaray 吴语 ייִדיש yorùbá 粵語 žemaitėška 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 