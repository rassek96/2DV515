session computer science from wikipedia free encyclopedia jump navigation search this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed july learn how when remove this template message computer science particular networking session semi-permanent interactive information interchange also known dialogue conversation meeting between two more communicating devices between computer user see login session session set up established at certain point time then torn down at some later point established communication session may involve more than one message each direction session typically but not always stateful meaning that at least one communicating parts needs save information about session history order be able communicate opposed stateless communication where communication consists independent requests with responses established session basic requirement perform connection-oriented communication session also basic step transmit connectionless communication modes however any unidirectional transmission does not define session communication transport may be implemented part protocols services at application layer at session layer at transport layer osi model application layer examples o http sessions which allow associating information with individual visitors o telnet remote login session session layer example o session initiation protocol sip based internet phone call transport layer example o tcp session which synonymous tcp virtual circuit tcp connection established tcp socket case transport protocols that do not implement formal session layer eg udp where sessions at application layer are generally very short-lived eg http sessions are maintained by higher level program using method defined data being exchanged for example http exchange between browser remote host may include http cookie which identifies state such unique session id information about user's preferences authorization level http/10 was thought only allow single request response during one web/http session protocol version http/11 improved this by completing common gateway interface cgi making easier maintain web session supporting http cookies file uploads most client-server sessions are maintained by transport layer - single connection for single session however each transaction phase web/http session creates separate connection maintaining session continuity between phases required session id session id embedded within links dynamic web pages so that passed back cgi cgi then uses session id ensure session continuity between transaction phases one advantage one connection-per-phase that works well over low bandwidth modem connections contents software implementation server side web sessions client side web sessions http session token session management o desktop session management o browser session management o web server session management o session management over sms see also references external links software implementation tcp sessions are typically implemented software using child processes and/or multithreading where new process thread created when computer establishes joins session http sessions are typically not implemented using one thread per session but by means database with information about state each session advantage with multiple processes threads relaxed complexity software since each thread instance with its own history encapsulated variables disadvantage large overhead terms system resources that session may be interrupted if system restarted when client may connect any server cluster servers special problem encountered maintaining consistency when servers must maintain session state client must either be directed same server for duration session servers must transmit server-side session information via shared file system database otherwise client may reconnect different server than one started session with which will cause problems when new server does not have access stored state old one server side web sessions server-side sessions are handy efficient but can become difficult handle conjunction with load-balancing/high-availability systems are not usable at all some embedded systems with no storage load-balancing problem can be solved by using shared storage by applying forced peering between each client single server cluster although this can compromise system efficiency load distribution method using server-side sessions systems without mass-storage reserve portion ram for storage session data this method applicable for servers with limited number clients eg router access point with infrequent disallowed access more than one client at time client side web sessions client-side sessions use cookies cryptographic techniques maintain state without storing much data on server when presenting dynamic web page server sends current state data client web browser form cookie client saves cookie memory on disk with each successive request client sends cookie back server server uses data remember state application for that specific client generate appropriate response this mechanism may work well some contexts however data stored on client vulnerable tampering by user by software that has access client computer use client-side sessions where confidentiality integrity are required following must be guaranteed confidentiality nothing apart from server should be able interpret session data data integrity nothing apart from server should manipulate session data accidentally maliciously authenticity nothing apart from server should be able initiate valid sessions accomplish this server needs encrypt session data before sending client modification such information by any other party should be prevented via cryptographic means transmitting state back forth with every request only practical when size cookie small essence client-side sessions trade server disk space for extra bandwidth that each web request will require moreover web browsers limit number size cookies that may be stored by web site improve efficiency allow for more session data server may compress data before creating cookie decompressing later when cookie returned by client http session token session token unique identifier that generated sent from server client identify current interaction session client usually stores sends token http cookie and/or sends parameter get post queries reason use session tokens that client only has handle identifier—all session data stored on server usually database which client does not have direct access linked that identifier examples names that some programming languages use when naming their http cookie include jsessionid jsp phpsessid php cgisessid cgi aspsessionid asp session management human–computer interaction session management process keeping track user's activity across sessions interaction with computer system typical session management tasks desktop environment include keeping track which applications are open which documents each application has opened so that same state can be restored when user logs out logs later for website session management might involve requiring user re-login if session has expired ie certain time limit has passed without user activity also used store information on server-side between http requests desktop session management desktop session manager program that can save restore desktop sessions desktop session all windows currently running their current content session management on linux-based systems provided by x session manager on microsoft windows systems session management provided by session manager subsystem smssexe user session functionality can be extended by third-party applications like twinsplay browser session management session management particularly useful web browser where user can save all open pages settings restore them at later date help recover from system application crash pages settings can also be restored on next run google chrome mozilla firefox internet explorer omniweb opera are examples web browsers that support session management session management often managed through application cookies web server session management hypertext transfer protocol http stateless client computer running web browser must establish new transmission control protocol tcp network connection web server with each new http get post request web server therefore cannot rely on established tcp network connection for longer than single http get post operation session management technique used by web developer make stateless http protocol support session state for example once user has been authenticated web server user's next http request get post should not cause web server ask for user's account password again for discussion methods used accomplish this see http cookie session id situations where multiple web servers must share knowledge session state typical cluster environment session information must be shared between cluster nodes that are running web server software methods for sharing session state between nodes cluster include multicasting session information member nodes see jgroups for one example this technique sharing session information with partner node using distributed shared memory memory virtualization sharing session information between nodes using network sockets storing session information on shared file system such distributed file system global file system storing session information outside cluster database if session information considered transient volatile data that not required for non-repudiation transactions does not contain data that subject compliance auditing us for example see health insurance portability accountability act sarbanes-oxley act for examples two laws that necessitate compliance auditing then any method storing session information can be used however if session information subject audit compliance consideration should be given method used for session storage replication clustering service-oriented architecture simple object access protocol soap messages constructed with extensible markup language xml messages can be used by consumer applications cause web servers create sessions session management over sms just http stateless protocol so sms sms became interoperable across rival networks text messaging started its ascent towards becoming ubiquitous global form communication various enterprises became interested using sms channel for commercial purposes initial services did not require session management since they were only one-way communications for example first mobile news service was delivered via sms finland today these applications are referred application-to-peer a2p messaging distinct from peer-to-peer p2p messaging development interactive enterprise applications required session management but because sms stateless protocol defined by gsm standards early implementations were controlled client-side by having end-users enter commands service identifiers manually see also https rest session id sessionization session fixation session poisoning references sessionless-oriented protocol session-oriented protocol ctia intercarrier messaging guidelines version aorg/pdf/inter-carriersmsguidelinesv31asadoptedmay2012-finalpdf hppy bthdy txt bbc news world edition december gsm doc 28/85 services facilities be provided gsm system rev2 june excerpt from how break web software functional security testing web applications web services by mike andrews james whittaker external links session tracking methods sessions by doug lea retrieved from https//enwikipediaorg/w/indexphptitle=sessioncomputerscience&oldid=748353225 categories network protocols world wide web hypertext transfer protocol hidden categories articles needing additional references from july all articles needing additional references navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages العربية български čeština dansk deutsch ελληνικά español esperanto فارسی français 한국어 հայերեն italiano עברית latviešu magyar polski português suomi 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 