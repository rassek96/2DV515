microcontroller from wikipedia free encyclopedia jump navigation search this article needs additional citations for verification please help improve this article by adding citations reliable sources unsourced material may be challenged removed november learn how when remove this template message die from intel 8-bit microcontroller that includes cpu running at mhz bytes ram bytes eprom i/o same chip two atmega microcontrollers microcontroller mcu short for microcontroller unit small computer soc on single integrated circuit containing processor core memory programmable input/output peripherals program memory form ferroelectric ram nor flash otp rom also often included on chip well typically small amount ram microcontrollers are designed for embedded applications contrast microprocessors used personal computers other general purpose applications consisting various discrete chips microcontrollers are used automatically controlled products devices such automobile engine control systems implantable medical devices remote controls office machines appliances power tools toys other embedded systems by reducing size cost compared design that uses separate microprocessor memory input/output devices microcontrollers make economical digitally control even more devices processes mixed signal microcontrollers are common integrating analog components needed control non-digital electronic systems some microcontrollers may use four-bit words operate at frequencies low khz for low power consumption single-digit milliwatts microwatts they will generally have ability retain functionality while waiting for event such button press other interrupt power consumption while sleeping cpu clock most peripherals off may be just nanowatts making many them well suited for long lasting battery applications other microcontrollers may serve performance-critical roles where they may need act more like digital signal processor dsp with higher clock speeds power consumption contents history o volumes embedded design o interrupts o programs o other microcontroller features higher integration programming environments types microcontrollers interrupt latency microcontroller embedded memory technology o data o firmware see also references external links history first microprocessor was 4-bit intel released with intel other more capable microprocessors becoming available over next several years however both processors required external chips implement working system raising total system cost making impossible economically computerize appliances smithsonian institution credits ti engineers gary boone michael cochran with successful creation first microcontroller result their work was tms which became commercially available combined read-only memory read/write memory processor clock on one chip was targeted at embedded systems partly response existence single-chip tms intel developed computer system on chip optimized for control applications intel with commercial parts first shipping combined ram rom on same chip this chip would find its way into over one billion pc keyboards other numerous applications at that time intel's president luke j valenter stated that microcontroller was one most successful company's history expanded division's budget over 25% most microcontrollers at this time had concurrent variants one had erasable eprom program memory with transparent quartz window lid package allow be erased by exposure ultraviolet light often used for prototyping other was either mask programmed rom from manufacturer for large series prom variant which was only programmable once sometimes this was signified with designation otp standing for one-time programmable prom was identical type memory eprom but because there was no way expose ultraviolet light could not be erased erasable versions required ceramic packages with quartz windows making them significantly more expensive than otp versions which could be made lower-cost opaque plastic packages for erasable variants quartz was required instead less expensive glass for its transparency ultraviolet—glass largely opaque uv—but main cost differentiator was ceramic package itself introduction eeprom memory allowed microcontrollers beginning with microchip pic16x84 be electrically erased quickly without expensive package required for eprom allowing both rapid prototyping system programming eeprom technology had been available prior this time but earlier eeprom was more expensive less durable making unsuitable for low-cost mass-produced microcontrollers same year atmel introduced first microcontroller using flash memory special type eeprom other companies rapidly followed suit with both memory types cost has plummeted over time with cheapest 8-bit microcontrollers being available for under usd quantity thousands some 32-bit microcontrollers around us$1 for similar quantities nowadays microcontrollers are cheap readily available for hobbyists with large online communities around certain processors future mram could potentially be used microcontrollers has infinite endurance its incremental semiconductor wafer process cost relatively low volumes about 55% all cpus sold world were 8-bit microcontrollers microprocessors over two billion 8-bit microcontrollers were sold according semico over four billion 8-bit microcontrollers were sold more recently semico has claimed mcu market grew 365% 12% typical home developed country likely have only four general-purpose microprocessors but around three dozen microcontrollers typical mid-range automobile has many more microcontrollers they can also be found many electrical devices such washing machines microwave ovens telephones historically 8-bit segment has dominated mcu market 16-bit microcontrollers became largest volume mcu category overtaking 8-bit devices for first time that year ic insights believes makeup mcu market will undergo substantial changes next five years with 32-bit devices steadily grabbing greater share sales unit volumes by 32-bit mcus are expected account for 55% microcontroller sales terms unit volumes 32-bit mcus are expected account for 38% microcontroller shipments while 16-bit devices will represent 34% total 4-/8-bit designs are forecast be 28% units sold that year 32-bit mcu market expected grow rapidly due increasing demand for higher levels precision embedded-processing systems growth connectivity using internet next few years complex 32-bit mcus are expected account for over 25% processing power vehicles — ic insights mcu market on migration path 32-bit arm-based devices following global crisis – worst ever annual sales decline recovery average sales price year-over-year plunging 17% – biggest reduction since 1980s average price for microcontroller was us$088 $069 for 4-/8-bit $059 for 16-bit $176 for 32-bit worldwide sales 8-bit microcontrollers were around $4 billion because they were so useful that many companies needed them be able progress into better technology 4-bit microcontrollers also see significant sales 8-bit microcontrollers can be bought for $0311 units 16-bit for $0385 units 32-bit for $0378 units but at $035 for pic 18f8720 microcontroller 80-pin tqfp package embedded design microcontroller can be considered self-contained system with processor memory peripherals can be used embedded system majority microcontrollers use today are embedded other machinery such automobiles telephones appliances peripherals for computer systems while some embedded systems are very sophisticated many have minimal requirements for memory program length with no operating system low software complexity typical input output devices include switches relays solenoids led's small custom liquid-crystal displays radio frequency devices sensors for data such temperature humidity light level etc embedded systems usually have no keyboard screen disks printers other recognizable i/o devices personal computer may lack human interaction devices any kind interrupts microcontrollers must provide real-time predictable though not necessarily fast response events embedded system they are controlling when certain events occur interrupt system can signal processor suspend processing current instruction sequence begin interrupt service routine isr interrupt handler which will perform any processing required based on source interrupt before returning original instruction sequence possible interrupt sources are device dependent often include events such internal timer overflow completing analog digital conversion logic level change on input such from button being pressed data received on communication link where power consumption important battery devices interrupts may also wake microcontroller from low-power sleep state where processor halted until required do something by peripheral event programs typically micro-controller programs must fit available on-chip memory since would be costly provide system with external expandable memory compilers assemblers are used convert both high-level assembly language codes into compact machine code for storage micro-controller's memory depending on device program memory may be permanent read-only memory that can only be programmed at factory may be field-alterable flash erasable read-only memory manufacturers have often produced special versions their micro-controllers order help hardware software development target system originally these included eprom versions that have window on top device through which program memory can be erased by ultraviolet light ready for reprogramming after programming burn test cycle since eprom versions are rare have been replaced by eeprom flash which are easier use can be erased electronically cheaper manufacture other versions may be available where rom accessed external device rather than internal memory however these are becoming rare due widespread availability cheap microcontroller programmers use field-programmable devices on micro controller may allow field update firmware permit late factory revisions products that have been assembled but not yet shipped programmable memory also reduces lead time required for deployment new product where hundreds thousands identical devices are required using parts programmed at time manufacture can be economical these mask programmed parts have program laid down same way logic chip at same time customized micro-controller incorporates block digital logic that can be personalized for additional processing capability peripherals interfaces that are adapted requirements application one example at91cap from atmel other microcontroller features microcontrollers usually contain from several dozens general purpose input/output pins gpio gpio pins are software configurable either input output state when gpio pins are configured input state they are often used read sensors external signals configured output state gpio pins can drive external devices such leds motors often indirectly through external power electronics many embedded systems need read sensors that produce analog signals this purpose analog-to-digital converter adc since processors are built interpret process digital data ie 1s 0s they are not able do anything with analog signals that may be sent by device so analog digital converter used convert incoming data into form that processor can recognize less common feature on some microcontrollers digital-to-analog converter dac that allows processor output analog signals voltage levels addition converters many embedded microprocessors include variety timers well one most common types timers programmable interval timer pit pit may either count down from some value zero up capacity count register overflowing zero once reaches zero sends interrupt processor indicating that has finished counting this useful for devices such thermostats which periodically test temperature around them see if they need turn air conditioner on heater on etc dedicated pulse width modulation pwm block makes possible for cpu control power converters resistive loads motors etc without using lots cpu resources tight timer loops universal asynchronous receiver/transmitter uart block makes possible receive transmit data over serial line with very little load on cpu dedicated on-chip hardware also often includes capabilities communicate with other devices chips digital formats such inter-integrated circuit i²c serial peripheral interface spi universal serial bus usb ethernet higher integration die pic12c508 8-bit fully static eeprom/eprom/rom-based cmos microcontroller manufactured by microchip technology using nanometre process die stm32f100c4t6b arm cortex-m3 microcontroller with kilobytes flash memory mhz central processing unit cpu motor control consumer electronics control cec functions manufactured by stmicroelectronics micro-controllers may not implement external address data bus they integrate ram non-volatile memory on same chip cpu using fewer pins chip can be placed much smaller cheaper package integrating memory other peripherals on single chip testing them unit increases cost that chip but often results decreased net cost embedded system whole even if cost cpu that has integrated peripherals slightly more than cost cpu external peripherals having fewer chips typically allows smaller cheaper circuit board reduces labor required assemble test circuit board addition tending decrease defect rate for finished assembly micro-controller single integrated circuit commonly with following features central processing unit - ranging from small simple 4-bit processors complex 32-bit 64-bit processors volatile memory ram for data storage rom eprom eeprom flash memory for program operating parameter storage discrete input output bits allowing control detection logic state individual package pin serial input/output such serial ports uarts other serial communications interfaces like i²c serial peripheral interface controller area network for system interconnect peripherals such timers event counters pwm generators watchdog clock generator - often oscillator for quartz timing crystal resonator rc circuit many include analog-to-digital converters some include digital-to-analog converters in-circuit programming in-circuit debugging support this integration drastically reduces number chips amount wiring circuit board space that would be needed produce equivalent systems using separate chips furthermore on low pin count devices particular each pin may interface several internal peripherals with pin function selected by software this allows part be used wider variety applications than if pins had dedicated functions micro-controllers have proved be highly popular embedded systems since their introduction 1970s some microcontrollers use harvard architecture separate memory buses for instructions data allowing accesses take place concurrently where harvard architecture used instruction words for processor may be different bit size than length internal memory registers for example 12-bit instructions used with 8-bit data registers decision which peripheral integrate often difficult microcontroller vendors often trade operating frequencies system design flexibility against time-to-market requirements from their customers overall lower system cost manufacturers have balance need minimize chip size against additional functionality microcontroller architectures vary widely some designs include general-purpose microprocessor cores with one more rom ram i/o functions integrated onto package other designs are purpose built for control applications micro-controller instruction set usually has many instructions intended for bit manipulation bit-wise operations make control programs more compact for example general purpose processor might require several instructions test bit register branch if bit set where micro-controller could have single instruction provide that commonly required function microcontrollers traditionally do not have math coprocessor so floating point arithmetic performed by software however some recent designs do include fpu dsp optimized features example would be microchip's pic32 mips based line programming environments microcontrollers were originally programmed only assembly language but various high-level programming languages such c python javascript are now also common use target microcontrollers embedded systems these languages are either designed specially for purpose versions general purpose languages such c programming language compilers for general purpose languages will typically have some restrictions well enhancements better support unique characteristics microcontrollers some microcontrollers have environments aid developing certain types applications microcontroller vendors often make tools freely available make easier adopt their hardware many microcontrollers are so quirky that they effectively require their own non-standard dialects c such sdcc for which prevent using standard tools such code libraries static analysis tools even for code unrelated hardware features interpreters are often used hide such low level quirks interpreter firmware also available for some microcontrollers for example basic on early microcontrollers intel basic forth on zilog z8 well some modern devices typically these interpreters support interactive programming simulators are available for some microcontrollers these allow developer analyze what behavior microcontroller their program should be if they were using actual part simulator will show internal processor state also that outputs well allowing input signals be generated while on one hand most simulators will be limited from being unable simulate much other hardware system they can exercise conditions that may otherwise be hard reproduce at will physical implementation can be quickest way debug analyze problems recent microcontrollers are often integrated with on-chip debug circuitry that when accessed by in-circuit emulator via jtag allow debugging firmware with debugger real-time ice may allow viewing and/or manipulating internal states while running tracing ice can record executed program mcu states before/after trigger point types microcontrollers see also list common microcontrollers there are several dozen microcontroller architectures vendors including arm core processors many vendors o arm cortex-m cores are specifically targeted towards microcontroller applications atmel avr 8-bit avr32 32-bit at91sam 32-bit cypress semiconductor's m8c core used their psoc programmable system-on-chip freescale coldfire 32-bit s08 8-bit freescale 68hc11 8-bit others based on motorola family intel also manufactured by nxp semiconductors infineon many others infineon 8-bit xc800 16-bit xe166 32-bit xmc4000 arm based cortex m4f 32-bit tricore 32-bit aurix tricore bit microcontrollers mips microchip technology pic 8-bit pic16 pic18 16-bit dspic33 / pic24 32-bit pic32 nxp semiconductors lpc1000 lpc2000 lpc3000 lpc4000 32-bit lpc900 lpc700 8-bit parallax propeller powerpc ise rabbit 8-bit renesas electronics rl78 16-bit mcu rx 32-bit mcu superh v850 32-bit mcu h8 r8c 16-bit mcu silicon laboratories pipelined 8-bit microcontrollers mixed-signal arm-based 32-bit microcontrollers stmicroelectronics stm8 8-bit st10 16-bit stm32 32-bit texas instruments ti msp430 16-bit msp432 32-bit c2000 32-bit toshiba tlcs-870 8-bit/16-bit many others exist some which are used very narrow range applications are more like applications processors than microcontrollers microcontroller market extremely fragmented with numerous vendors technologies markets note that many vendors sell have sold multiple architectures interrupt latency contrast general-purpose computers microcontrollers used embedded systems often seek optimize interrupt latency over instruction throughput issues include both reducing latency making be more predictable support real-time control when electronic device causes interrupt during context switch intermediate results registers have be saved before software responsible for handling interrupt can run they must also be restored after that interrupt handler finished if there are more processor registers this saving restoring process takes more time increasing latency ways reduce such context/restore latency include having relatively few registers their central processing units undesirable because slows down most non-interrupt processing substantially at least having hardware not save them all this fails if software then needs compensate by saving rest manually another technique involves spending silicon gates on shadow registers one more duplicate registers used only by interrupt software perhaps supporting dedicated stack other factors affecting interrupt latency include cycles needed complete current cpu activities minimize those costs microcontrollers tend have short pipelines often three instructions less small write buffers ensure that longer instructions are continuable restartable risc design principles ensure that most instructions take same number cycles helping avoid need for most such continuation/restart logic length any critical section that needs be interrupted entry critical section restricts concurrent data structure access when data structure must be accessed by interrupt handler critical section must block that interrupt accordingly interrupt latency increased by however long that interrupt blocked when there are hard external constraints on system latency developers often need tools measure interrupt latencies track down which critical sections cause slowdowns o one common technique just blocks all interrupts for duration critical section this easy implement but sometimes critical sections get uncomfortably long o more complex technique just blocks interrupts that may trigger access that data structure this often based on interrupt priorities which tend not correspond well relevant system data structures accordingly this technique used mostly very constrained environments o processors may have hardware support for some critical sections examples include supporting atomic access bits bytes within word other atomic access primitives like ldrex/strex exclusive access primitives introduced armv6 architecture interrupt nesting some microcontrollers allow higher priority interrupts interrupt lower priority ones this allows software manage latency by giving time-critical interrupts higher priority thus lower more predictable latency than less-critical ones trigger rate when interrupts occur back-to-back microcontrollers may avoid extra context save/restore cycle by form tail call optimization lower end microcontrollers tend support fewer interrupt latency controls than higher end ones microcontroller embedded memory technology since emergence microcontrollers many different memory technologies have been used almost all microcontrollers have at least two different kinds memory non-volatile memory for storing firmware read-write memory for temporary data data from earliest microcontrollers today six-transistor sram almost always used read/write working memory with few more transistors per bit used register file fram mram could potentially replace times denser which would make more cost effective addition sram some microcontrollers also have internal eeprom for data storage even ones that do not have any not enough are often connected external serial eeprom chip such basic stamp external serial flash memory chip few recent microcontrollers beginning have self-programmable flash memory firmware earliest microcontrollers used mask rom store firmware later microcontrollers such early versions freescale 68hc11 early pic microcontrollers had quartz windows that allowed ultraviolet light erase eprom microchip pic16c84 introduced was first microcontroller use eeprom store firmware same year atmel introduced first microcontroller using nor flash memory store firmware see also electronics portal list common microcontrollers list open-source hardware projects microbotics mcu with built wifi programmable logic controller single-board microcontroller references this article includes list references but its sources remain unclear because has insufficient inline citations please help improve this article by introducing more precise citations july learn how when remove this template message augarten stan most widely used computer on chip tms state art photographic history integrated circuit new haven new york ticknor & fields isbn 0-89919-195-9 retrieved b oral history panel on development promotion intel microcontroller pdf computer history museum oral history p retrieved b c atmel's self-programming flash microcontrollers pdf retrieved by odd jostein svendsli jim turley two percent solution tom cantrell microchip on march circuit cellar momentum carries mcus into b mcu market on migration path 32-bit arm-based devices april typically takes global economic recession upset diverse mcu marketplace that’s exactly what occurred when microcontroller business suffered its worst-ever annual sales decline 22% $111 billion bill giovino zilog buys microcontroller product lines from samsung heath steve embedded systems design edn series for design engineers ed newnes pp 11–12 isbn david harris & sarah harris digital design computer architecture second edition p morgan kaufmann isbn easy way build microcontroller project mazzei daniele montelisciani gabriele baldi giacomo fantoni gualtiero changing programming paradigm for embedded iot domain internet things wf-iot ieee 2nd world forum on milan ieee pp 239–244 doi101109/wf-iot20157389059 8052-basic microcontrollers by jan axelson edwards robert optimizing zilog z8 forth microcontroller for rapid prototyping pdf martin marietta retrieved december microchip unveils pic16c84 reprogrammable eeprom-based 8-bit microcontroller external links find more aboutmicrocontrollerat wikipedia's sister projects definitions from wiktionary media from commons textbooks from wikibooks learning resources from wikiversity microcontroller at dmoz embedded systems design magazine v t e microcontrollers main single-board microcontroller special function register architectures arm avr c166 fr-v pic rx tricore families 4-bit tlcs-47 tms s1c6x μcom-4 marc4 8-bit avr pic10/12/16/17/18 cop8 mcs-48/51 z8 ez80 68hc08/11 h8 tlcs-870 xc800 16-bit c166 cr16/cr16c h8s msp430 pic24/dspic r8c rl78 tlcs-900 xc xe166 68hc12/16 32-bit am29000 arm avr32 coldfire crx fr fr-v h8sx m32r mpc5xx pic32 powerpc propeller tlcs-900 tricore v850 64-bit arm64 powerpc64 mips64 interfaces programming in-circuit serial programming icsp in-system programming isp program debug interface pdi high-voltage serial programming hvsp high voltage parallel programming hvpp bootloader rom awire debugging debugwire joint test action group jtag in-circuit debugging icd in-circuit emulator ice in-target probe itp simulators gpsim lists common microcontrollers by manufacturer o freescale o intel see also embedded system programmable logic controller v t e cpu technologies architecture von neumann harvard modified dataflow tta instruction set asip cisc risc edge trips vliw epic misc oisc nisc zisc comparison word size 1-bit 4-bit 8-bit 9-bit 10-bit 12-bit 15-bit 16-bit 18-bit 22-bit 24-bit 25-bit 26-bit 27-bit 31-bit 32-bit 33-bit 34-bit 36-bit 39-bit 40-bit 48-bit 50-bit 60-bit 64-bit 128-bit 256-bit 512-bit variable execution instruction pipelining o bubble o operand forwarding out-of-order execution o register renaming speculative execution o branch predictor o memory dependence prediction hazards parallel level bit o bit-serial o word instruction o scalar o superscalar task o thread o process data o vector memory multithreading temporal simultaneous preemptive cooperative flynn's taxonomy sisd simd misd mimd o spmd addressing mode types digital signal processor dsp gpgpu microcontroller physics processing unit system on chip soc cellular components address generation unit agu arithmetic logic unit alu barrel shifter floating-point unit fpu back-side bus o multiplexer o demultiplexer registers memory management unit mmu translation lookaside buffer tlb cache register file microcode control unit clock rate power management apm acpi dynamic frequency scaling dynamic voltage scaling clock gating hardware security non-executable memory nx bit bounds checking intel mpx hardware restriction firmware software guard extensions intel sgx trusted execution technology secure cryptoprocessor hardware security module hengzhi chip v t e computer sizes classes computers pc stationary pc workstation desktop home personal supercomputer sff o nettop plug portable o tabletop game arcade cabinet o system board home console microconsole interactive kiosk smart tv smart speaker mobile pc laptop desktop replacement computer notebook 2-in-1 subnotebook o netbook o smartbook o ultrabook ultra-mobile pc tablet computer ultra-mobile pc 2-in-1 mobile internet device tabletop phablet information appliance handheld pc o palm-size pc o pocket pc o pocket computer o palmtop pc pda o electronic organizer o eda mobile phone o feature phone o smartphone + phablet pmp o dap e-reader handheld game console portable/mobile data terminal calculator scientific programmable graphing wearable computer digital wristwatch o calculator watch o smartwatch smartglasses smart ring mini obsolete midrange supermini server large super minisuper mainframe others microcontroller nanocomputer pizza box form factor single-board computer smartdust wireless sensor network authority control lccn sh2008020006 gnd 4127438-6 bnf cb13319620r data retrieved from https//enwikipediaorg/w/indexphptitle=microcontroller&oldid=751357785 categories digital electronics embedded systems microcontrollers central processing unit hidden categories pages using isbn magic links articles needing additional references from november all articles needing additional references all articles with unsourced statements articles with unsourced statements from february articles with unsourced statements from june articles containing potentially dated statements from all articles containing potentially dated statements vague ambiguous time from august articles lacking in-text citations from july all articles lacking in-text citations articles prone spam from december articles with dmoz links wikipedia articles with lccn identifiers wikipedia articles with gnd identifiers wikipedia articles with bnf identifiers navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons languages afrikaans العربية български bosanski català čeština dansk deutsch eesti ελληνικά español euskara فارسی français galego 한국어 हिन्दी bahasa indonesia íslenska italiano עברית basa jawa magyar македонски മലയാളം bahasa melayu မြန်မာဘာသာ nederlands 日本語 norsk bokmål norsk nynorsk ਪੰਜਾਬੀ polski português română русский shqip සිංහල simple english slovenčina slovenščina српски / srpski srpskohrvatski / српскохрватски suomi svenska தமிழ் ไทย türkçe українська tiếng việt 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 