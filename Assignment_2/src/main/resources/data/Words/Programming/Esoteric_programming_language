esoteric programming language from wikipedia free encyclopedia jump navigation search esoteric programming language sometimes shortened esolang programming language designed test boundaries computer programming language design proof concept software art hacking interface another language particularly functional programming procedural programming languages joke use esoteric distinguishes these languages from programming languages that working developers use write software usually esolang's creators do not intend language be used for mainstream programming although some esoteric features such visuospatial syntax have inspired practical applications arts such languages are often popular among hackers hobbyists usability rarely goal for esoteric programming language designers—often quite opposite their usual aim remove replace conventional language features while still maintaining language that turing-complete even one for which computational class unknown contents history esoteric programming terms o turing tarpit o stateful encoding o language paradigm o funges o one instruction set computer o nondeterministic language examples o befunge o binary lambda calculus o brainfuck o chef o false o golfscript o intercal o jsfuck o lolcode o malbolge o nvspl2 o piet o shakespeare o stuck o whitespace cultural context esolangs references further reading external links history earliest still canonical example esoteric language was intercal designed by don woods james m lyon with stated intention being unlike any other programming language authors were familiar with parodied elements established programming languages day such fortran cobol assembly language for many years intercal was represented only by paper copies intercal manual language's revival implementation c under unix stimulated wave interest intentional design esoteric computer languages wouter van oortmerssen created false small stack-oriented programming language with syntax designed make code inherently obfuscated confusing unreadable also has compiler only bytes this inspired urban müller create even smaller language now-infamous brainfuck which consists only eight recognized characters along with chris pressey's befunge like false but with two-dimensional instruction pointer brainfuck now one best-supported esoteric programming languages these are canonical examples minimal turing tarpits needlessly obfuscated language features brainfuck related p′′ family turing machines esoteric programming terms turing tarpit main article turing tarpit turing tarpit turing-complete programming language which any computable function could theoretically be written but which impractically difficult do so esoteric languages may be described turing tarpits especially when they aim minimize number language features stateful encoding method encoding programs such that each substring encoding instruction both locate next instruction list apply transform current program state single instruction always includes two sequential phases choosing operation executing list operations may either be static – remorse thrat - dynamic - remorse4ever here example based on remorse thrat select next operation list perform operation language paradigm paradigm language can fall into number categories these categories are used get general understanding way that specific language operates these include imperative languages such brainfuck which instructions describe how change data functional languages such unlambda which data code are more less interchangeable execution repeated application functions results other functions rewriting languages such thue which transformation functions are applied initial state funges funge esoteric programming language which models its programs metric spaces with coordinate systems often but not necessarily cartesian which execute instructions located at points their program space by moving instruction pointer position vector which indicates currently executing instruction through that space different instructions determine direction which instruction pointer moves consequently sequence instructions that executed current official standard for behaviour these programming languages funge-98 specification this specification generalisation semantics befunge programming language which has two-dimensional toroidal topology languages which adhere closely this standard such unefunge one-dimensional trefunge three-dimensional are sometimes called funges while more distant relatives which differ significant respects such wierd are referred fungeoids one instruction set computer one instruction set computer machine which supports only one operation nondeterministic language for deterministic language if one given current state program next state can always be predicted this not true for nondeterministic language most languages are deterministic but some languages such befunge supply built-in randomization instruction moreover languages such java2k have only randomized instructions thus getting even trivial programs have reliable output often monumental if not outright impossible task nondeterministic languages can be used explore large search spaces such grammars where exhaustive search impractical random text generators such dada engine rmutt are examples this kind nondeterminstic language more esoterically nondeterministic algorithms have been employed theoretical investigation hypercomputation examples below are some characteristic examples esoteric programming languages befunge befunge allows instruction pointer roam multiple dimensions through code for example following program displays hello world by pushing characters reverse order onto stack then printing characters loop which circulates clockwise through instructions dlrow olleh>v ^@ binary lambda calculus binary lambda calculus designed from algorithmic information theory perspective allow for densest possible code with most minimal means featuring byte self interpreter byte prime number sieve byte brainfuck interpreter brainfuck brainfuck designed for extreme minimalism leads obfuscated code with programs containing only eight distinct characters following program outputs hello world ++++++++++ chef by david morgan-mar stack-oriented programming language designed make programs look like cooking recipes programs consist title list variables their data values list stack manipulation instructions joking design principle states that program recipes should not only generate valid output but be easy prepare delicious morgan-mar notes that example hello world program with eggs cups oil would produce lot food for one person false false stack-based language with single-character commands variables for example + can be calculated by evaluating λ x → x + golfscript programs golfscript consist lists items each which pushed onto stack encountered with exception variables which have code blocks their value which case code executed intercal intercal short for compiler language with no pronounceable acronym was created parody satirize aspects various programming languages at time jsfuck jsfuck esoteric educational programming language whose alphabet syntax are subsets javascript's uses only six different characters write execute code + since subset javascript can run on javascript engine despite being esoteric language jsfuck got famous by allowing cross-site scripting attack on ebay lolcode lolcode designed resemble speech lolcats following hello world example hai can has stdio visible hai world kthxbye lolcode frequently criticized for not being very esoteric but rather being ordinary procedural language utilizing unusual vocabulary malbolge malbolge 8th circle hell was designed be most difficult esoteric programming language nvspl2 nvspl2 comparatively easy esoteric programming language with single-character commands here example 72co101co108co108co111cos 119co111co114co108co100co33cq this program displays hello world piet piet program that prints 'piet' hello world program piet piet language designed by david morgan-mar whose programs are bitmaps that look like abstract art compilation guided by pointer that moves around image from one continuous coloured region next procedures are carried through when pointer exits region there are colours for which behaviour specified colourful colours which are ordered by 6-step hue cycle 3-step brightness cycle black white which are not ordered when exiting colourful colour entering another one performed procedure determined by number steps change hue brightness black cannot be entered when pointer tries enter black region rules choosing next block are changed instead if all possible rules are tried program terminates regions outside borders image are also treated black white does not perform operations but allows pointer pass through behaviour colours other than specified left compiler interpreter variables are stored memory signed integers single stack most specified procedures deal with operations on that stack others with input/output with rules by which compilation pointer moves piet was named after dutch painter piet mondrian originally intended name mondrian was already taken shakespeare shakespeare designed make programs look like shakespearean plays for example following statement declares point program which can be reached via goto-type statement act i hamlet's insults flattery stuck stuck was created for code-golf challenges interpreted python based on languages such golfscript cjam pyth stuck programs are typically extremely short stuck supports typical binary operators ie + - / known for its single character io program flow commands for example sum series integers one can use command σ which evaluates character s requests rawinput from user stuck designed stack-based language when writing stuck values are typically pushed onto stack modified then recovered from stack whitespace whitespace uses only whitespace characters space tab return ignoring all other characters this reverse many traditional languages which do not distinguish between different whitespace characters treating tab space same also allows whitespace programs be hidden source code programs languages like c cultural context esolangs cultural context esolangs has been studied by people like geoff cox who writes that esolangs shift attention from command control toward cultural expression refusal seeing esolangs similar code art code poetry such mez breeze's mezangelle daniel temkin describes brainfuck refusing ease boundary between human expression assembly code thereby taking us on ludicrous journey logic exposing inherent conflict between human thinking computer logic he connects programming within esolang performing event score such those fluxus movement where playing out rules logic code makes point view language clear references mclean griffiths d collins n wiggins g visualisation live code electronic visualisation arts london matthew fuller software studies mit press eric s raymond new hacker's dictionary mit press p isbn 978-0-262-68092-9 b woods donald r lyon james m intercal programming language reference manual muppetlabscom archived from original on retrieved interview with wouter van oortmerssen esotericcodes july retrieved december cozens simon advanced perl programming o'reilly media p isbn 978-0-596-00456-9 final acme curiosity one my favourites acme chef implementation david morgan-mar's chef programming language chef programs are expressed form recipes b morgan-mar david chef dm's esoteric programming languages self-published retrieved morgan-mar david chef sample program hello world souffle dm's esoteric programming languages self-published retrieved van oortmerssen wouter false programming language self-published retrieved february bailey jane february bidding on security daily wtf retrieved march vanunu oded february ebay platform exposed severe vulnerability check point retrieved march lolcodecriticism esolangsorg retrieved november lolcode often criticized for not being esoteric enough by design lolcode actually normal procedural language behind its lulzy syntax this stark contrast from true esolangs like befunge which features two-dimensional almost game board-like syntax for this reason lolcode technically categorized weirdlang morgan-mar david january piet programming language retrieved may cox p b stuck at esolang esoteric programming languages wiki cox p temkin daniel jan glitch && human/computer interaction nooart journal objectless art temkin daniel brainfuck media-n journal spring retrieved further reading camille paloque-bergès langages ésotériques poétique des codes sur le réseau informatique archives contemporaines isbn 978-2-914610-70-4 geoff cox speaking code coding aesthetic political expression mit press isbn 978-0-262-01836-4 external links wikimedia commons has media related esoteric programming languages obfuscated programming languages at dmoz esolang — wiki devoted esoteric programming languages v t e types programming languages actor-based array aspect-oriented class-based concatenative concurrent data-structured dataflow declarative domain-specific dynamic esoteric event-driven extensible functional imperative logic macro metaprogramming+multi-paradigm object-based object-oriented pipeline procedural prototype-based reflective rule-based scripting synchronous templating assembly compiled interpreted machine low-level high-level very high-level first generation second generation third generation fourth generation fifth generation non-english-based visual retrieved from https//enwikipediaorg/w/indexphptitle=esotericprogramminglanguage&oldid=751636107 categories esoteric programming languages programming language classification hidden categories commons category with local link same on wikidata articles with dmoz links pages using isbn magic links navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version other projects wikimedia commons languages català čeština deutsch español euskara فارسی français 한국어 íslenska italiano magyar nederlands 日本語 polski português română русиньскый русский suomi ไทย українська 中文 edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 