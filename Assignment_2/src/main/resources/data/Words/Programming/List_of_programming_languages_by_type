list programming languages by type from wikipedia free encyclopedia jump navigation search programming language lists alphabetical categorical chronological generational v t e this list notable programming languages grouped by type contents array language assembly languages authoring languages beginend languages constraint programming command line interface languages compiled languages concurrent languages curly-bracket languages dataflow languages data-oriented languages data-structured languages decision table languages declarative languages embeddable languages o source code + server side + client side o object code educational languages esoteric languages extension languages fourth-generation languages functional languages o pure o impure hardware description languages o hdls for analog circuit design o hdls for digital circuit design imperative languages interactive mode languages interpreted languages iterative languages languages by memory management type o garbage collected languages o languages with manual memory management list-based languages – lisps little languages logic-based languages machine languages macro languages o textual substitution macro languages o application macro languages metaprogramming languages multiparadigm languages numerical analysis non-english-based languages object-oriented class-based languages o multiple dispatch o single dispatch object-oriented prototype-based languages off-side rule languages parallel languages procedural languages reflective languages rule-based languages scripting languages stack-based languages synchronous languages syntax handling languages transformation languages visual languages wirth languages xml-based languages see also references external links array language see also categoryarray programming languages array programming also known vector multidimensional languages generalize operations on scalars apply transparently vectors matrices higher-dimensional arrays a+ ada analytica apl chapel fortran freemat gauss j julia k matlab octave q r s s-lang sequencel x10 zpl idl wolfram language assembly languages main article list assemblers assembly languages directly correspond machine language see below so machine code instructions appear form understandable by humans assembly languages lets programmers use symbolic addresses which assembler converts absolute addresses most assemblers also support macros symbolic constants authoring languages main article authoring language bigwig web design development language pilot tutor lasso beginend languages languages which blocks code are delimited by special keywords opposed curly bracket brace characters { } those where blocks are formed indicated by their indentation ada algol eiffel fortran julia lua modula-2 oberon pascal ruby partially closures delimited by {} sql constraint programming further information list constraint programming languages command line interface languages command-line interface cli languages are also called batch languages job control languages examples 4dos extended command-line shell for ibm pcs bash bourne-again shell from gnu/fsf chain datapoint clist mvs command list cms exec csh tcsh c-like shell from bill joy at uc berkeley dcl digital command language – standard cli language for vms dec compaq hp dos batch language standard cli/batch language for ibm pc running dos operating systems popular before windows exec expect unix automation test tool fish unix shell hamilton c shell c shell for windows jcl punch card-oriented batch control language for ibm system/360 family mainframes ksh standard unix shell written by david korn rc command-line shell for plan rexx sh standard unix shell written by stephen r bourne tacl tandem advanced command language windows batch language windows batch file language understood by commandcom cmdexe windows powershell microsoft net-based cli zsh unix shell compiled languages these are languages typically processed by compilers though theoretically any language can be compiled interpreted see also compiled language actionscript ada multi-purpose language algol extremely influential language design – second high level language compiler o small machine algol like language ateji px extension java language for parallelism basic some dialects including first version dartmouth basic bcpl blue c one most widely used procedural programming languages c++ one most widely used object-oriented oo languages specially used large-scale highly complex high-performance software systems c compiled into intermediate language which generates native image at runtime ceylon compiled into jvm bytecode clipper programming language for dos-based software cleo clear language for expressing orders used compiler for british leo computers cobol cobra common lisp crystal curl d attempts c++ done right philosophy dasl compiles into java javascript jsp flex etc which are further compiled into war file delphi borland's object pascal development system dibol digital interactive business oriented language dylan ec eiffel object-oriented language developed by bertrand meyer o sather o ubercode emacs lisp erlang f compiled into intermediate language which generates native image at runtime factor forth professional systems like vfx swiftforth fortran first high-level compiled language from ibm john backus et al gauss go gosu compiled into jvm bytecode groovy compiled into jvm bytecode haskell harbour java usually compiled into jvm bytecode although ahead-of-time aot compilers exist that compile machine code jovial julia compiled into machine code at runtime via jit compiler labview lansa mercury nemerle compiled into intermediate language bytecode nim objective-c pascal most implementations plus python compiled into intermediate virtual machine bytecode rpg report program generator rust scala compiled into jvm bytecode scheme some implementations eg gambit sequencel – purely functional automatically parallelizing race-free simula first object-oriented language developed by ole-johan dahl kristen nygaard smalltalk generally compiled platform independent bytecode that runs on virtual machine swift ml o standard ml sml + alice o ocaml turing vala compiler for gobject type system visual basic earlier versions compiled directly native runtime recent net versions compile into intermediate language that just-in-time compiled into native image at runtime visual foxpro visual prolog x++ x xl z++ concurrent languages see also list concurrent parallel programming languages categoryconcurrent programming languages message passing languages provide language constructs for concurrency predominant paradigm for concurrency mainstream languages such java shared memory concurrency based on monitors concurrent languages that make use message passing have generally been inspired by csp π-calculus but have had little commercial success except for ada erlang ada multipurpose language concurrent programming only one option available ada multi-purpose language alef – concurrent language with threads message passing used for systems programming early versions plan from bell labs ateji px extension java language for parallelism chuck – domain specific programming language for audio precise control over concurrency timing cilk – concurrent c cω – c omega research language extending c uses asynchronous communication clojure – dialect lisp for java virtual machine chapel co-array fortran concurrent pascal by brinch-hansen curry e – uses promises ensures deadlocks cannot occur eiffel through scoop mechanism simple concurrent object-oriented computation erlang – uses asynchronous message passing with nothing shared go java o join java – concurrent language based on java o x10 julia join-calculus joule – dataflow language communicates by message passing limbo – relative alef used for systems programming inferno operating system multilisp – scheme variant extended support parallelism occam – influenced heavily by communicating sequential processes csp o occam-π – modern variant occam which incorporates ideas from milner's π-calculus orc oz – multiparadigm language supports shared-state message-passing concurrency futures mozart programming system cross-platform oz pict – essentially executable implementation milner's π-calculus rust – actor-based salsa – actor language with token-passing join first-class continuations for distributed computing over internet scala – implements erlang-style actors on jvm sequencel – purely functional automatically parallelizing race-free sr – research language unified parallel c xproc – xml processing language enabling concurrency curly-bracket languages curly-bracket curly-brace programming languages have syntax that defines statement blocks using curly bracket brace characters { } this syntax originated with bcpl was popularized by c many curly-bracket languages descend from are strongly influenced by c examples curly-bracket languages include abcl/c+ alef o limbo + go autohotkey awk b bc bcpl c – developed circa at bell labs c++ c caché ceylon chuck – audio programming language cilk – concurrent c for multithreaded parallel programming coffee cyclone – safer c variant d dart dasl – based on java e ec ecmascript o actionscript o ecmascript for xml o javascript o jscript o typescript fantom gml game maker language glsl ici java o golo o groovy o join java o kotlin o processing o tea o x10 o xtend lpc msl mel nemerle – combines c ml features provides syntax extension abilities pcastl perl php pico pike r rust s-lang scala sed supercollider swift unrealscript windows powershell microsoft net-based cli yorick dataflow languages dataflow programming languages rely on usually visual representation flow data specify program frequently used for reacting discrete events for processing streams data examples dataflow languages include hartmann pipelines g used labview lucid max oz prograph pure data reaktor streambase streamsql eventflow vee vhdl vissim webmethods flow data-oriented languages data-oriented languages provide powerful ways searching manipulating relations that have been described entity relationship tables which map one set things into other sets examples data-oriented languages include clarion clipper dbase relational database access language mumps ansi standard general purpose language with specializations for database work caché similar mumps sparql sql tutorial d – see also third manifesto visual foxpro – native rdbms engine object-oriented rad webdna webql wolfram language data-structured languages see also categorydata-structured programming languages data-structured languages are those where logic structured ways similar their data such languages are generally well suited reflection introspection there are three main types array-based list-based stack-based assembly languages that statically link data inline with instructions can also be considered data-structured most primitive way decision table languages decision tables can be used aid clarifying logic before writing program any language but 1960s number languages were developed where main logic expressed directly form decision table including filetab declarative languages see also categorydeclarative programming languages declarative languages describe problem rather than defining solution declarative programming stands contrast imperative programming via imperative programming languages where serial orders imperatives are given computer addition examples given just below all pure functional logic-based programming languages are also declarative fact functional logical constitute usual subcategories declarative category analytica ant partially declarative languages partially imperative programming dasl partially declarative languages partially imperative programming lustre mercury metapost modelica prolog oz sequencel – purely functional automatically parallelizing race-free sparql sql wolfram language xbase xsl transformations embeddable languages source code source embeddable languages embed small pieces executable code inside piece free-form text often web page client-side embedded languages are limited by abilities browser intended client they aim provide dynamism web pages without need recontact server server-side embedded languages are much more flexible since almost any language can be built into server aim having fragments server-side code embedded web page generate additional markup dynamically code itself disappears when page served be replaced by its output server side php vbscript smx – dedicated web pages webdna – dedicated database-driven websites javascript nodejs above examples are particularly dedicated this purpose large number other languages such erlang scala perl ruby can be adapted for instance by being made into apache modules client side actionscript java javascript ecmascript jscript vbscript windows only object code wide variety dynamic scripting languages can be embedded compiled executable code basically object code for language's interpreter needs be linked into executable source code fragments for embedded language can then be passed evaluation function strings application control languages can be implemented this way if source code input by user languages with small interpreters are preferred angelscript ch eel io julia lua minid python ruby via mruby squirrel tcl educational languages main article list educational programming languages languages developed primarily for purpose teaching learning programming alice blockly blue comal elan logo kturtle modula-2 pascal scheme scratch snap turing wolfram language esoteric languages see also categoryesoteric programming languages esoteric programming language programming language designed test boundaries computer programming language design proof concept joke beatnik befunge brainfuck chef intercal lolcode malbolge piet shakespeare whitespace extension languages extension programming languages are languages embedded into another program used harness its features extension scripts ateji px – extension java language for parallelism autolisp specific autocad beanshell cal c/alc/side guile emacs lisp javascript some dialects eg jscript lua – eg embedded many games opencl – extension c c++ use gpu parallel extensions cpu optimj – extension java programming language with language support for writing optimization models powerful abstractions for bulk data processing perl pike python embedded maya blender other 3-d animation packages rexx ruby google sketchup s-lang sql squirrel tcl vim script vba windows powershell fourth-generation languages see also category4gl fourth-generation programming languages are high-level languages built around database systems they are generally used commercial environments abap corvision csc's graphtalk easytrieve report generator now ca-easytrieve plus focus ibm informix-4gl / aubit-4gl lansa linc 4gl mapper unisys/sperry – now part bis mark-iv sterling/informatics now visionbuilder ca progress 4gl sas transcript not based on database still goal work at higher level abstraction than 3gls ubercode vhll very high level language uniface visual dataflex visual foxpro xbase functional languages see also categoryfunctional languages functional programming languages define programs subroutines mathematical functions many so-called functional languages are impure containing imperative features many functional languages are tied mathematical calculation tools functional languages include pure agda charity clean coq gallina curry elm frege haskell hope joy mercury miranda idris sequencel impure apl ats cal c c++ since c++11 c ceylon d dart curl ecmascript o actionscript o ecmascript for xml o javascript o jscript elm erlang o elixir o lfe f fpr groovy hop j java since version julia lisp o clojure o common lisp o dylan o emacs lisp o lfe o little b o logo o scheme + racket formerly plt scheme o tea mathematica ml o standard ml sml + alice o ocaml nemerle opal ops5 poplog python q equational programming language q programming language from kx systems r rebol ruby refal rust scala spreadsheets wolfram language hardware description languages main article list hardware description languages electronics hardware description language hdl specialized computer language used describe structure design operation electronic circuits most commonly digital logic circuits two most widely used well-supported hdl varieties used industry are verilog vhdl hardware description languages include hdls for analog circuit design verilog-ams verilog for analog mixed-signal vhdl-ams vhdl with analog/mixed-signal extension hdls for digital circuit design advanced boolean expression language abel altera hardware description language ahdl bluespec chisel confluence ella esysnet handel-c hhdl impulse c jhdl lava lola m myhdl palasm ruby hardware description language systemc systemverilog verilog vhdl vhsic hdl very high speed integrated circuit hardware description language imperative languages imperative programming languages may be multi-paradigm appear other classifications here list programming languages that follow imperative paradigm ada algol basic blue c c++ c ceylon cobol d ec ecmascript javascript fortran gauss go groovy java julia lua matlab machine language modula-2 modula-3 mumps nim oberon object pascal ocaml pascal perl php prose python ruby rust wolfram language interactive mode languages interactive mode languages act kind shell expressions statements can be entered one at time result their evaluation seen immediately interactive mode also known repl read–eval–print loop apl basic some dialects clojure common lisp dart with observatory dartium's developer tools erlang f forth fpr fril gauss groovy haskell with ghci hugs interpreter idl j javascript using command line tools like nodejs rhino developer tools built into web browsers like firefox chrome julia lua mumps ansi standard general purpose language maple mathematica wolfram language matlab ml perl pike postscript python prose r rebol rexx ruby with irb scala scheme smalltalk anywhere smalltalk environment s-lang with s-lang shell slsh tcl with tcl shell tclsh windows powershell microsoft net-based cli visual foxpro microsoft interpreted languages interpreted languages are programming languages which programs may be executed from source code form by interpreter theoretically any language can be compiled interpreted so term interpreted language generally refers languages that are commonly interpreted rather than compiled ant apl autohotkey scripting language autoit scripting language basic some dialects databus later versions added optional compiling dm eiffel via melting ice technology eiffelstudio forth interactive shell only otherwise compiled native threaded code fpr virtual machine text compiled linked lists linked lists are interpreted game maker language golo groovy haskell ghci hugs nhc yhc etc j julia compiled on fly machine code but transpiler julia2c also available javascript lisp early versions pre-1962 some experimental ones production lisp systems are compilers but many them still provide interpreter if needed o tea lpc lua mumps ansi standard general purpose language maple mathematica matlab oriel pascal early implementations pcastl perl php pikt postscript prose python rexx r rebol ruby s-lang standard ml sml spin tcl ti-basic torquescript thinbasic scripting language vbscript windows powershell microsoft net-based cli wolfram language some scripting languages below iterative languages iterative languages are built around offering generators aldor alphard c clu cobra ecmascript version eiffel through agents icon ipl-v julia lua php python sather xl iterator construct languages by memory management type garbage collected languages ] this section needs expansion you can help by adding november c java erlang go python lisporiginator o arc o clojure o common lisp o dylan o emacs lisp o racket o scheme o logo ml o standard ml sml + alice o ocaml languages with manual memory management ] this section needs expansion you can help by adding november ada c/c++ fortran rust list-based languages – lisps list-based languages are type data-structured language that are based upon list data structure lisp o arc o clojure o common lisp o dylan o emacs lisp o racket o scheme o logo fpr joy r tcl o tea trac little languages little languages serve specialized problem domain awk – can serve prototyping language for c shares similar syntax comet – used solve complex combinatorial optimization problems areas such resource allocation scheduling sql – has only few keywords not all constructs needed for full programming language – many database management systems extend sql with additional constructs stored procedure language logic-based languages see also categorylogic programming languages logic-based languages specify set attributes that solution must have rather than set steps obtain solution examples alf alma-0 clacl clac-language curry fril janus λprolog logic programming language featuring polymorphic typing modular programming higher-order programming leda oz mozart programming system cross-platform oz poplog prolog formulates data program evaluation mechanism special form mathematical logic called horn logic general proving mechanism called logical resolution o mercury based on prolog o strawberry prolog standard prolog with some extensions o visual prolog object-oriented prolog extension roop machine languages machine languages are directly executable by computer's cpu they are typically formulated bit patterns usually represented octal hexadecimal each bit pattern causes circuits cpu execute one fundamental operations hardware activation specific electrical inputs eg cpu package pins for microprocessors logical settings for cpu state values control processor's computation individual machine languages are specific family processors machine-language code for one family processors cannot run directly on processors another family unless processors question have additional hardware support for example dec vax processors included pdp-11 compatibility mode they are essentially always defined by cpu developer not by 3rd parties symbolic version processor's assembly language also defined by developer most cases some commonly used machine code instruction sets are arm o original 32-bit o 16-bit thumb instructions subset registers used o 64-bit major architecture change more registers dec pdp-6/pdp-10/decsystem-20 dec pdp-11 influenced vax m68000 dec vax dec alpha intel o zilog z80 x86 o 16-bit x86 first used intel + intel latter was used first early ibm pc + intel + intel first x86 processor with protected mode used ibm at o ia-32 introduced o x86-64 original specification was created by amd there are vendor variants but they're essentially same + amd's amd64 + intel's intel ibm system/360 successors including z/architecture mips motorola motorola family cpus used early apple macintosh early sun computers mos technology 65xx o cpu for vic-20 apple ii atari o cpu for commodore o western design center 65816/65802 cpu for apple iigs variant super nintendo entertainment system national ns320xx power architecture o power first used ibm rs/6000 o powerpc – used power macintosh technology used many older generation game consoles sun oracle sparc mcst elbrus macro languages textual substitution macro languages see also categorymacro programming languages macro languages transform one source code file into another macro essentially short piece text that expands into longer one not too be confused with hygienic macros possibly with parameter substitution they are often used preprocess source code preprocessors can also supply facilities like file inclusion macro languages may be restricted acting on specially labeled code regions pre-fixed with case c preprocessor alternatively they may not but this case still often undesirable for instance expand macro embedded string literal so they still need rudimentary awareness syntax that being case they are often still applicable more than one language contrast with source-embeddable languages like php which are fully featured cpp c preprocessor m4 originally from at&t bundled with unix application macro languages scripting languages such tcl ecmascript actionscript ecmascript for xml javascript jscript have been embedded into applications these are sometimes called macro languages although somewhat different sense textual-substitution macros like m4 metaprogramming languages metaprogramming writing programs that write manipulate other programs themselves their data that do part work that otherwise done at run time during compile time many cases this allows programmers get more done same amount time they would take write all code manually c++ curl d ec elixir forth groovy haskell julia lisp lua maude system mathematica metaocaml nemerle perl python rebol ruby rust scheme sequencel smalltalk wolfram language xl concept programming multiparadigm languages main article comparison multi-paradigm programming languages multiparadigm languages support more than one programming paradigm they allow program use more than one programming style goal allow programmers use best tool for job admitting that no one paradigm solves all problems easiest most efficient way ada concurrent distributed generic template metaprogramming imperative object-oriented class-based alf functional logic alma-0 constraint imperative logic apl functional imperative beta functional imperative object-oriented class-based c++ generic imperative object-oriented class-based functional c generic imperative object-oriented class-based functional declarative ceylon generic imperative object-oriented class-based functional declarative chuck imperative object-oriented time-based concurrent on-the-fly cobra generic imperative object-oriented class-based functional contractual common lisp functional imperative object-oriented class-based aspect-oriented user may add further paradigms eg logic curl functional imperative object-oriented class-based metaprogramming curry concurrent functional logic d generic imperative functional object-oriented class-based metaprogramming delphi generic imperative object-oriented class-based metaprogramming dylan functional object-oriented class-based ec generic imperative object-oriented class-based ecmascript functional imperative object-oriented prototype-based o actionscript o ecmascript for xml o javascript o jscript eiffel imperative object-oriented class-based generic functional agents concurrent scoop f functional generic object-oriented class-based language-oriented fantom functional object-oriented class-based fpr function-level object-oriented class-based go functional object-oriented class-based imperative procedural groovy functional object-oriented class-basedimperativeprocedural harbour hop j functional imperative object-oriented class-based julia imperative multiple dispatch object-oriented functional metaprogramming labview dataflow visual lava object-oriented class-based visual leda functional imperative logic object-oriented class-based lua functional imperative object-oriented prototype-based mercury functional logical object-oriented metaobject protocols object-oriented class-based prototype-based nemerle functional object-oriented class-based imperative metaprogramming objective-c imperative object-oriented class-based reflective ocaml functional imperative object-oriented class-based oz functional evaluation eager lazy logic constraint imperative object-oriented class-based concurrent distributed mozart programming system cross-platform oz object pascal imperative object-oriented class-based perl imperative functional can't be purely functional object-oriented class-oriented aspect-oriented through modules php imperative object-oriented pike poplog functional imperative logic prograph dataflow object-oriented class-based visual python functional compiled interpreted object-oriented class-based imperative metaprogramming extension impure interactive mode iterative reflective scripting r array interpreted impure interactive mode list-based object-oriented prototype-based scripting racket functional imperative object-oriented class-based can be extended by user rebol functional imperative object-oriented prototype-based metaprogramming dialected roop imperative logic object-oriented class-based rule-based ruby imperative functional object-oriented class-based metaprogramming rust concurrent functional imperative object-oriented scala functional object-oriented seed7 imperative object-oriented generic sisal concurrent dataflow functional spreadsheets functional visual tcl functional imperative object-oriented class-based o tea functional imperative object-oriented class-based windows powershell functional imperative pipeline object-oriented class-based wolfram language xl concept programming approach numerical analysis aimms ampl analytica gauss gams fortran julia klerer-may system mathematica matlab prose seneca – oberon variant wolfram language non-english-based languages main article non-english-based programming languages arlogo – arabic chinese basic – chinese fjölnir – icelandic language symbolique d'enseignement – french lexico – spanish rapira – russian object-oriented class-based languages class-based object-oriented programming languages support objects defined by their class class definitions include member data message passing key concept if not key concept object-oriented languages polymorphic functions parameterized by class some their arguments are typically called methods languages with single dispatch classes typically also include method definitions languages with multiple dispatch methods are defined by generic functions there are exceptions where single dispatch methods are generic functions eg bigloo's object system multiple dispatch common lisp cecil dylan julia single dispatch actionscript actor ada ada multi-purpose language beta blue c++ c ceylon oxygene formerly known chrome chuck cobra coldfusion curl d dasl delphi e gnu e ec eiffel o sather o ubercode f-script fortran fortress fpr gambas game maker language harbour j java o processing o groovy o join java o tea o x10 labview lava lua modula-2 data abstraction information hiding strong typing full modularity o modula-3 added more object-oriented features modula-2 nemerle ibm netrexx oberon-2 full object-orientation equivalence original strongly typed wirthian manner object pascal object rexx objective-c superset c adding smalltalk derived object model message passing syntax ocaml oz mozart programming system perl php pike prograph python interpretive language optionally object-oriented realbasic ruby scala simula first object-oriented language developed by ole-johan dahl kristen nygaard smalltalk pure object-orientation developed at xerox parc o bistro o f-script o little smalltalk o squeak + scratch o ibm visualage o visualworks spin supercollider transcript programmer does not get pick objects vbscript microsoft office 'macro scripting' language visual dataflex visual foxpro visual prolog x++ xotcl object-oriented prototype-based languages prototype-based languages are object-oriented languages where distinction between classes instances has been removed abcl/1 abcl/r abcl/r2 abcl/c plus agora cecil ecmascript o actionscript o ecmascript for xml o javascript first named mocha then livescript o jscript etoys squeak io lisaac lua moo newtonscript obliq r rebol self first prototype-based language derived from smalltalk tads off-side rule languages off-side rule languages are those where blocks are formed indicated by their indentation iswim abstract language that introduced rule abc python's parent o python + cobra + boo + genie miranda haskell's parent o orwell o haskell + curry f nim occam spin xl parallel languages c++ fortran scala programming language procedural languages procedural programming languages are based on concept unit scope data viewing range executable code statement procedural program composed one more units modules either user coded provided code library each module composed one more procedures also called function routine subroutine method depending on language examples procedural languages include ada multi-purpose language algol extremely influential language design – second high level language compiler o small machine algol like language alma-0 basic basics are innocent most modularity especially versions before about bcpl bliss blue c c++ c with objects plus much else such generics through stl c similar java/c++ ceylon chuck c/java-like syntax with new syntax elements for time parallelism cobol cobra coldfusion combined programming language cpl curl d dasl partly declarative partly imperative ec ecmascript o actionscript o ecmascript for xml o javascript first named mocha then livescript o jscript eiffel fortran better modularity later standards o f gauss go harbour hypertalk java o groovy o join java o tea jovial julia lansa lasso modula-2 fundamentally based on modules mathematica matlab mumps more modular its first release than language time should have been standard has become still more modular since then nemerle oberon oberon-2 improved smaller faster safer follow-ons for modula-2 o component pascal o lagoona o seneca occam oriel pascal successor algol predecessor modula-2 o free pascal fpc o object pascal delphi pcastl perl pike pl/c pl/i large general purpose language originally for ibm mainframes plus prose python r rapira rpg available only ibm's system i midrange computers rust s-lang vbscript visual basic visual foxpro wolfram language x++ x xl reflective languages main article list reflective programming languages reflective languages let programs examine possibly modify their high level structure at runtime this most common high-level virtual machine programming languages like smalltalk less common lower-level programming languages like c languages platforms supporting reflection see also aspect-oriented programming befunge c ceylon charm chuck cobra component pascal blackbox component builder curl delphi ec ecmascript o actionscript o ecmascript for xml o javascript o jscript eiffel elixir forth harbour java o java virtual machine o groovy o join java o x10 julia lisp o clojure o common lisp o dylan o logo o scheme lua maude system net framework common language runtime oberon-2 – eth oberon system objective-c pcastl perl php pico poplog o pop-11 prolog python rebol ruby smalltalk pure object-orientation originally from xerox parc o bistro o f-script o little smalltalk o self o squeak o ibm visualage o visualworks snobol tcl wolfram language o xotcl x++ xl rule-based languages rule-based languages instantiate rules when activated by conditions set data all possible activations some set selected statements belonging those rules execute rule-based languages include awk clips constraint handling rules drools goal agent programming language jess make ops5 prolog toontalk – robots are rules mathematica xslt wolfram language scripting languages scripting language has two seemingly different but fact similar meanings traditional sense scripting languages are designed automate frequently used tasks that usually involve calling passing commands external programs many complex application programs provide built-in languages that let users automate tasks those that are interpretive are often called scripting languages recently many applications have built-in traditional scripting languages such perl visual basic but there are quite few native scripting languages still use many scripting languages are compiled bytecode then this usually platform-independent bytecode run through virtual machine compare java virtual machine applescript awk beanshell bash ch embeddable c/c++ interpreter clist coldfusion ecmascript o actionscript o ecmascript for xml o javascript first named mocha then livescript o jscript cms exec exec f-script falcon game maker language gml ici io jass golo groovy join java julia still compiled on fly machine code lasso lua maxscript mel oriel perl php intended for web servers pikt python r rebol rexx ruby smalltalk s-lang sed tea tcl torquescript transcript vbscript webdna dedicated database-driven websites windows powershell microsoft net-based cli winbatch many shell command languages such unix shell dcl on vms have powerful scripting abilities stack-based languages see also categorystack-oriented programming languages stack-based languages are type data-structured language that are based upon stack data structure beatnik colorforth factor forth joy all functions work on parameter stacks instead named parameters piet poplog via its implementation language pop-11 postscript rpl synchronous languages see also categorysynchronous programming languages synchronous programming languages are optimized for programming reactive systems systems that are often interrupted must respond quickly many such systems are also called realtime systems are used often embedded systems examples argus averest esterel lustre synccharts syntax handling languages these languages assist with generating lexical analyzers parsers for context-free grammars antlr coco/r ebnf with semantics gnu bison fsf's version yacc gnu flex fsf's version lex glex/gyacc gobosoft compiler compiler eiffel lex lexical analysis from bell labs m4 yacc yet another compiler compiler from bell labs javacc transformation languages main article transformation language visual languages see also categoryvisual programming languages visual programming languages let users specify programs two-or more-dimensional way instead one-dimensional text strings via graphic layouts various types analytica blockly code drakon fabrik g used labview lava limnor max nxt-g pict programming language prograph pure data quartz composer scratch written based on squeak version smalltalk snap simulink spreadsheets subtext toontalk vee vissim vvvv eicaslab some dataflow programming languages are also visual languages wirth languages computer scientist niklaus wirth designed implemented several influential languages algol w euler modula modula-2 modula etc variants o obliq modula variant oberon oberon oberon-07 oberon-2 o component pascal o lagoona o oberon-2 pascal o object pascal umbrella name for delphi free pascal oxygene others xml-based languages these are languages based on that operate on xml ant cω ecmascript for xml mxml lzx xaml xpath xquery xproc xslt see also programming paradigms iec 61131-3 – standard for plc programming languages educational programming language esoteric programming language references objects sql are collections records called tables full programming language can specify algorithms irrespective runtime thus algorithm can be considered generate usable results contrast sql can only select records which are limited current collection data at hand system rather than produce statement correctness result external links categories programming languages – content this page pivoted by language most common coding languages today – content most common programming languages for coding retrieved from https//enwikipediaorg/w/indexphptitle=listofprogramminglanguagesbytype&oldid=752060180 categories lists programming languages array programming languages hidden categories articles be expanded from november all articles be expanded articles using small message boxes all articles with unsourced statements articles with unsourced statements from march articles with unsourced statements from august navigation menu personal tools not logged talk contributions create account log namespaces article talk variants views read edit view history more search navigation main page contents featured content current events random article donate wikipedia wikipedia store interaction help about wikipedia community portal recent changes contact page tools what links here related changes upload file special pages permanent link page information wikidata item cite this page print/export create book download pdf printable version languages беларуская हिन्दी magyar română русский edit links this page was last modified on november at text available under creative commons attribution-sharealike license additional terms may apply by using this site you agree terms use privacy policy wikipedia® registered trademark wikimedia foundation inc non-profit organization privacy policy about wikipedia disclaimers contact wikipedia developers cookie statement mobile view 